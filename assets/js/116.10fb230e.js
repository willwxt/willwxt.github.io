(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{473:function(t,a,s){"use strict";s.r(a);var e=s(45),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mysql数据库面试题-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据库面试题-重点"}},[t._v("#")]),t._v(" MySQL数据库面试题(重点)")]),t._v(" "),s("h2",{attrs:{id:"为什么要使用数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用数据库"}},[t._v("#")]),t._v(" 为什么要使用数据库")]),t._v(" "),s("h3",{attrs:{id:"数据保存在内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在内存"}},[t._v("#")]),t._v(" 数据保存在内存")]),t._v(" "),s("p",[t._v("优点：存取速度快")]),t._v(" "),s("p",[t._v("缺点：数据不能永久保存")]),t._v(" "),s("h3",{attrs:{id:"数据保存在文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在文件"}},[t._v("#")]),t._v(" 数据保存在文件")]),t._v(" "),s("p",[t._v("优点：数据永久保存")]),t._v(" "),s("p",[t._v("缺点：1）速度比内存操作慢，频繁的IO操作。")]),t._v(" "),s("p",[t._v("​\t\t\t2）查询数据不方便")]),t._v(" "),s("h3",{attrs:{id:"数据保存在数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据保存在数据库"}},[t._v("#")]),t._v(" 数据保存在数据库")]),t._v(" "),s("p",[t._v("1）数据永久保存")]),t._v(" "),s("p",[t._v("2）使用SQL语句，查询方便效率高。")]),t._v(" "),s("p",[t._v("3）管理数据方便")]),t._v(" "),s("h2",{attrs:{id:"什么是sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是sql"}},[t._v("#")]),t._v(" 什么是SQL？")]),t._v(" "),s("p",[t._v("结构化查询语言(StructuredQueryLanguage)简称SQL，是一种数据库查询语言。")]),t._v(" "),s("p",[t._v("作用：用于存取数据、查询、更新和管理关系数据库系统。")]),t._v(" "),s("h2",{attrs:{id:"什么是mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是mysql"}},[t._v("#")]),t._v(" 什么是MySQL?")]),t._v(" "),s("p",[t._v("MySQL是一个关系型数据库管理系统，由瑞典MySQLAB公司开发，属于Oracle旗下产品。MySQL是最流行的关系型数据库管理系统之一，在WEB应用方面，MySQL是最好的RDBMS(RelationalDatabaseManagementSystem，关系数据库管理系统)应用软件之一。在Java企业级开发中非常常用，因为MySQL是开源免费的，并且方便扩展。")]),t._v(" "),s("h2",{attrs:{id:"数据库三大范式是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库三大范式是什么"}},[t._v("#")]),t._v(" 数据库三大范式是什么")]),t._v(" "),s("p",[t._v("第一范式：每个列都不可以再拆分。")]),t._v(" "),s("p",[t._v("第二范式：在第一范式的基础上，非主键列完全依赖于主键，而不能是依赖于主键的一部分。")]),t._v(" "),s("p",[t._v("第三范式：在第二范式的基础上，非主键列只依赖于主键，不依赖于其他非主键。")]),t._v(" "),s("p",[t._v("在设计数据库结构的时候，要尽量遵守三范式，如果不遵守，必须有足够的理由。比如性能。事实上我们经常会为了性能而妥协数据库的设计。")]),t._v(" "),s("h2",{attrs:{id:"mysql有关权限的表都有哪几个"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql有关权限的表都有哪几个"}},[t._v("#")]),t._v(" mysql有关权限的表都有哪几个")]),t._v(" "),s("p",[t._v("MySQL服务器通过权限表来控制用户对数据库的访问，权限表存放在mysql数据库里，由mysql_install_db脚本初始化。这些权限表分别user，db，table_priv，columns_priv和host。下面分别介绍一下这些表的结构和内容：")]),t._v(" "),s("p",[t._v("user权限表：记录允许连接到服务器的用户帐号信息，里面的权限是全局级的。")]),t._v(" "),s("p",[t._v("db权限表：记录各个帐号在各个数据库上的操作权限。")]),t._v(" "),s("p",[t._v("table_priv权限表：记录数据表级的操作权限。")]),t._v(" "),s("p",[t._v("columns_priv权限表：记录数据列级的操作权限。")]),t._v(" "),s("p",[t._v("host权限表：配合db权限表对给定主机上数据库级操作权限作更细致的控制。这个权限表不受GRANT和REVOKE语句的影响。")]),t._v(" "),s("h2",{attrs:{id:"mysql的binlog有有几种录入格式-分别有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql的binlog有有几种录入格式-分别有什么区别"}},[t._v("#")]),t._v(" MySQL的binlog有有几种录入格式？分别有什么区别？")]),t._v(" "),s("p",[t._v("有三种格式，statement，row和mixed。")]),t._v(" "),s("ul",[s("li",[t._v("statement模式下，每一条会修改数据的sql都会记录在binlog中。不需要记录每一行的变化，减少了binlog日志量，节约了IO，提高性能。由于sql的执行是有上下文的，因此在保存的时候需要保存相关的信息，同时还有一些使用了函数之类的语句无法被记录复制。")]),t._v(" "),s("li",[t._v("row级别下，不记录sql语句上下文相关信息，仅保存哪条记录被修改。记录单元为每一行的改动，基本是可以全部记下来但是由于很多操作，会导致大量行的改动(比如altertable)，因此这种模式的文件保存的信息太多，日志量太大。")]),t._v(" "),s("li",[t._v("mixed，一种折中的方案，普通操作使用statement记录，当无法使用statement的时候使用row。")])]),t._v(" "),s("p",[t._v("此外，新版的MySQL中对row级别也做了一些优化，当表结构发生变化的时候，会记录语句而不是逐行记录。")]),t._v(" "),s("h1",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h2",{attrs:{id:"mysql有哪些数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql有哪些数据类型"}},[t._v("#")]),t._v(" mysql有哪些数据类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分类")]),t._v(" "),s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("整数类型")])]),t._v(" "),s("td",[t._v("tinyInt")]),t._v(" "),s("td",[t._v("很小的整数(8位二进制)")])]),t._v(" "),s("tr",[s("td",[t._v("smallint")]),t._v(" "),s("td",[t._v("小的整数(16位二进制)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("mediumint")]),t._v(" "),s("td",[t._v("中等大小的整数(24位二进制)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("int(integer)")]),t._v(" "),s("td",[t._v("普通大小的整数(32位二进制)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("小数类型")])]),t._v(" "),s("td",[t._v("float")]),t._v(" "),s("td",[t._v("单精度浮点数")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("双精度浮点数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("decimal(m,d)")]),t._v(" "),s("td",[t._v("压缩严格的定点数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("日期类型")])]),t._v(" "),s("td",[t._v("year")]),t._v(" "),s("td",[t._v("YYYY1901~2155")])]),t._v(" "),s("tr",[s("td",[t._v("time")]),t._v(" "),s("td",[t._v("HH:MM:SS-838:59:59~838:59:59")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("date")]),t._v(" "),s("td",[t._v("YYYYMM-DD1000-01-01~9999-12-3")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("datetime")]),t._v(" "),s("td",[t._v("YYYYMM-DDHH:MM:SS1000-01-0100:00:00~9999-12-3123:59:59")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("timestamp")]),t._v(" "),s("td",[t._v("YYYYMM-DDHH:MM:SS1970010100:00:01UTC~2038-01-1903:14:07UTC")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("文本、二进制类型")])]),t._v(" "),s("td",[s("strong",[t._v("CHAR(M)")])]),t._v(" "),s("td",[t._v("M为0~65535之间的整数")])]),t._v(" "),s("tr",[s("td",[t._v("VARCHAR(M)")]),t._v(" "),s("td",[t._v("M为0~65535之间的整数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("TINYBLOB")]),t._v(" "),s("td",[t._v("允许长度0~255字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("BLOB")]),t._v(" "),s("td",[t._v("允许长度0~65535字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMBLOB")]),t._v(" "),s("td",[t._v("允许长度0~167772150字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("LONGBLOB")]),t._v(" "),s("td",[t._v("允许长度0~4294967295字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("TINYTEXT")]),t._v(" "),s("td",[t._v("允许长度0~255字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("TEXT")]),t._v(" "),s("td",[t._v("允许长度0~65535字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMTEXT")]),t._v(" "),s("td",[t._v("允许长度0~167772150字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("LONGTEXT")]),t._v(" "),s("td",[t._v("允许长度0~4294967295字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("VARBINARY(M)")]),t._v(" "),s("td",[t._v("允许长度0~M个字节的变长字节字符串")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("BINARY(M)")]),t._v(" "),s("td",[t._v("允许长度0~M个字节的定长字节字符串")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("strong",[t._v("整数类型")]),t._v("，包括TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，分别表示1字节、2字节、3字节、4字节、8字节整数。任何整数类型都可以加上UNSIGNED属性，表示数据是无符号的，即非负整数。")]),t._v(" "),s("p",[t._v("长度：整数类型可以被指定长度，例如：INT(11)表示长度为11的INT类型。长度在大多数场景是没有意义的，它不会限制值的合法范围，只会影响显示字符的个数，而且需要和UNSIGNEDZEROFILL属性配合使用才有意义。")]),t._v(" "),s("p",[t._v("例子，假定类型设定为INT(5)，属性为UNSIGNEDZEROFILL，如果用户插入的数据为12的话，那么数据库实际存储数据为00012。")]),t._v(" "),s("p",[s("strong",[t._v("实数类型")]),t._v("，包括FLOAT、DOUBLE、DECIMAL。DECIMAL可以用于存储比BIGINT还大的整型，能存储精确的小数。而FLOAT和DOUBLE是有取值范围的，并支持使用标准的浮点进行近似计算。\n计算时FLOAT和DOUBLE相比DECIMAL效率更高一些，DECIMAL你可以理解成是用字符串进行处理。")]),t._v(" "),s("p",[s("strong",[t._v("字符串类型")]),t._v("，包括VARCHAR、CHAR、TEXT、BLOBVARCHAR用于存储可变长字符串，它比定长类型更节省空间。\nVARCHAR使用额外1或2个字节存储字符串长度。列长度小于255字节时，使用1字节表示，否则使用2字节表示。\nVARCHAR存储的内容超出设置的长度时，内容会被截断。\nCHAR是定长的，根据定义的字符串长度分配足够的空间。\nCHAR会根据需要使用空格进行填充方便比较。\nCHAR适合存储很短的字符串，或者所有值都接近同一个长度。\nCHAR存储的内容超出设置的长度时，内容同样会被截断。")]),t._v(" "),s("p",[s("strong",[t._v("使用策略：")])]),t._v(" "),s("p",[t._v("对于经常变更的数据来说，CHAR比VARCHAR更好，因为CHAR不容易产生碎片。")]),t._v(" "),s("p",[t._v("对于非常短的列，CHAR比VARCHAR在存储空间上更有效率。")]),t._v(" "),s("p",[t._v("使用时要注意只分配需要的空间，更长的列排序时会消耗更多内存。尽量避免使用TEXT/BLOB类型，查询时会使用临时表，导致严重的性能开销。")]),t._v(" "),s("p",[s("strong",[t._v("枚举类型（ENUM）")]),t._v("，把不重复的数据存储为一个预定义的集合。有时可以使用ENUM代替常用的字符串类型。ENUM存储非常紧凑，会把列表值压缩到一个或两个字节。ENUM在内部存储时，其实存的是整数。尽量避免使用数字作为ENUM枚举的常量，因为容易混乱。排序是按照内部存储的整数")]),t._v(" "),s("p",[s("strong",[t._v("日期和时间类型")]),t._v("，尽量使用timestamp，空间效率高于datetime，用整数保存时间戳通常不方便处理。\n如果需要存储微妙，可以使用bigint存储。")]),t._v(" "),s("p",[t._v("看到这里，这道真题是不是就比较容易回答了。")]),t._v(" "),s("h1",{attrs:{id:"引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引擎"}},[t._v("#")]),t._v(" 引擎")]),t._v(" "),s("h2",{attrs:{id:"mysql存储引擎myisam与innodb区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储引擎myisam与innodb区别"}},[t._v("#")]),t._v(" MySQL存储引擎MyISAM与InnoDB区别")]),t._v(" "),s("p",[t._v("存储引擎Storageengine：MySQL中的数据、索引以及其他对象是如何存储的，是一套文件系统的实现。")]),t._v(" "),s("p",[t._v("常用的存储引擎有以下：")]),t._v(" "),s("p",[t._v("**Innodb引擎：**Innodb引擎提供了对数据库ACID事务的支持。并且还提供了行级锁和外键的约束。它的设计的目标就是处理大数据容量的数据库系统。")]),t._v(" "),s("p",[t._v("**MyIASM引擎(原本Mysql的默认引擎)：**不提供事务的支持，也不支持行级锁和外键。")]),t._v(" "),s("p",[t._v("**MEMORY引擎：**所有的数据都在内存中，数据的处理速度快，但是安全性不高。")]),t._v(" "),s("p",[s("strong",[t._v("MyISAM与InnoDB区别")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("MyISAM")]),t._v(" "),s("th",[t._v("Innodb")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("存储结构")]),t._v(" "),s("td",[t._v("每张表被存放在三个文件：frm-表格定义、MYD(MYData)-数据文件、MYI(MYIndex)-索引文件")]),t._v(" "),s("td",[t._v("所有的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间文件），InnoDB表的大小只受限于操作系统文件的大小，一般为2GB")])]),t._v(" "),s("tr",[s("td",[t._v("存储空间")]),t._v(" "),s("td",[t._v("MyISAM可被压缩，存储空间较小")]),t._v(" "),s("td",[t._v("InnoDB的表需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引")])]),t._v(" "),s("tr",[s("td",[t._v("可移植性、备份及恢复")]),t._v(" "),s("td",[t._v("由于MyISAM的数据是以文件的形式存储，所以在跨平台的数据转移中会很方便。在备份和恢复时可单独针对某个表进行操作")]),t._v(" "),s("td",[t._v("免费的方案可以是拷贝数据文件、备份binlog，或者用mysqldump，在数据量达到几十G的时候就相对痛苦了")])]),t._v(" "),s("tr",[s("td",[t._v("文件格式")]),t._v(" "),s("td",[t._v("数据和索引是分别存储的，数据.MYD，索引.MYI")]),t._v(" "),s("td",[t._v("数据和索引是集中存储的，.ibd")])]),t._v(" "),s("tr",[s("td",[t._v("记录存储顺序")]),t._v(" "),s("td",[t._v("按记录插入顺序保存")]),t._v(" "),s("td",[t._v("按主键大小有序插入")])]),t._v(" "),s("tr",[s("td",[t._v("外键")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("事务")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("锁支持（锁是避免资源争用的一个机制，MySQL锁对用户几乎是透明的）")]),t._v(" "),s("td",[t._v("表级锁定")]),t._v(" "),s("td",[t._v("行级锁定、表级锁定，锁定力度小并发能力高")])]),t._v(" "),s("tr",[s("td",[t._v("SELECT")]),t._v(" "),s("td",[t._v("MyISAM更优")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("INSERT、UPDATE、DELETE")]),t._v(" "),s("td",[t._v("InnoDB更优")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("selectcount(*)")]),t._v(" "),s("td",[t._v("myisam更快，因为myisam内部维护了一个计数器，可以直接调取。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("索引的实现方式")]),t._v(" "),s("td",[t._v("B+树索引，myisam是堆表")]),t._v(" "),s("td",[t._v("B+树索引，Innodb是索引组织表")])]),t._v(" "),s("tr",[s("td",[t._v("哈希索引")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("全文索引")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("不支持")])])])]),t._v(" "),s("h2",{attrs:{id:"myisam索引与innodb索引的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#myisam索引与innodb索引的区别"}},[t._v("#")]),t._v(" "),s("strong",[t._v("MyISAM索引与InnoDB索引的区别？")])]),t._v(" "),s("ul",[s("li",[t._v("InnoDB索引是聚簇索引，MyISAM索引是非聚簇索引。")]),t._v(" "),s("li",[t._v("InnoDB的主键索引的叶子节点存储着行数据，因此主键索引非常高效。")]),t._v(" "),s("li",[t._v("MyISAM索引的叶子节点存储的是行数据地址，需要再寻址一次才能得到数据。")]),t._v(" "),s("li",[t._v("InnoDB非主键索引的叶子节点存储的是主键和其他带索引的列数据，因此查询时做到覆盖索引会非常高效。")])]),t._v(" "),s("h2",{attrs:{id:"innodb引擎的4大特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb引擎的4大特性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("InnoDB引擎的4大特性")])]),t._v(" "),s("ul",[s("li",[t._v("插入缓冲（insertbuffer)")]),t._v(" "),s("li",[t._v("二次写(doublewrite)")]),t._v(" "),s("li",[t._v("自适应哈希索引(ahi)")]),t._v(" "),s("li",[t._v("预读(readahead)")])]),t._v(" "),s("h2",{attrs:{id:"存储引擎选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎选择"}},[t._v("#")]),t._v(" 存储引擎选择")]),t._v(" "),s("p",[t._v("如果没有特别的需求，使用默认的Innodb即可。\nMyISAM：以读写插入为主的应用程序，比如博客系统、新闻门户网站。\nInnodb：更新（删除）操作频率也高，或者要保证数据的完整性；并发量高，\n支持事务和外键。比如OA自动化办公系统。")]),t._v(" "),s("h1",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("h2",{attrs:{id:"什么是索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是索引"}},[t._v("#")]),t._v(" 什么是索引？")]),t._v(" "),s("p",[t._v("索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它\n们包含着对数据表里所有记录的引用指针。\n索引是一种数据结构。数据库索引，是数据库管理系统中一个排序的数据结构，\n以协助快速查询、更新数据库表中数据。索引的实现通常使用B树及其变种\nB+树。\n更通俗的说，索引就相当于目录。为了方便查找书中的内容，通过对内容建立索\n引形成目录。索引是一个文件，它是要占据物理空间的。")]),t._v(" "),s("h2",{attrs:{id:"索引有哪些优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引有哪些优缺点"}},[t._v("#")]),t._v(" 索引有哪些优缺点？")]),t._v(" "),s("h2",{attrs:{id:"索引使用场景-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引使用场景-重点"}},[t._v("#")]),t._v(" 索引使用场景（重点）")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("explain select * from innodb1 where id < 20;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("id")]),t._v(" "),s("th",[t._v("select_type")]),t._v(" "),s("th",[t._v("table")]),t._v(" "),s("th",[t._v("partitiions")]),t._v(" "),s("th",[t._v("type")]),t._v(" "),s("th",[t._v("possible_keys")]),t._v(" "),s("th",[t._v("key")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("innodb1")]),t._v(" "),s("td",[t._v("(Null)")]),t._v(" "),s("td",[t._v("range")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("PRIMARY")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("strong",[t._v("可选的索引")])]),t._v(" "),s("td",[s("strong",[t._v("真正使用的索引")])])])])]),t._v(" "),s("p",[t._v("上图中，根据id查询记录，因为id字段仅建立了主键索引，因此此SQL执行可选\n的索引只有主键索引，如果有多个，最终会选一个较优的作为检索的依据。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1‐‐增加一个没有建立索引的字段\n2 alter table innodb1 add sex char(1);\n3‐‐按sex检索时可选的索引为null\n4 explain select * from innodb1 where sex = '男';\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("explain select * from innodb1 where sex = '男';\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("id")]),t._v(" "),s("th",[t._v("select_type")]),t._v(" "),s("th",[t._v("table")]),t._v(" "),s("th",[t._v("partitiions")]),t._v(" "),s("th",[t._v("type")]),t._v(" "),s("th",[t._v("possible_keys")]),t._v(" "),s("th",[t._v("key")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("innodb1")]),t._v(" "),s("td",[t._v("(Null)")]),t._v(" "),s("td",[t._v("ALL")]),t._v(" "),s("td",[t._v("(Null)")]),t._v(" "),s("td",[t._v("(Null)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("strong",[t._v("可选的索引")])]),t._v(" "),s("td",[s("strong",[t._v("真正使用的索引")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("可以尝试在一个字段未建立索引时，根据该字段查询的效率，然后对该字段建立索引（altertable表名addindex(字段名)），同样的SQL执行的效率，你会发现查询效率\n会有明显的提升（数据量越大越明显）。")])]),t._v(" "),s("p",[t._v("orderby\n当我们使用orderby将查询结果按照某个字段排序时，如果该字段没有建立索\n引，那么执行计划会将查询出的所有数据使用外部排序（将数据从硬盘分批读取\n到内存使用内部排序，最后合并排序结果），这个操作是很影响性能的，因为需\n要将查询涉及到的所有数据从磁盘中读到内存（如果单条数据过大或者数据量过\n多都会降低效率），更无论读到内存之后的排序了。\n但是如果我们对该字段建立索引altertable表名addindex(字段名)，那么由于索引\n本身是有序的，因此直接按照索引的顺序和映射关系逐条取出数据即可。而且如\n果分页的，那么只用取出索引表某个范围内的索引对应的数据，而不用像上述那")]),t._v(" "),s("p",[t._v("取出所有数据进行排序再返回某个范围内的数据。（从磁盘取数据是最影响性能\n的）\njoin\n对join语句匹配关系（on）涉及的字段建立索引能够提高效率\n索引覆盖\n如果要查询的字段都建立过索引，那么引擎会直接在索引表中查询而不会访问原\n始数据（否则只要有一个字段没有建立索引就会做全表扫描），这叫索引覆盖。\n因此我们需要尽可能的在select后只写必要的查询字段，以增加索引覆盖的几\n率。\n这里值得注意的是不要想着为每个字段建立索引，因为优先使用索引的优势就在\n于其体积小。")]),t._v(" "),s("h2",{attrs:{id:"索引有哪几种类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引有哪几种类型"}},[t._v("#")]),t._v(" 索引有哪几种类型？")]),t._v(" "),s("p",[t._v("**主键索引:**数据列不允许重复，不允许为NULL，\n一个表只能有一个主键。")]),t._v(" "),s("p",[t._v("**唯一索引:**数据列不允许重复，允许为NULL值，\n一个表允许多个列创建唯一索引。")]),t._v(" "),s("ul",[s("li",[t._v("可以通过ALTERTABLEtable_nameADDUNIQUE(column);\n创建唯一索引")]),t._v(" "),s("li",[t._v("可以通过ALTERTABLEtable_nameADDUNIQUE(column1,column2);\n创建唯一组合索引")])]),t._v(" "),s("p",[t._v("**普通索引:**基本的索引类型，没有唯一性的限制，允许为NULL值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("可以通过ALTERTABLEtable_nameADDINDEXindex_name(column);\n创建普通索引")])]),t._v(" "),s("li",[s("p",[t._v("可以通过ALTERTABLEtable_nameADDINDEXindex_name(column1,column2,column3);\n创建组合索引")])]),t._v(" "),s("li",[s("p",[t._v("**全文索引：**是目前搜索引擎使用的一种关键技术。\n可以通过ALTERTABLEtable_nameADDFULLTEXT(column);\n创建全文索引")])])]),t._v(" "),s("h2",{attrs:{id:"索引的数据结构-b树-hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的数据结构-b树-hash"}},[t._v("#")]),t._v(" 索引的数据结构（b树，hash）")]),t._v(" "),s("p",[t._v("索引的数据结构和具体存储引擎的实现有关，在MySQL中使用较多的索引有")]),t._v(" "),s("p",[t._v("Hash索引，B+树索引等，而我们经常使用的InnoDB存储引擎的默认索引实现为：B+树索引。对于哈希索引来说，底层的数据结构就是哈希表，因此在绝大多数需求为单条记录查询的时候，可以选择哈希索引，查询性能快；其余大部分场景，建议选择BTree索引。")]),t._v(" "),s("p",[t._v("1）B树索引mysql通过存储引擎取数据，基本上90%的人用的就是InnoDB了，按照实现方式分，InnoDB的索引类型目前只有两种：BTREE（B树）索引和HASH索引。B树索引是Mysql数据库中使用频繁的索引类型，基本所有存储引擎都支持")]),t._v(" "),s("p",[t._v("BTree索引。通常我们说的索引不出意外指的就是（B树）索引（实际是用B+树实现的，因为在查看表索引时，mysql一律打印BTREE，所以简称为B树索引）")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/rjzheng/p/12316685.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("B树简单结构"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("查询方式：")]),t._v(" "),s("p",[t._v("主键索引区:PI(关联保存的时数据的地址)按主键查询,")]),t._v(" "),s("p",[t._v("普通索引区:si(关联的id的地址,然后再到达上面的地址)。所以按主键查询,速度快")]),t._v(" "),s("p",[t._v("B+tree性质：")]),t._v(" "),s("p",[t._v("1.）n棵子tree的节点包含n个关键字，不用来保存数据而是保存数据的索引。")]),t._v(" "),s("p",[t._v("2.）所有的叶子结点中包含了全部关键字的信息，及指向含这些关键字记录的指针，且叶子结点本身依关键字的大小自小而大顺序链接。")]),t._v(" "),s("p",[t._v("3.）所有的非终端结点可以看成是索引部分，结点中仅含其子树中的大（或小）关键字。")]),t._v(" "),s("p",[t._v("4.）B+树中，数据对象的插入和删除仅在叶节点上进行。")]),t._v(" "),s("p",[t._v("5.）B+树有2个头指针，一个是树的根节点，一个是小关键码的叶节点。2）哈希索引简要说下，类似于数据结构中简单实现的HASH表（散列表）一样，当我们在")]),t._v(" "),s("p",[t._v("mysql中用哈希索引时，主要就是通过Hash算法（常见的Hash算法有直接定址法、平方取中法、折叠法、除数取余法、随机数法），将数据库字段数据转换成定长的Hash值，与这条数据的行指针一并存入Hash表的对应位置；如果发生")]),t._v(" "),s("p",[t._v("Hash碰撞（两个不同关键字的Hash值相同），则在对应Hash键下以链表形式存储。当然这只是简略模拟图。")]),t._v(" "),s("p",[s("svg",{attrs:{id:"SvgjsSvg1464",width:"671.633544921875",height:"290",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[s("defs",{attrs:{id:"SvgjsDefs1465"}},[s("marker",{attrs:{id:"SvgjsMarker1619",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1620",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1623",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1624",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1627",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1628",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1631",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1632",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1635",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1636",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})])]),s("rect",{attrs:{id:"SvgjsRect1466",width:"671.633544921875",height:"290",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1467",transform:"translate(66.63920593261719,64.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1468",d:"M0 0L120 0L120 40 L0 40Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1469",d:"M120 0L240 0L240 40 L120 40Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1470",d:"M0 40L120 40L120 80 L0 80Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1471",d:"M120 40L240 40L240 80 L120 80Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1472",d:"M0 80L120 80L120 120 L0 120Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1473",d:"M120 80L240 80L240 120 L120 120Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1474",d:"M0 120L120 120L120 160 L0 160Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1475",d:"M120 120L240 120L240 160 L120 160Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1476",d:"M0 160L120 160L120 200 L0 200Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1477",d:"M120 160L240 160L240 200 L120 200Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("g",{attrs:{id:"SvgjsG1478"}},[s("text",{attrs:{id:"SvgjsText1479","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1480",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1481"}},[t._v("2033")])])])]),s("g",{attrs:{id:"SvgjsG1482"}},[s("text",{attrs:{id:"SvgjsText1483","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1484",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1485"}},[t._v("0x75")])])])]),s("g",{attrs:{id:"SvgjsG1486"}},[s("text",{attrs:{id:"SvgjsText1487","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"48",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1488",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1489"}},[t._v("2085")])])])]),s("g",{attrs:{id:"SvgjsG1490"}},[s("text",{attrs:{id:"SvgjsText1491","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"48",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1492",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1493"}},[t._v("0x7F")])])])]),s("g",{attrs:{id:"SvgjsG1494"}},[s("text",{attrs:{id:"SvgjsText1495","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"88",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1496",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1497"}},[t._v("2097")])])])]),s("g",{attrs:{id:"SvgjsG1498"}},[s("text",{attrs:{id:"SvgjsText1499","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"88",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1500",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1501"}},[t._v("0x86")])])])]),s("g",{attrs:{id:"SvgjsG1502"}},[s("text",{attrs:{id:"SvgjsText1503","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"128",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1504",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1505"}},[t._v("3012")])])])]),s("g",{attrs:{id:"SvgjsG1506"}},[s("text",{attrs:{id:"SvgjsText1507","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"128",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1508",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1509"}},[t._v("0x68")])])])]),s("g",{attrs:{id:"SvgjsG1510"}},[s("text",{attrs:{id:"SvgjsText1511","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"168",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1512",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1513"}},[t._v("3036")])])])]),s("g",{attrs:{id:"SvgjsG1514"}},[s("text",{attrs:{id:"SvgjsText1515","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"168",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1516",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1517"}},[t._v("0x3C")])])])])]),s("g",{attrs:{id:"SvgjsG1518",transform:"translate(406.6392059326172,64.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1519",d:"M0 0L120 0L120 40 L0 40Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1520",d:"M120 0L240 0L240 40 L120 40Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1521",d:"M0 40L120 40L120 80 L0 80Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1522",d:"M120 40L240 40L240 80 L120 80Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1523",d:"M0 80L120 80L120 120 L0 120Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1524",d:"M120 80L240 80L240 120 L120 120Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1525",d:"M0 120L120 120L120 160 L0 160Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1526",d:"M120 120L240 120L240 160 L120 160Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1527",d:"M0 160L120 160L120 200 L0 200Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("path",{attrs:{id:"SvgjsPath1528",d:"M120 160L240 160L240 200 L120 200Z",stroke:"rgba(102, 102, 102,1)","stroke-width":"1","fill-opacity":"1",fill:"#cce5ff"}}),s("g",{attrs:{id:"SvgjsG1529"}},[s("text",{attrs:{id:"SvgjsText1530","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1531",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1532"}},[t._v("1")])])])]),s("g",{attrs:{id:"SvgjsG1533"}},[s("text",{attrs:{id:"SvgjsText1534","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1535",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1536"}},[t._v("July")])])])]),s("g",{attrs:{id:"SvgjsG1537"}},[s("text",{attrs:{id:"SvgjsText1538","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"48",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1539",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1540"}},[t._v("2")])])])]),s("g",{attrs:{id:"SvgjsG1541"}},[s("text",{attrs:{id:"SvgjsText1542","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"48",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1543",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1544"}},[t._v("Mary")])])])]),s("g",{attrs:{id:"SvgjsG1545"}},[s("text",{attrs:{id:"SvgjsText1546","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"88",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1547",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1548"}},[t._v("3")])])])]),s("g",{attrs:{id:"SvgjsG1549"}},[s("text",{attrs:{id:"SvgjsText1550","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"88",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1551",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1552"}},[t._v("Paul")])])])]),s("g",{attrs:{id:"SvgjsG1553"}},[s("text",{attrs:{id:"SvgjsText1554","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"128",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1555",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1556"}},[t._v("4")])])])]),s("g",{attrs:{id:"SvgjsG1557"}},[s("text",{attrs:{id:"SvgjsText1558","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"128",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1559",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1560"}},[t._v("Rose")])])])]),s("g",{attrs:{id:"SvgjsG1561"}},[s("text",{attrs:{id:"SvgjsText1562","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"168",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1563",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1564"}},[t._v("5")])])])]),s("g",{attrs:{id:"SvgjsG1565"}},[s("text",{attrs:{id:"SvgjsText1566","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"168",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1567",dy:"20",x:"180"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1568"}},[t._v("Yale")])])])])]),s("g",{attrs:{id:"SvgjsG1569",transform:"translate(66.63920593261719,24.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1570",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1571"}},[s("text",{attrs:{id:"SvgjsText1572","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1573",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1574"}},[t._v("hash value")])])])])]),s("g",{attrs:{id:"SvgjsG1575",transform:"translate(186.6392059326172,24.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1576",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1577"}},[s("text",{attrs:{id:"SvgjsText1578","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1579",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1580"}},[t._v("address")])])])])]),s("g",{attrs:{id:"SvgjsG1581",transform:"translate(466.6392059326172,24.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1582",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1583"}},[s("text",{attrs:{id:"SvgjsText1584","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1585",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1586"}},[t._v("table record")])])])])]),s("g",{attrs:{id:"SvgjsG1587",transform:"translate(25.00286865234375,64.99999237060547)"}},[s("path",{attrs:{id:"SvgjsPath1588",d:"M 0 0L 41.63633728027344 0L 41.63633728027344 41.18183135986328L 0 41.18183135986328Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1589"}},[s("text",{attrs:{id:"SvgjsText1590","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"11.46591567993164",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1591",dy:"16",x:"21"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1592"}},[t._v("1201")])])])])]),s("g",{attrs:{id:"SvgjsG1593",transform:"translate(25.00286865234375,106.18182373046875)"}},[s("path",{attrs:{id:"SvgjsPath1594",d:"M 0 0L 41.63633728027344 0L 41.63633728027344 41.18183135986328L 0 41.18183135986328Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1595"}},[s("text",{attrs:{id:"SvgjsText1596","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"11.46591567993164",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1597",dy:"16",x:"21"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1598"}},[t._v("1202")])])])])]),s("g",{attrs:{id:"SvgjsG1599",transform:"translate(25.00286865234375,147.36365509033203)"}},[s("path",{attrs:{id:"SvgjsPath1600",d:"M 0 0L 41.63633728027344 0L 41.63633728027344 41.18183135986328L 0 41.18183135986328Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1601"}},[s("text",{attrs:{id:"SvgjsText1602","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"11.46591567993164",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1603",dy:"16",x:"21"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1604"}},[t._v("1203")])])])])]),s("g",{attrs:{id:"SvgjsG1605",transform:"translate(25.00286865234375,188.5454864501953)"}},[s("path",{attrs:{id:"SvgjsPath1606",d:"M 0 0L 41.63633728027344 0L 41.63633728027344 41.18183135986328L 0 41.18183135986328Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1607"}},[s("text",{attrs:{id:"SvgjsText1608","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"11.46591567993164",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1609",dy:"16",x:"21"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1610"}},[t._v("1204")])])])])]),s("g",{attrs:{id:"SvgjsG1611",transform:"translate(25.00286865234375,223.8181610107422)"}},[s("path",{attrs:{id:"SvgjsPath1612",d:"M 0 0L 41.63633728027344 0L 41.63633728027344 41.18183135986328L 0 41.18183135986328Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1613"}},[s("text",{attrs:{id:"SvgjsText1614","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"11.46591567993164",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1615",dy:"16",x:"21"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1616"}},[t._v("1205")])])])])]),s("g",{attrs:{id:"SvgjsG1617"}},[s("path",{attrs:{id:"SvgjsPath1618",d:"M305.00286865234375 84.18182373046875L407.00286865234375 124.18182373046875",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1619)"}})]),s("g",{attrs:{id:"SvgjsG1621"}},[s("path",{attrs:{id:"SvgjsPath1622",d:"M306.00286865234375 125.18182373046875L407.00286865234375 205.18182373046875",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1623)"}})]),s("g",{attrs:{id:"SvgjsG1625"}},[s("path",{attrs:{id:"SvgjsPath1626",d:"M305.00286865234375 203.18182373046875L407.00286865234375 243.18182373046875",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1627)"}})]),s("g",{attrs:{id:"SvgjsG1629"}},[s("path",{attrs:{id:"SvgjsPath1630",d:"M304.00286865234375 244.18182373046875L406.6392059326172 164.99999237060547",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1631)"}})]),s("g",{attrs:{id:"SvgjsG1633"}},[s("path",{attrs:{id:"SvgjsPath1634",d:"M306.6392059326172 164.99999237060547L407.00286865234375 85.18182373046875",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1635)"}})])])]),t._v(" "),s("h3",{attrs:{id:"索引的基本原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的基本原理"}},[t._v("#")]),t._v(" 索引的基本原理")]),t._v(" "),s("p",[t._v("索引用来快速地寻找那些具有特定值的记录。如果没有索引，一般来说执行查询时遍历整张表。")]),t._v(" "),s("p",[t._v("索引的原理很简单，就是把无序的数据变成有序的查询")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("把创建了索引的列的内容进行排序")])]),t._v(" "),s("li",[s("p",[t._v("对排序结果生成倒排表")])]),t._v(" "),s("li",[s("p",[t._v("在倒排表内容上拼上数据地址链")])]),t._v(" "),s("li",[s("p",[t._v("在查询的时候，先拿到倒排表内容，再取出数据地址链，从而拿到具体数据")])])]),t._v(" "),s("h3",{attrs:{id:"索引算法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引算法有哪些"}},[t._v("#")]),t._v(" 索引算法有哪些？")]),t._v(" "),s("p",[t._v("索引算法有BTree算法和Hash算法")]),t._v(" "),s("p",[t._v("BTree算法")]),t._v(" "),s("p",[t._v("BTree是常用的mysql数据库索引算法，也是mysql默认的算法。因为它不仅可以被用在=,>,>=,<,<=和between这些比较操作符上，而且还可以用于like操作符，只要它的查询条件是一个不以通配符开头的常量，例如：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\t‐‐只要它的查询条件是一个不以通配符开头的常量\n2\tselect*fromuserwherenamelike'jack%';\n3\t‐‐如果一通配符开头，或者没有使用常量，则不会使用索引，例如：\n4\tselect*fromuserwherenamelike'%jack';\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("Hash算法")]),t._v(" "),s("p",[t._v("HashHash索引只能用于对等比较，例如=,<=>（相当于=）操作符。由于是一次定位数据，不像BTree索引需要从根节点到枝节点，后才能访问到页节点这样多次IO访问，所以检索效率远高于BTree索引。")]),t._v(" "),s("h3",{attrs:{id:"索引设计的原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引设计的原则"}},[t._v("#")]),t._v(" 索引设计的原则？")]),t._v(" "),s("p",[t._v("\\1.适合索引的列是出现在where子句中的列，或者连接子句中指定的列")]),t._v(" "),s("p",[t._v("\\2.基数较小的类，索引效果较差，没有必要在此列建立索引")]),t._v(" "),s("p",[t._v("\\3.使用短索引，如果对长字符串列进行索引，应该指定一个前缀长度，这样能够节省大量索引空间")]),t._v(" "),s("p",[t._v("\\4.不要过度索引。索引需要额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引会进行更新甚至重构，索引列越多，这个时间就会越长。所以只保持需要的索引有利于查询即可。")]),t._v(" "),s("h3",{attrs:{id:"创建索引的原则-重中之重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建索引的原则-重中之重"}},[t._v("#")]),t._v(" 创建索引的原则（重中之重）")]),t._v(" "),s("p",[t._v("索引虽好，但也不是无限制的使用，好符合一下几个原则")]),t._v(" "),s("p",[t._v("1）左前缀匹配原则，组合索引非常重要的原则，mysql会一直向右匹配直到遇到范围查询(>、<、between、like)就停止匹配，比如a=1andb=2andc>3andd=4如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立")]),t._v(" "),s("p",[t._v("(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。")]),t._v(" "),s("p",[t._v("2）较频繁作为查询条件的字段才去创建索引")]),t._v(" "),s("p",[t._v("3）更新频繁字段不适合创建索引")]),t._v(" "),s("p",[t._v("4）若是不能有效区分数据的列不适合做索引列(如性别，男女未知，多也就三种，区分度实在太低)")]),t._v(" "),s("p",[t._v("5）尽量的扩展索引，不要新建索引。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可。")]),t._v(" "),s("p",[t._v("6）定义有外键的数据列一定要建立索引。")]),t._v(" "),s("p",[t._v("7）对于那些查询中很少涉及的列，重复值比较多的列不要建立索引。8）对于定义为text、image和bit的数据类型的列不要建立索引。创建索引的三种方式，删除索引")]),t._v(" "),s("p",[t._v("第一种方式：在执行CREATETABLE时创建索引")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\tCREATETABLEuser_index2(\n2\tidINTauto_incrementPRIMARYKEY,\n3\tfirst_nameVARCHAR(16),\n4\tlast_nameVARCHAR(16),\n5\tid_cardVARCHAR(18),\n6\tinformationtext,\n7\tKEYname(first_name,last_name),\n8\tFULLTEXTKEY(information),\n9\tUNIQUEKEY(id_card));\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("第二种方式：使用ALTERTABLE命令去增加索引")]),t._v(" "),s("p",[s("code",[t._v("1ALTERTABLEtable_nameADDINDEXindex_name(column_list);")])]),t._v(" "),s("p",[t._v("ALTERTABLE用来创建普通索引、UNIQUE索引或PRIMARYKEY索引。")]),t._v(" "),s("p",[t._v("其中table_name是要增加索引的表名，column_list指出对哪些列进行索引，多列时各列之间用逗号分隔。")]),t._v(" "),s("p",[t._v("索引名index_name可自己命名，缺省时，MySQL将根据第一个索引列赋一个名称。另外，ALTERTABLE允许在单个语句中更改多个表，因此可以在同时创建多个索引。")]),t._v(" "),s("p",[t._v("第三种方式：使用CREATEINDEX命令创建")]),t._v(" "),s("p",[s("code",[t._v("1CREATEINDEXindex_nameONtable_name(column_list);")])]),t._v(" "),s("p",[t._v("CREATEINDEX可对表增加普通索引或UNIQUE索引。（但是，不能创建PRIMARYKEY索引）")]),t._v(" "),s("p",[t._v("删除索引")]),t._v(" "),s("p",[t._v("根据索引名删除普通索引、唯一索引、全文索引：altertable表名dropKEY索引名")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\taltertableuser_indexdropKEYname;\n2\taltertableuser_indexdropKEYid_card;\n3\taltertableuser_indexdropKEYinformation;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("删除主键索引：altertable表名dropprimarykey（因为主键只有一个）。这里值得注意的是，如果主键自增长，那么不能直接执行此操作（自增长依赖于主键索引）:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("alter table user_index drop primary key\n========================\n[SQL] alter table user_index drop primary key\n[Err] 1075 - Incorrect table definition; there can be only one auto column and it must be defined as a key\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("需要取消自增长再行删除：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\taltertableuser_index\n2\t‐‐重新定义字段\n3\tMODIFYidint,\n4\tdropPRIMARYKEY\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("但通常不会删除主键，因为设计主键一定与业务逻辑无关。")]),t._v(" "),s("h3",{attrs:{id:"创建索引时需要注意什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建索引时需要注意什么"}},[t._v("#")]),t._v(" 创建索引时需要注意什么？")]),t._v(" "),s("ul",[s("li",[t._v("非空字段：应该指定列为NOTNULL，除非你想存储NULL。在mysql中，含有空值的列很难进行查询优化，因为它们使得索引、索引的统计信息以及比较运算更加复杂。你应该用0、一个特殊的值或者一个空串代替空值；")]),t._v(" "),s("li",[t._v("取值离散大的字段：（变量各个取值之间的差异程度）的列放到联合索引的前面，可以通过count()函数查看字段的差异值，返回值越大说明字段的唯一值越多字段的离散程度高；")]),t._v(" "),s("li",[t._v("索引字段越小越好：数据库的数据存储以页为单位一页存储的数据越多一次IO操作获取的数据越大效率越高。")])]),t._v(" "),s("h3",{attrs:{id:"使用索引查询一定能提高查询的性能吗-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用索引查询一定能提高查询的性能吗-为什么"}},[t._v("#")]),t._v(" 使用索引查询一定能提高查询的性能吗？为什么")]),t._v(" "),s("p",[t._v("通常，通过索引查询数据比全表扫描要快。但是我们也必须注意到它的代价。")]),t._v(" "),s("p",[t._v("索引需要空间来存储，也需要定期维护，每当有记录在表中增减或索引列被修改时，索引本身也会被修改。这意味着每条记录的INSERT，DELETE，UPDATE将为此多付出4，5次的磁盘I/O。因为索引需要额外的存储空间和处理，那些不必要的索引反而会使查询反应时间变慢。使用索引查询不一定能提高查询性能，索引范围查询(INDEXRANGESCAN)适用于两种情况:")]),t._v(" "),s("p",[t._v("基于一个范围的检索，一般查询返回结果集小于表中记录数的30%")]),t._v(" "),s("p",[t._v("基于非唯一性索引的检索")]),t._v(" "),s("h2",{attrs:{id:"百万级别或以上的数据如何删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#百万级别或以上的数据如何删除"}},[t._v("#")]),t._v(" 百万级别或以上的数据如何删除")]),t._v(" "),s("p",[t._v("关于索引：由于索引需要额外的维护成本，因为索引文件是单独存在的文件,所以当我们对数据的增加,修改,删除,都会产生额外的对索引文件的操作,这些操作需要消耗额外的IO,会降低增/改/删的执行效率。所以，在我们删除数据库百万级别数据的时候，查询MySQL官方手册得知删除数据的速度和创建的索引数量是成正比的。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("所以我们想要删除百万数据的时候可以先删除索引（此时大概耗时三分多钟）")])]),t._v(" "),s("li",[s("p",[t._v("然后删除其中无用数据（此过程需要不到两分钟）")])]),t._v(" "),s("li",[s("p",[t._v("删除完成后重新创建索引(此时数据较少了)创建索引也非常快，约十分")])])]),t._v(" "),s("p",[t._v("钟左右。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("与之前的直接删除绝对是要快速很多，更别说万一删除中断,一切删除会回滚。那更是坑了。")])]),t._v(" "),s("h2",{attrs:{id:"前缀索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前缀索引"}},[t._v("#")]),t._v(" 前缀索引")]),t._v(" "),s("p",[t._v("语法：index(field(10))，使用字段值的前10个字符建立索引，默认是使用字段的全部内容建立索引。")]),t._v(" "),s("p",[t._v("前提：前缀的标识度高。比如密码就适合建立前缀索引，因为密码几乎各不相")]),t._v(" "),s("p",[t._v("同。")]),t._v(" "),s("p",[t._v("实操的难度：在于前缀截取的长度。")]),t._v(" "),s("p",[t._v("我们可以利用selectcount(*)/count(distinctleft(password,prefixLen));，通过从调整prefixLen的值（从1自增）查看不同前缀长度的一个平均匹配度，接近1时就可以了（表示一个密码的前prefixLen个字符几乎能确定唯一一条记录）")]),t._v(" "),s("h2",{attrs:{id:"什么是最左前缀原则-什么是最左匹配原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是最左前缀原则-什么是最左匹配原则"}},[t._v("#")]),t._v(" 什么是最左前缀原则？什么是最左匹配原则")]),t._v(" "),s("p",[t._v("顾名思义，就是最左优先，在创建多列索引时，要根据业务需求，where子句中")]),t._v(" "),s("p",[t._v("使用最频繁的一列放在最左边。")]),t._v(" "),s("p",[t._v("最左前缀匹配原则，非常重要的原则，mysql会一直向右匹配直到遇到范围查询(>、<、between、like)就停止匹配，比如a=1andb=2andc>3andd=4如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。")]),t._v(" "),s("p",[t._v("=和in可以乱序，比如a=1andb=2andc=3建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式")]),t._v(" "),s("h2",{attrs:{id:"b树和b-树的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b树和b-树的区别"}},[t._v("#")]),t._v(" B树和B+树的区别")]),t._v(" "),s("p",[t._v("在B树中，你可以将键和值存放在内部节点和叶子节点；但在B+树")]),t._v(" "),s("p",[t._v("中，内部节点都是键，没有值，叶子节点同时存放键和值。")]),t._v(" "),s("p",[t._v("B+树的叶子节点有一条链相连，而B树的叶子节点各自独立。")]),t._v(" "),s("p",[s("svg",{attrs:{id:"SvgjsSvg1281",width:"1012.3294677734375",height:"252.1875",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[s("defs",{attrs:{id:"SvgjsDefs1282"}},[s("marker",{attrs:{id:"SvgjsMarker1334",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1335",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1338",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1339",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1342",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1343",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1346",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1347",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1350",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1351",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1354",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1355",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1358",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1359",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1410",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1411",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1414",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1415",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1418",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1419",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1422",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1423",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1426",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1427",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1430",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1431",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1434",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1435",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1438",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1439",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1442",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1443",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1446",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1447",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1450",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1451",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})])]),s("rect",{attrs:{id:"SvgjsRect1283",width:"1012.3294677734375",height:"252.1875",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1284",transform:"translate(168.22874493927125,25)"}},[s("path",{attrs:{id:"SvgjsPath1285",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1286"}},[s("text",{attrs:{id:"SvgjsText1287","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1288",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1289"}},[t._v("10")])])])])]),s("g",{attrs:{id:"SvgjsG1290",transform:"translate(78.14777327935224,95.6502463054187)"}},[s("path",{attrs:{id:"SvgjsPath1291",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1292"}},[s("text",{attrs:{id:"SvgjsText1293","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1294",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1295"}},[t._v("5")])])])])]),s("g",{attrs:{id:"SvgjsG1296",transform:"translate(306.95344129554655,95.6502463054187)"}},[s("path",{attrs:{id:"SvgjsPath1297",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1298"}},[s("text",{attrs:{id:"SvgjsText1299","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1300",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1301"}},[t._v("15 20")])])])])]),s("g",{attrs:{id:"SvgjsG1302",transform:"translate(25,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1303",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1304"}},[s("text",{attrs:{id:"SvgjsText1305","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1306",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1307"}},[t._v("1 3 4")])])])])]),s("g",{attrs:{id:"SvgjsG1308",transform:"translate(121.38663967611336,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1309",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1310"}},[s("text",{attrs:{id:"SvgjsText1311","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1312",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1313"}},[t._v("6")])])])])]),s("g",{attrs:{id:"SvgjsG1314",transform:"translate(216.87246963562754,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1315",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1316"}},[s("text",{attrs:{id:"SvgjsText1317","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1318",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1319"}},[t._v("12")])])])])]),s("g",{attrs:{id:"SvgjsG1320",transform:"translate(306.95344129554655,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1321",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1322"}},[s("text",{attrs:{id:"SvgjsText1323","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1324",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1325"}},[t._v("16 18")])])])])]),s("g",{attrs:{id:"SvgjsG1326",transform:"translate(394.331983805668,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1327",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1328"}},[s("text",{attrs:{id:"SvgjsText1329","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1330",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1331"}},[t._v("25")])])])])]),s("g",{attrs:{id:"SvgjsG1332"}},[s("path",{attrs:{id:"SvgjsPath1333",d:"M183.77565683212674 60.85656641916063L140.58246861154163 100.25269306367295",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1334)"}})]),s("g",{attrs:{id:"SvgjsG1336"}},[s("path",{attrs:{id:"SvgjsPath1337",d:"M97.2979240386045 131.50681272457933L62.83400809716599 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1338)"}})]),s("g",{attrs:{id:"SvgjsG1340"}},[s("path",{attrs:{id:"SvgjsPath1341",d:"M129.92546494496895 133.50840641219014L159.22064777327935 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1342)"}})]),s("g",{attrs:{id:"SvgjsG1344"}},[s("path",{attrs:{id:"SvgjsPath1345",d:"M238.81368322609205 54.089945923595906L317.8650316444798 102.14961017195574",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1346)"}})]),s("g",{attrs:{id:"SvgjsG1348"}},[s("path",{attrs:{id:"SvgjsPath1349",d:"M316.34223709812676 128.58091540403248L254.70647773279353 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1350)"}})]),s("g",{attrs:{id:"SvgjsG1352"}},[s("path",{attrs:{id:"SvgjsPath1353",d:"M344.7874493927126 135.45320197044333L344.7874493927126 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1354)"}})]),s("g",{attrs:{id:"SvgjsG1356"}},[s("path",{attrs:{id:"SvgjsPath1357",d:"M372.8519630507101 128.67414607900093L432.16599190283404 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1358)"}})]),s("g",{attrs:{id:"SvgjsG1360",transform:"translate(656.2287449392711,25)"}},[s("path",{attrs:{id:"SvgjsPath1361",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1362"}},[s("text",{attrs:{id:"SvgjsText1363","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1364",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1365"}},[t._v("6")])])])])]),s("g",{attrs:{id:"SvgjsG1366",transform:"translate(566.1477732793521,95.6502463054187)"}},[s("path",{attrs:{id:"SvgjsPath1367",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1368"}},[s("text",{attrs:{id:"SvgjsText1369","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1370",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1371"}},[t._v("5")])])])])]),s("g",{attrs:{id:"SvgjsG1372",transform:"translate(794.9534412955466,95.6502463054187)"}},[s("path",{attrs:{id:"SvgjsPath1373",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1374"}},[s("text",{attrs:{id:"SvgjsText1375","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1376",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1377"}},[t._v("15 18")])])])])]),s("g",{attrs:{id:"SvgjsG1378",transform:"translate(493,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1379",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1380"}},[s("text",{attrs:{id:"SvgjsText1381","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1382",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1383"}},[t._v("1 3 4")])])])])]),s("g",{attrs:{id:"SvgjsG1384",transform:"translate(599.3866396761134,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1385",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1386"}},[s("text",{attrs:{id:"SvgjsText1387","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1388",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1389"}},[t._v("5")])])])])]),s("g",{attrs:{id:"SvgjsG1390",transform:"translate(694.8724696356276,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1391",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1392"}},[s("text",{attrs:{id:"SvgjsText1393","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1394",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1395"}},[t._v("6 10 12")])])])])]),s("g",{attrs:{id:"SvgjsG1396",transform:"translate(794.9534412955466,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1397",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1398"}},[s("text",{attrs:{id:"SvgjsText1399","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1400",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1401"}},[t._v("15 16")])])])])]),s("g",{attrs:{id:"SvgjsG1402",transform:"translate(912.331983805668,187.19704433497537)"}},[s("path",{attrs:{id:"SvgjsPath1403",d:"M 0 19.901477832512317C 0 -6.6338259441707725 75.66801619433198 -6.6338259441707725 75.66801619433198 19.901477832512317C 75.66801619433198 46.43678160919541 0 46.43678160919541 0 19.901477832512317Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1404"}},[s("text",{attrs:{id:"SvgjsText1405","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.776477832512317",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1406",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1407"}},[t._v("18 20 25")])])])])]),s("g",{attrs:{id:"SvgjsG1408"}},[s("path",{attrs:{id:"SvgjsPath1409",d:"M671.7756568321267 60.85656641916063L628.5824686115416 100.25269306367295",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1410)"}})]),s("g",{attrs:{id:"SvgjsG1412"}},[s("path",{attrs:{id:"SvgjsPath1413",d:"M585.2979240386044 131.50681272457933L530.8340080971659 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1414)"}})]),s("g",{attrs:{id:"SvgjsG1416"}},[s("path",{attrs:{id:"SvgjsPath1417",d:"M617.925464944969 133.50840641219014L637.2206477732793 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1418)"}})]),s("g",{attrs:{id:"SvgjsG1420"}},[s("path",{attrs:{id:"SvgjsPath1421",d:"M726.813683226092 54.089945923595906L805.8650316444798 102.14961017195574",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1422)"}})]),s("g",{attrs:{id:"SvgjsG1424"}},[s("path",{attrs:{id:"SvgjsPath1425",d:"M804.3422370981268 128.58091540403248L732.7064777327935 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1426)"}})]),s("g",{attrs:{id:"SvgjsG1428"}},[s("path",{attrs:{id:"SvgjsPath1429",d:"M832.7874493927125 135.45320197044333L832.7874493927125 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1430)"}})]),s("g",{attrs:{id:"SvgjsG1432"}},[s("path",{attrs:{id:"SvgjsPath1433",d:"M860.8519630507101 128.67414607900093L950.1659919028341 187.19704433497537",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1434)"}})]),s("g",{attrs:{id:"SvgjsG1436"}},[s("path",{attrs:{id:"SvgjsPath1437",d:"M568.668016194332 207.09852216748772L599.3866396761134 207.09852216748772",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1438)"}})]),s("g",{attrs:{id:"SvgjsG1440"}},[s("path",{attrs:{id:"SvgjsPath1441",d:"M675.0546558704455 207.09852216748772L694.8724696356276 207.09852216748772",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1442)"}})]),s("g",{attrs:{id:"SvgjsG1444"}},[s("path",{attrs:{id:"SvgjsPath1445",d:"M770.5404858299596 207.09852216748772L794.9534412955466 207.09852216748772",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1446)"}})]),s("g",{attrs:{id:"SvgjsG1448"}},[s("path",{attrs:{id:"SvgjsPath1449",d:"M870.6214574898786 207.09852216748772L912.331983805668 207.09852216748772",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1450)"}})]),s("g",{attrs:{id:"SvgjsG1452",transform:"translate(238.99999999999997,33)"}},[s("path",{attrs:{id:"SvgjsPath1453",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1454"}},[s("text",{attrs:{id:"SvgjsText1455","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1456",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1457"}},[t._v("B tree")])])])])]),s("g",{attrs:{id:"SvgjsG1458",transform:"translate(532,33)"}},[s("path",{attrs:{id:"SvgjsPath1459",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1460"}},[s("text",{attrs:{id:"SvgjsText1461","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1462",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1463"}},[t._v("B+ tree")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"使用b树的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用b树的好处"}},[t._v("#")]),t._v(" 使用B树的好处")]),t._v(" "),s("p",[t._v("B树可以在内部节点同时存储键和值，因此，把频繁访问的数据放在靠近根节点的地方将会大大提高热点数据的查询效率。这种特性使得B树在特定数据重复多次查询的场景中更加高效。")]),t._v(" "),s("h2",{attrs:{id:"使用b-树的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用b-树的好处"}},[t._v("#")]),t._v(" 使用B+树的好处")]),t._v(" "),s("p",[t._v("由于B+树的内部节点只存放键，不存放值，因此，一次读取，可以在内存页中获取更多的键，有利于更快地缩小查找范围。B+树的叶节点由一条链相连，因此，当需要进行一次全数据遍历的时候，B+树只需要使用O(logN)时间找到最小的一个节点，然后通过链进行O(N)的顺序遍历即可。而B树则需要对树的每一层进行遍历，这会需要更多的内存置换次数，因此也就需要花费更多的时间")]),t._v(" "),s("h2",{attrs:{id:"hash索引和b-树所有有什么区别或者说优劣呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash索引和b-树所有有什么区别或者说优劣呢"}},[t._v("#")]),t._v(" Hash索引和B+树所有有什么区别或者说优劣呢?")]),t._v(" "),s("p",[t._v("首先要知道Hash索引和B+树索引的底层实现原理：")]),t._v(" "),s("p",[t._v("hash索引底层就是hash表，进行查找时，调用一次hash函数就可以获取到相应")]),t._v(" "),s("p",[t._v("的键值，之后进行回表查询获得实际数据。B+树底层实现是多路平衡查找树。")]),t._v(" "),s("p",[t._v("对于每一次的查询都是从根节点出发，查找到叶子节点方可以获得所查键值，然")]),t._v(" "),s("p",[t._v("后根据查询判断是否需要回表查询数据。")]),t._v(" "),s("p",[t._v("么可以看出他们有以下的不同：")]),t._v(" "),s("p",[t._v("hash索引进行等值查询更快(一般情况下)，但是却无法进行范围查询。")]),t._v(" "),s("p",[t._v("因为在hash索引中经过hash函数建立索引之后，索引的顺序与原顺序无法保持一致，不能支持范围查询。而B+树的的所有节点皆遵循(左节点小于父节点，右节点大于父节点，多叉树也类似)，天然支持范围。")]),t._v(" "),s("p",[t._v("hash索引不支持使用索引进行排序，原理同上。")]),t._v(" "),s("p",[t._v("hash索引不支持模糊查询以及多列索引的最左前缀匹配。原理也是因为hash函")]),t._v(" "),s("p",[t._v("数的不可预测。AAAA和AAAAB的索引没有相关性。")]),t._v(" "),s("p",[t._v("hash索引任何时候都避免不了回表查询数据，而B+树在符合某些条件(聚簇索")]),t._v(" "),s("p",[t._v("引，覆盖索引等)的时候可以只通过索引完成查询。")]),t._v(" "),s("p",[t._v("hash索引虽然在等值查询上较快，但是不稳定。性能不可预测，当某个键值存在大量重复的时候，发生hash碰撞，此时效率可能极差。而B+树的查询效率比较稳定，对于所有的查询都是从根节点到叶子节点，且树的高度较低。")]),t._v(" "),s("p",[t._v("因此，在大多数情况下，直接选择B+树索引可以获得稳定且较好的查询速度。")]),t._v(" "),s("p",[t._v("而不需要使用hash索引。")]),t._v(" "),s("h2",{attrs:{id:"数据库为什么使用b-树而不是b树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库为什么使用b-树而不是b树"}},[t._v("#")]),t._v(" 数据库为什么使用B+树而不是B树")]),t._v(" "),s("p",[t._v("B树只适合随机检索，而B+树同时支持随机检索和顺序检索；")]),t._v(" "),s("p",[t._v("B+树空间利用率更高，可减少I/O次数，磁盘读写代价更低。一般来说，索引本")]),t._v(" "),s("p",[t._v("身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储的磁盘上。这样的话，索引查找过程中就要产生磁盘I/O消耗。B+树的内部结点并没有指向关键字具体信息的指针，只是作为索引使用，其内部结点比B树小，盘块能容纳的结")]),t._v(" "),s("p",[t._v("点中关键字数量更多，一次性读入内存中可以查找的关键字也就越多，相对的，IO读")]),t._v(" "),s("p",[t._v("写次数也就降低了。而IO读写次数是影响索引检索效率的最大因素；")]),t._v(" "),s("p",[t._v("B+树的查询效率更加稳定。B树搜索有可能会在非叶子结点结束，越靠近根节点的记录查找时间越短，只要找到关键字即可确定记录的存在，其性能等价于在关键字全集内做一次二分查找。而在B+树中，顺序检索比较明显，随机检索时，任何关键字的查找都必须走一条从根节点到叶节点的路，所有关键字的查找路径长度相同，导致每一个关键字的查询效率相当。")]),t._v(" "),s("p",[t._v("B-树在提高了磁盘IO性能的同时并没有解决元素遍历的效率低下的问题。B+树的叶子节点使用指针顺序连接在一起，只要遍历叶子节点就可以实现整棵树的遍历。而且在数据库中基于范围的查询是非常频繁的，而B树不支持这样的操作。")]),t._v(" "),s("p",[t._v("增删文件（节点）时，效率更高。因为B+树的叶子节点包含所有关键字，并以")]),t._v(" "),s("p",[t._v("有序的链表结构存储，这样可很好提高增删效率。")]),t._v(" "),s("h2",{attrs:{id:"b-树在满足聚簇索引和覆盖索引的时候不需要回表查询数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树在满足聚簇索引和覆盖索引的时候不需要回表查询数据"}},[t._v("#")]),t._v(" B+树在满足聚簇索引和覆盖索引的时候不需要回表查询数据")]),t._v(" "),s("p",[t._v("在B+树的索引中，叶子节点可能存储了当前的key值，也可能存储了当前的key值以及整行的数据，这就是聚簇索引和非聚簇索引。在InnoDB中，只有主键索引是聚簇索引，如果没有主键，则挑选一个唯一键建立聚簇索引。如果没有唯一键，则隐式的生成一个键来建立聚簇索引。")]),t._v(" "),s("p",[t._v("当查询使用聚簇索引时，在对应的叶子节点，可以获取到整行数据，因此不用再")]),t._v(" "),s("p",[t._v("次进行回表查询。")]),t._v(" "),s("h2",{attrs:{id:"什么是聚簇索引-何时使用聚簇索引与非聚簇索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是聚簇索引-何时使用聚簇索引与非聚簇索引"}},[t._v("#")]),t._v(" 什么是聚簇索引？何时使用聚簇索引与非聚簇索引")]),t._v(" "),s("p",[t._v("聚簇索引：将数据存储与索引放到了一块，找到索引也就找到了数据")]),t._v(" "),s("p",[t._v("非聚簇索引：将数据存储于索引分开结构，索引结构的叶子节点指向了数据的对应行，myisam通过key_buffer把索引先缓存到内存中，当需要访问数据时（通过索引访问数据），在内存中直接搜索索引，然后通过索引找到磁盘相应数据，这也就是为什么索引不在key buffer命中时，速度慢的原因")]),t._v(" "),s("p",[t._v("澄清一个概念：innodb中，在聚簇索引之上创建的索引称之为辅助索引，辅助索引访问数据总是需要二次查找，非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引，辅助索引叶子节点存储的不再是行的物理位置，而是主键值")]),t._v(" "),s("p",[t._v("何时使用聚簇索引与非聚簇索引")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("动作")]),t._v(" "),s("th",[t._v("是否应该使用聚簇索引")]),t._v(" "),s("th",[t._v("使用非聚簇索引")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("列经常被分组排序")]),t._v(" "),s("td",[t._v("✔")]),t._v(" "),s("td",[t._v("✔")])]),t._v(" "),s("tr",[s("td",[t._v("返回某范围内的数据")]),t._v(" "),s("td",[t._v("✔")]),t._v(" "),s("td",[t._v("❌")])]),t._v(" "),s("tr",[s("td",[t._v("一个或极少不同值")]),t._v(" "),s("td",[t._v("❌")]),t._v(" "),s("td",[t._v("❌")])]),t._v(" "),s("tr",[s("td",[t._v("小数目的不同值")]),t._v(" "),s("td",[t._v("✔")]),t._v(" "),s("td",[t._v("❌")])]),t._v(" "),s("tr",[s("td",[t._v("大数目的不同值")]),t._v(" "),s("td",[t._v("❌")]),t._v(" "),s("td",[t._v("✔")])]),t._v(" "),s("tr",[s("td",[t._v("频繁更新的列")]),t._v(" "),s("td",[t._v("❌")]),t._v(" "),s("td",[t._v("✔")])]),t._v(" "),s("tr",[s("td",[t._v("外键列")]),t._v(" "),s("td",[t._v("✔")]),t._v(" "),s("td",[t._v("✔")])]),t._v(" "),s("tr",[s("td",[t._v("主键列")]),t._v(" "),s("td",[t._v("✔")]),t._v(" "),s("td",[t._v("✔")])]),t._v(" "),s("tr",[s("td",[t._v("频繁修改索引列")]),t._v(" "),s("td",[t._v("❌")]),t._v(" "),s("td",[t._v("✔")])])])]),t._v(" "),s("h2",{attrs:{id:"非聚簇索引一定会回表查询吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非聚簇索引一定会回表查询吗"}},[t._v("#")]),t._v(" 非聚簇索引一定会回表查询吗？")]),t._v(" "),s("p",[t._v("不一定，这涉及到查询语句所要求的字段是否全部命中了索引，如果全部命中了")]),t._v(" "),s("p",[t._v("索引，那么就不必再进行回表查询")]),t._v(" "),s("p",[t._v("举个简单的例子，假设我们在员工表的年龄上建立了索引，那么当进行select age from employee where age < 20的查询时，在索引的叶子节点上，已经包含了age信息，不会再次进行回表查询。")]),t._v(" "),s("h2",{attrs:{id:"联合索引是什么-为什么需要注意联合索引中的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合索引是什么-为什么需要注意联合索引中的顺序"}},[t._v("#")]),t._v(" 联合索引是什么？为什么需要注意联合索引中的顺序？")]),t._v(" "),s("p",[t._v("MySQL可以使用多个字段同时建立一个索引，叫做联合索引。在联合索引中，如果想要命中索引，需要按照建立索引时的字段顺序挨个使用，否则无法命中索引。")]),t._v(" "),s("p",[t._v("具体原因为:")]),t._v(" "),s("p",[t._v('MySQL使用索引时需要索引有序，假设现在建立了"name，age，school"的联合索引，那么索引的排序为: 先按照name排序，如果name相同，则按照age排序，如果age的值也相等，则按照school进行排序。')]),t._v(" "),s("p",[t._v("当进行查询时，此时索引仅仅按照name严格有序，因此必须首先使用name字段进行等值查询，之后对于匹配到的列而言，其按照age字段严格有序，此时可以使用age字段用做索引查找，以此类推。因此在建立联合索引的时候应该注意索引列的顺序，一般情况下，将查询需求频繁或者字段选择性高的列放在前面。此外可以根据特例的查询或者表结构进行单独的调整。")]),t._v(" "),s("h1",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("h2",{attrs:{id:"什么是数据库事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据库事务"}},[t._v("#")]),t._v(" 什么是数据库事务？")]),t._v(" "),s("p",[t._v("事务是一个不可分割的数据库操作序列，也是数据库并发控制的基本单位，其执行的结果必须使数据库从一种一致性状态变到另一种一致性状态。事务是逻辑上的一组操作，要么都执行，要么都不执行。")]),t._v(" "),s("p",[t._v("事务最经典也经常被拿出来说例子就是转账了。")]),t._v(" "),s("p",[t._v("假如小明要给小红转账1000元，这个转账会涉及到两个关键操作就是：将小明的余额减少1000元，将小红的余额增加1000元。万一在这两个操作之间突然出现错误比如银行系统崩溃，导致小明余额减少而小红的余额没有增加，这样就不对了。事务就是保证这两个关键操作要么都成功，要么都要失败。")]),t._v(" "),s("h2",{attrs:{id:"事物的四大特性-acid-介绍一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事物的四大特性-acid-介绍一下"}},[t._v("#")]),t._v(" 事物的四大特性(ACID)介绍一下?")]),t._v(" "),s("p",[t._v("关系性数据库需要遵循ACID规则，具体内容如下：")]),t._v(" "),s("p",[t._v("原子性： 事务是最小的执行单位，不允许分割。事务的原子性确保动作")]),t._v(" "),s("p",[t._v("要么全部完成，要么完全不起作用；")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("一致性： 执行事务前后，数据保持一致，多个事务对同一个数据读取的")])]),t._v(" "),s("p",[t._v("结果是相同的；")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("隔离性： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各")])]),t._v(" "),s("p",[t._v("并发事务之间数据库是独立的；")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("持久性： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。")])]),t._v(" "),s("h2",{attrs:{id:"什么是脏读-幻读-不可重复读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是脏读-幻读-不可重复读"}},[t._v("#")]),t._v(" 什么是脏读？幻读？不可重复读？")]),t._v(" "),s("p",[t._v("脏读(Drity Read)：某个事务已更新一份数据，另一个事务在此时读取了同一份数据，由于某些原因，前一个RollBack了操作，则后一个事务所读取的数据就会是不正确的。")]),t._v(" "),s("p",[t._v("不可重复读(Non-repeatable read):在一个事务的两次查询之中数据不一致，这")]),t._v(" "),s("p",[t._v("可能是两次查询过程中间插入了一个事务更新的原有的数据。")]),t._v(" "),s("p",[t._v("幻读(Phantom Read):在一个事务的两次查询中数据笔数不一致，例如有一个事务查询了几列(Row)数据，而另一个事务却在此时插入了新的几列数据，先前的事务在接下来的查询中，就会发现有几列数据是它先前所没有的。")]),t._v(" "),s("h2",{attrs:{id:"什么是事务的隔离级别-mysql的默认隔离级别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是事务的隔离级别-mysql的默认隔离级别是什么"}},[t._v("#")]),t._v(" 什么是事务的隔离级别？MySQL的默认隔离级别是什么？")]),t._v(" "),s("p",[t._v("为了达到事务的四大特性，数据库定义了4种不同的事务隔离级别，由低到高依次为Read uncommitted、Read committed、Repeatable read、Serializable，这四个级别可以逐个解决脏读、不可重复读、幻读这几类问题。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("隔离级别")]),t._v(" "),s("th",[t._v("脏读")]),t._v(" "),s("th",[t._v("不可重复  读")]),t._v(" "),s("th",[t._v("幻影读")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("READ-UNCOMMITTED")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("READ-COMMITTED")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("REPEATABLE-READ")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("SERIALIZABLE")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")])])])]),t._v(" "),s("p",[t._v("SQL 标准定义了四个隔离级别：")]),t._v(" "),s("ul",[s("li",[t._v("READ-UNCOMMITTED(读取未提交)： 最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读。")]),t._v(" "),s("li",[t._v("READ-COMMITTED(读取已提交)： 允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生。")]),t._v(" "),s("li",[t._v("REPEATABLE-READ(可重复读)： 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。")]),t._v(" "),s("li",[t._v("SERIALIZABLE(可串行化)： 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。")])]),t._v(" "),s("p",[t._v("这里需要注意的是：Mysql 默认采用的 REPEATABLE_READ隔离级别 Oracle默认采用的 READ_COMMITTED隔离级别")]),t._v(" "),s("p",[t._v("事务隔离机制的实现基于锁机制和并发调度。其中并发调度使用的是MVVC（多版本并发控制），通过保存修改的旧版本信息来支持并发一致性读和回滚等特性。")]),t._v(" "),s("p",[t._v("因为隔离级别越低，事务请求的锁越少，所以大部分数据库系统的隔离级别都是READ-COMMITTED(读取提交内容):，但是你要知道的是InnoDB 存储引擎默认使用 **REPEATABLE-READ（可重读）**并不会有任何性能损失。")]),t._v(" "),s("p",[t._v("InnoDB 存储引擎在 分布式事务 的情况下一般会用到**SERIALIZABLE(可串行化)**隔离级别。")]),t._v(" "),s("h1",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("h2",{attrs:{id:"对mysql的锁了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对mysql的锁了解吗"}},[t._v("#")]),t._v(" 对MySQL的锁了解吗")]),t._v(" "),s("p",[t._v("当数据库有并发事务的时候，可能会产生数据的不一致，这时候需要一些机制来")]),t._v(" "),s("p",[t._v("保证访问的次序，锁机制就是这样的一个机制。")]),t._v(" "),s("p",[t._v("就像酒店的房间，如果大家随意进出，就会出现多人抢夺同一个房间的情况，而在房间上装上锁，申请到钥匙的人才可以入住并且将房间锁起来，其他人只有等他使用完毕才可以再次使用。")]),t._v(" "),s("h2",{attrs:{id:"隔离级别与锁的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别与锁的关系"}},[t._v("#")]),t._v(" 隔离级别与锁的关系")]),t._v(" "),s("p",[t._v("在Read Uncommitted级别下，读取数据不需要加共享锁，这样就不会跟被修")]),t._v(" "),s("p",[t._v("改的数据上的排他锁冲突")]),t._v(" "),s("p",[t._v("在Read Committed级别下，读操作需要加共享锁，但是在语句执行完以后释放共享锁；")]),t._v(" "),s("p",[t._v("在Repeatable Read级别下，读操作需要加共享锁，但是在事务提交之前并不")]),t._v(" "),s("p",[t._v("释放共享锁，也就是必须等待事务执行完毕以后才释放共享锁。")]),t._v(" "),s("p",[t._v("SERIALIZABLE 是限制性最强的隔离级别，因为该级别锁定整个范围的键，并一直持有锁，直到事务完成。")]),t._v(" "),s("h2",{attrs:{id:"按照锁的粒度分数据库锁有哪些-锁机制与innodb锁算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按照锁的粒度分数据库锁有哪些-锁机制与innodb锁算法"}},[t._v("#")]),t._v(" 按照锁的粒度分数据库锁有哪些？锁机制与InnoDB锁算法")]),t._v(" "),s("p",[t._v("在关系型数据库中，可以按照锁的粒度把数据库锁分为行级锁(INNODB引擎)、表级锁(MYISAM引擎)和页级锁(BDB引擎 )。")]),t._v(" "),s("p",[t._v("MyISAM和InnoDB存储引擎使用的锁：")]),t._v(" "),s("ul",[s("li",[t._v("MyISAM采用表级锁(table-level locking)。")]),t._v(" "),s("li",[t._v("InnoDB支持行级锁(row-level locking)和表级锁，默认为行级锁")])]),t._v(" "),s("p",[t._v("行级锁，表级锁和页级锁对比")]),t._v(" "),s("p",[t._v("行级锁 行级锁是Mysql中锁定粒度最细的一种锁，表示只针对当前操作的行进行加锁。行级锁能大大减少数据库操作的冲突。其加锁粒度最小，但加锁的开销也最大。行级锁分为共享锁 和 排他锁。")]),t._v(" "),s("p",[t._v("特点：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，")]),t._v(" "),s("p",[t._v("并发度也最高。")]),t._v(" "),s("p",[t._v("表级锁 表级锁是MySQL中锁定粒度最大的一种锁，表示对当前操作的整张表加锁，它实现简单，资源消耗较少，被大部分MySQL引擎支持。最常使用的MYISAM与INNODB都支持表级锁定。表级锁定分为表共享读锁（共享锁）与表独占写锁（排他锁）。")]),t._v(" "),s("p",[t._v("特点：开销小，加锁快；不会出现死锁；锁定粒度大，发出锁冲突的概率最高，")]),t._v(" "),s("p",[t._v("并发度最低。")]),t._v(" "),s("p",[t._v("页级锁 页级锁是MySQL中锁定粒度介于行级锁和表级锁中间的一种锁。表级锁速度快，但冲突多，行级冲突少，但速度慢。所以取了折衷的页级，一次锁定相邻的一组记录。")]),t._v(" "),s("p",[t._v("特点：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和")]),t._v(" "),s("p",[t._v("行锁之间，并发度一般")]),t._v(" "),s("h2",{attrs:{id:"从锁的类别上分mysql都有哪些锁呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从锁的类别上分mysql都有哪些锁呢"}},[t._v("#")]),t._v(" 从锁的类别上分MySQL都有哪些锁呢？")]),t._v(" "),s("h2",{attrs:{id:"像上面那样子进行锁定岂不是有点阻碍并发效率了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#像上面那样子进行锁定岂不是有点阻碍并发效率了"}},[t._v("#")]),t._v(" 像上面那样子进行锁定岂不是有点阻碍并发效率了")]),t._v(" "),s("p",[t._v("从锁的类别上来讲，有共享锁和排他锁。")]),t._v(" "),s("p",[t._v("共享锁: 又叫做读锁。 当用户要进行数据的读取时，对数据加上共享锁。共享锁可以同时加上多个。")]),t._v(" "),s("p",[t._v("排他锁: 又叫做写锁。 当用户要进行数据的写入时，对数据加上排他锁。排他锁只可以加一个，他和其他的排他锁，共享锁都相斥。")]),t._v(" "),s("p",[t._v("用上面的例子来说就是用户的行为有两种，一种是来看房，多个用户一起看房是可以接受的。 一种是真正的入住一晚，在这期间，无论是想入住的还是想看房的都不可以。")]),t._v(" "),s("p",[t._v("锁的粒度取决于具体的存储引擎，InnoDB实现了行级锁，页级锁，表级锁。")]),t._v(" "),s("p",[t._v("他们的加锁开销从大到小，并发能力也是从大到小。")]),t._v(" "),s("h2",{attrs:{id:"mysql中innodb引擎的行锁是怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql中innodb引擎的行锁是怎么实现的"}},[t._v("#")]),t._v(" MySQL中InnoDB引擎的行锁是怎么实现的？")]),t._v(" "),s("p",[t._v("答：InnoDB是基于索引来完成行锁")]),t._v(" "),s("p",[t._v("例: select * from tab_with_index where id = 1 for update;")]),t._v(" "),s("p",[t._v("for update 可以根据条件来完成行锁锁定，并且 id 是有索引键的列，如果 id不是索引键那么InnoDB将完成表锁，并发将无从谈起")]),t._v(" "),s("h2",{attrs:{id:"innodb存储引擎的锁的算法有三种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb存储引擎的锁的算法有三种"}},[t._v("#")]),t._v(" InnoDB存储引擎的锁的算法有三种")]),t._v(" "),s("ul",[s("li",[t._v("Record lock：单个行记录上的锁")]),t._v(" "),s("li",[t._v("Gap lock：间隙锁，锁定一个范围，不包括记录本身")]),t._v(" "),s("li",[t._v("Next-key lock：record+gap 锁定一个范围，包含记录本身")])]),t._v(" "),s("p",[t._v("相关知识点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("innodb对于行的查询使用next-key lock")])]),t._v(" "),s("li",[s("p",[t._v("Next-locking keying为了解决Phantom Problem幻读问题")])]),t._v(" "),s("li",[s("p",[t._v("当查询的索引含有唯一属性时，将next-key lock降级为record key")])]),t._v(" "),s("li",[s("p",[t._v("Gap锁设计的目的是为了阻止多个事务将记录插入到同一范围内，而这会导致幻读问题的产生")])]),t._v(" "),s("li",[s("p",[t._v("有两种方式显式关闭gap锁：（除了外键约束和唯一性检查外，其余情况仅使用record lock） A. 将事务隔离级别设置为RC B. 将参数innodb_locks_unsafe_for_binlog设置为1")])])]),t._v(" "),s("h2",{attrs:{id:"什么是死锁-怎么解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是死锁-怎么解决"}},[t._v("#")]),t._v(" 什么是死锁？怎么解决？")]),t._v(" "),s("p",[t._v("死锁是指两个或多个事务在同一资源上相互占用，并请求锁定对方的资源，从而导致恶性循环的现象。")]),t._v(" "),s("p",[t._v("常见的解决死锁的方法")]),t._v(" "),s("p",[t._v("1、如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。")]),t._v(" "),s("p",[t._v("2、在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；")]),t._v(" "),s("p",[t._v("3、对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率；")]),t._v(" "),s("p",[t._v("如果业务处理不好可以用分布式事务锁或者使用乐观锁")]),t._v(" "),s("h2",{attrs:{id:"数据库的乐观锁和悲观锁是什么-怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库的乐观锁和悲观锁是什么-怎么实现的"}},[t._v("#")]),t._v(" 数据库的乐观锁和悲观锁是什么？怎么实现的？")]),t._v(" "),s("p",[t._v("数据库管理系统（DBMS）中的并发控制的任务是确保在多个事务同时存取数据库中同一数据时不破坏事务的隔离性和统一性以及数据库的统一性。乐观并发控制（乐观锁）和悲观并发控制（悲观锁）是并发控制主要采用的技术手段。")]),t._v(" "),s("p",[t._v("悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。在查询完数据的时候就把事务锁起来，直到提交事务。实现方式：使用数据库中的锁机制乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。在修改数据的时候把事务锁起来，通过version的方式来进行锁定。实现方式：乐一般会使用版本号机制或CAS算法实现。")]),t._v(" "),s("p",[t._v("两种锁的使用场景从上面对两种锁的介绍，我们知道两种锁各有优缺点，不可认为一种好于另一种，像乐观锁适用于写比较少的情况下（多读场景），即冲突真的很少发生的时候，这样可以省去了锁的开销，加大了系统的整个吞吐量。")]),t._v(" "),s("p",[t._v("但如果是多写的情况，一般会经常产生冲突，这就会导致上层应用会不断的进行")]),t._v(" "),s("p",[t._v("retry，这样反倒是降低了性能，所以一般多写的场景下用悲观锁就比较合适。")]),t._v(" "),s("h1",{attrs:{id:"视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),s("h2",{attrs:{id:"为什么要使用视图-什么是视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用视图-什么是视图"}},[t._v("#")]),t._v(" 为什么要使用视图？什么是视图？")]),t._v(" "),s("p",[t._v("为了提高复杂SQL语句的复用性和表操作的安全性，MySQL数据库管理系统提供了视图特性。所谓视图，本质上是一种虚拟表，在物理上是不存在的，其内容与真实的表相似，包含一系列带有名称的列和行数据。但是，视图并不在数据库中以储存的数据值形式存在。行和列数据来自定义视图的查询所引用基本表，并且在具体引用视图时动态生成。")]),t._v(" "),s("p",[t._v("视图使开发者只关心感兴趣的某些特定数据和所负责的特定任务，只能看到视图中所定义的数据，而不是视图所引用表中的数据，从而提高了数据库中数据的安全性")]),t._v(" "),s("h2",{attrs:{id:"视图有哪些特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图有哪些特点"}},[t._v("#")]),t._v(" 视图有哪些特点？")]),t._v(" "),s("p",[t._v("视图的特点如下:")]),t._v(" "),s("ul",[s("li",[t._v("视图的列可以来自不同的表，是表的抽象和在逻辑意义上建立的新关系。")]),t._v(" "),s("li",[t._v("视图是由基本表(实表)产生的表(虚表)。")]),t._v(" "),s("li",[t._v("视图的建立和删除不影响基本表。")]),t._v(" "),s("li",[t._v("对视图内容的更新(添加，删除和修改)直接影响基本表。")]),t._v(" "),s("li",[t._v("当视图来自多个基本表时，不允许添加和删除数据。视图的操作包括创建视图，查看视图，删除视图和修改视图。")])]),t._v(" "),s("h2",{attrs:{id:"视图的使用场景有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的使用场景有哪些"}},[t._v("#")]),t._v(" 视图的使用场景有哪些？")]),t._v(" "),s("p",[t._v("视图根本用途：简化sql查询，提高开发效率。如果说还有另外一个用途那就是兼容老的表结构。")]),t._v(" "),s("p",[t._v("下面是视图的常见使用场景：重用SQL语句；")]),t._v(" "),s("ul",[s("li",[t._v("简化复杂的SQL操作。在编写查询后，可以方便的重用它而不必知道它的基本查询细节；使用表的组成部分而不是整个表；")]),t._v(" "),s("li",[t._v("保护数据。可以给用户授予表的特定部分的访问权限而不是整个表的访问权限；")]),t._v(" "),s("li",[t._v("更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据")])]),t._v(" "),s("h2",{attrs:{id:"视图的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的优点"}},[t._v("#")]),t._v(" 视图的优点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("查询简单化。视图能简化用户的操作")])]),t._v(" "),s("li",[s("p",[t._v("数据安全性。视图使用户能以多种角度看待同一数据，能够对机密数据提供安全保护")])])]),t._v(" "),s("p",[t._v("逻辑数据独立性。视图对重构数据库提供了一定程度的逻辑独立性")]),t._v(" "),s("h2",{attrs:{id:"视图的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的缺点"}},[t._v("#")]),t._v(" 视图的缺点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("性能。数据库必须把视图的查询转化成对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么，即使是视图的一个简单查询，数据库也把它变成一个复杂的结合体，需要花费一定的时间。")])]),t._v(" "),s("li",[s("p",[t._v("修改限制。当用户试图修改视图的某些行时，数据库必须把它转化为对基本表的某些行的修改。事实上，当从视图中插入或者删除时，情况也是这样。对于简单视图来说，这是很方便的，但是，对于比较复杂的视图，可能是不可修改的这些视图有如下特征：")]),t._v(" "),s("ol",[s("li",[t._v("有UNIQUE等集合操作符的视图。\n2.有GROUP BY子句的视图。\n3.有诸如AVG\\SUM\\MAX等聚合函数的视图。\n4.使用DISTINCT关键字的视图。\n5.连接表的视图（其中有些例外）")])])])]),t._v(" "),s("h2",{attrs:{id:"什么是游标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是游标"}},[t._v("#")]),t._v(" 什么是游标？")]),t._v(" "),s("p",[t._v("游标是系统为用户开设的一个数据缓冲区，存放SQL语句的执行结果，每个游标区都有一个名字。用户可以通过游标逐一获取记录并赋给主变量，交由主语言进一步处理")]),t._v(" "),s("h1",{attrs:{id:"存储过程与函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储过程与函数"}},[t._v("#")]),t._v(" 存储过程与函数")]),t._v(" "),s("h2",{attrs:{id:"什么是存储过程-有哪些优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是存储过程-有哪些优缺点"}},[t._v("#")]),t._v(" 什么是存储过程？有哪些优缺点？")]),t._v(" "),s("p",[t._v("存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需要创建一次，以后在该程序中就可以调用多次。如果某次操作需要执行多次SQL，使用存储过程比单纯SQL语句执行要快。")]),t._v(" "),s("p",[t._v("优点")]),t._v(" "),s("p",[t._v("1）     存储过程是预编译过的，执行效率高。")]),t._v(" "),s("p",[t._v("2）     存储过程的代码直接存放于数据库中，通过存储过程名直接调用，减少网络通讯。")]),t._v(" "),s("p",[t._v("3）     安全性高，执行存储过程需要有一定权限的用户。")]),t._v(" "),s("p",[t._v("4）     存储过程可以重复使用，减少数据库开发人员的工作量。")]),t._v(" "),s("p",[t._v("缺点")]),t._v(" "),s("p",[t._v("1）     调试麻烦，但是用 PL/SQL Developer 调试很方便！弥补这个缺点。")]),t._v(" "),s("p",[t._v("2）     移植问题，数据库端代码当然是与数据库相关的。但是如果是做工程型项目，基本不存在移植问题。")]),t._v(" "),s("p",[t._v("3）     重新编译问题，因为后端代码是运行前编译的，如果带有引用关系的对象发生改变时，受影响的存储过程、包将需要重新编译（不过也可以设置成运行时刻自动编译）。")]),t._v(" "),s("p",[t._v("4）     如果在一个程序系统中大量的使用存储过程，到程序交付使用的时候随着用户需求的增加会导致数据结构的变化，接着就是系统的相关问题了，   后如果用")]),t._v(" "),s("p",[t._v("户想维护该系统可以说是很难很难、而且代价是空前的，维护起来更麻烦。")]),t._v(" "),s("h1",{attrs:{id:"触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[t._v("#")]),t._v(" 触发器")]),t._v(" "),s("h2",{attrs:{id:"什么是触发器-触发器的使用场景有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是触发器-触发器的使用场景有哪些"}},[t._v("#")]),t._v(" 什么是触发器？触发器的使用场景有哪些？")]),t._v(" "),s("p",[t._v("触发器是用户定义在关系表上的一类由事件驱动的特殊的存储过程。触发器是指一段代码，当触发某个事件时，自动执行这些代码。")]),t._v(" "),s("p",[t._v("使用场景")]),t._v(" "),s("ul",[s("li",[t._v("可以通过数据库中的相关表实现级联更改。")]),t._v(" "),s("li",[t._v("实时监控某张表中的某个字段的更改而需要做出相应的处理。")]),t._v(" "),s("li",[t._v("例如可以生成某些业务的编号。")]),t._v(" "),s("li",[t._v("注意不要滥用，否则会造成数据库及应用程序的维护困难。")]),t._v(" "),s("li",[t._v("大家需要牢记以上基础知识点，重点是理解数据类型CHAR和VARCHAR的差异，表存储引擎InnoDB和MyISAM的区别。")])]),t._v(" "),s("h2",{attrs:{id:"mysql中都有哪些触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql中都有哪些触发器"}},[t._v("#")]),t._v(" MySQL中都有哪些触发器？")]),t._v(" "),s("ul",[s("li",[t._v("Before Insert")]),t._v(" "),s("li",[t._v("After Insert")]),t._v(" "),s("li",[t._v("Before Update")]),t._v(" "),s("li",[t._v("After Update")]),t._v(" "),s("li",[t._v("Before Delete")]),t._v(" "),s("li",[t._v("After Delete")])]),t._v(" "),s("h1",{attrs:{id:"常用sql语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用sql语句"}},[t._v("#")]),t._v(" 常用SQL语句")]),t._v(" "),s("h2",{attrs:{id:"sql语句主要分为哪几类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql语句主要分为哪几类"}},[t._v("#")]),t._v(" SQL语句主要分为哪几类")]),t._v(" "),s("p",[t._v("数据定义语言DDL（Data Ddefinition Language）CREATE，DROP，ALTER 主要为以上操作 即对逻辑结构等有操作的，其中包括表结构，视图和索引。")]),t._v(" "),s("p",[t._v("数据查询语言DQL（Data Query Language）SELECT")]),t._v(" "),s("p",[t._v("这个较为好理解 即查询操作，以select关键字。各种简单查询，连接查询等 都属于DQL。")]),t._v(" "),s("p",[t._v("数据操纵语言DML（Data Manipulation Language）INSERT，UPDATE，")]),t._v(" "),s("p",[t._v("DELETE")]),t._v(" "),s("p",[t._v("主要为以上操作 即对数据进行操作的，对应上面所说的查询操作 DQL与DML共同构建了多数初级程序员常用的增删改查操作。而查询是较为特殊的一种 被划分到DQL中。")]),t._v(" "),s("p",[t._v("数据控制功能DCL（Data Control Language）GRANT，REVOKE，")]),t._v(" "),s("p",[t._v("COMMIT，ROLLBACK")]),t._v(" "),s("p",[t._v("主要为以上操作 即对数据库安全性完整性等有操作的，可以简单的理解为权限控制等")]),t._v(" "),s("h2",{attrs:{id:"超键、候选键、主键、外键分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超键、候选键、主键、外键分别是什么"}},[t._v("#")]),t._v(" 超键、候选键、主键、外键分别是什么？")]),t._v(" "),s("p",[t._v("超键：在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键。超键包含候选键和主键。")]),t._v(" "),s("p",[t._v("​             候选键：是  小超键，即没有冗余元素的超键。")]),t._v(" "),s("p",[t._v("主键：数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。")]),t._v(" "),s("p",[t._v("一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）。")]),t._v(" "),s("p",[t._v("​            外键：在一个表中存在的另一个表的主键称此表的外键。")]),t._v(" "),s("h2",{attrs:{id:"sql约束有哪几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql约束有哪几种"}},[t._v("#")]),t._v(" SQL约束有哪几种？")]),t._v(" "),s("p",[t._v("SQL 约束有哪几种？")]),t._v(" "),s("p",[t._v("NOT NULL: 用于控制字段的内容一定不能为空（NULL）。")]),t._v(" "),s("p",[t._v("UNIQUE: 控件字段内容不能重复，一个表允许有多个 Unique 约束。")]),t._v(" "),s("p",[t._v("PRIMARY KEY: 也是用于控件字段内容不能重复，但它在一个表只允许出现一个。")]),t._v(" "),s("p",[t._v("FOREIGN KEY: 用于预防破坏表之间连接的动作，也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。")]),t._v(" "),s("p",[t._v("​            CHECK: 用于控制字段的值范围。")]),t._v(" "),s("h2",{attrs:{id:"六种关联查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六种关联查询"}},[t._v("#")]),t._v(" 六种关联查询")]),t._v(" "),s("p",[t._v("交叉连接（CROSS JOIN）")]),t._v(" "),s("p",[t._v("内连接（INNER JOIN）")]),t._v(" "),s("p",[t._v("外连接（LEFT JOIN/RIGHT JOIN）")]),t._v(" "),s("p",[t._v("联合查询（UNION与UNION ALL）")]),t._v(" "),s("p",[t._v("全连接（FULL JOIN）")]),t._v(" "),s("p",[t._v("交叉连接（CROSS JOIN）")]),t._v(" "),s("p",[t._v("SELECT * FROM A,B(,C)或者SELECT * FROM A CROSS JOIN B (CROSS JOIN C)#没有任何关联条件，结果是笛卡尔积，结果集会很大，没有意义，很少使用内连接（INNER")]),t._v(" "),s("p",[t._v("JOIN）SELECT * FROM A,B WHERE A.id=B.id或者SELECT * FROM A INNER JOIN B")]),t._v(" "),s("p",[t._v("ON A.id=B.id多表中同时符合某种条件的数据记录的集合，INNER JOIN可以缩写为JOIN")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("内连接分为三类")]),t._v(" "),s("p",[t._v("等值连接：ON A.id=B.id 不等值连接：ON A.id > B.id")]),t._v(" "),s("p",[t._v("自连接：SELECT * FROM A T1 INNER JOIN A T2 ON T1.id=T2.pid")]),t._v(" "),s("p",[t._v("外连接（LEFT JOIN/RIGHT JOIN）")]),t._v(" "),s("p",[t._v("左外连接：LEFT OUTER JOIN, 以左表为主，先查询出左表，按照ON后的关联")]),t._v(" "),s("p",[t._v("条件匹配右表，没有匹配到的用NULL填充，可以简写成LEFT JOIN")]),t._v(" "),s("p",[t._v("右外连接：RIGHT OUTER JOIN, 以右表为主，先查询出右表，按照ON后的关")]),t._v(" "),s("p",[t._v("联条件匹配左表，没有匹配到的用NULL填充，可以简写成RIGHT JOIN")]),t._v(" "),s("p",[t._v("联合查询（UNION与UNION ALL）")]),t._v(" "),s("p",[t._v("SELECT * FROM A UNION SELECT * FROM B UNION ...")]),t._v(" "),s("p",[t._v("1")]),t._v(" "),s("p",[t._v("就是把多个结果集集中在一起，UNION前的结果为基准，需要注意的是联合查")]),t._v(" "),s("p",[t._v("询的列数要相等，相同的记录行会合并如果使用UNION ALL，不会合并重复的记录行效率 UNION 高于 UNION ALL")]),t._v(" "),s("p",[t._v("全连接（FULL JOIN）")]),t._v(" "),s("p",[t._v("MySQL不支持全连接")]),t._v(" "),s("p",[t._v("可以使用LEFT JOIN 和UNION和RIGHT JOIN联合使用")]),t._v(" "),s("p",[t._v("SELECT * FROM A LEFT JOIN B ON A.id=B.id UNION SELECT * FROM A RIGHT JOIN B ON A.id=B.id")]),t._v(" "),s("p",[t._v("​            1")]),t._v(" "),s("p",[t._v("表连接面试题有2张表，1张R、1张S，R表有ABC三列，S表有CD两列，表中各有三条记录。")]),t._v(" "),s("p",[t._v("R表")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")])])])]),t._v(" "),s("p",[t._v("S表")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")])])])]),t._v(" "),s("ol",[s("li",[t._v("交叉连接(笛卡尔积):")])]),t._v(" "),s("p",[t._v("select r."),s("em",[t._v(",s.")]),t._v(" from r,s")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")]),t._v(" "),s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")])])])]),t._v(" "),s("ol",[s("li",[t._v("内连接结果：")])]),t._v(" "),s("p",[t._v("select r."),s("em",[t._v(",s.")]),t._v(" from r inner join s on r.c=s.c")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])])])]),t._v(" "),s("ol",[s("li",[t._v("左连接结果：")])]),t._v(" "),s("p",[t._v("select r."),s("em",[t._v(",s.")]),t._v(" from r left join s on r.c=s.c")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("ol",[s("li",[t._v("右连接结果：")])]),t._v(" "),s("p",[t._v("select r."),s("em",[t._v(",s.")]),t._v(" from r right join s on r.c=s.c")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("ol",[s("li",[t._v("全表连接的结果（MySql不支持，Oracle支持）：")])]),t._v(" "),s("p",[t._v("select r."),s("em",[t._v(",s.")]),t._v(" from r full join s on r.c=s.c")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("A")]),t._v(" "),s("th",[t._v("B")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",[t._v("D")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("a1")]),t._v(" "),s("td",[t._v("b1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("c1")]),t._v(" "),s("td",[t._v("d1")])]),t._v(" "),s("tr",[s("td",[t._v("a2")]),t._v(" "),s("td",[t._v("b2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("c2")]),t._v(" "),s("td",[t._v("d2")])]),t._v(" "),s("tr",[s("td",[t._v("a3")]),t._v(" "),s("td",[t._v("b3")]),t._v(" "),s("td",[t._v("c3")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("c4")]),t._v(" "),s("td",[t._v("d3")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"什么是子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是子查询"}},[t._v("#")]),t._v(" 什么是子查询")]),t._v(" "),s("ol",[s("li",[t._v("条件：一条SQL语句的查询结果做为另一条查询语句的条件或查询结果")]),t._v(" "),s("li",[t._v("嵌套：多条SQL语句嵌套使用，内部的SQL查询语句称为子查询。")])]),t._v(" "),s("h2",{attrs:{id:"子查询的三种情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询的三种情况"}},[t._v("#")]),t._v(" 子查询的三种情况")]),t._v(" "),s("ol",[s("li",[t._v("子查询是单行单列的情况：结果集是一个值，父查询使用：=、 <、 > 等运算符")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\t‐‐ 查询工资最高的员工是谁？\n2\tselect * from employee where salary=(select max(salary) from employee);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("子查询是多行单列的情况：结果集类似于一个数组，父查询使用：in 运算符")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\t‐‐ 查询工资最高的员工是谁？\n2\tselect * from employee where salary=(select max(salary) from employee);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("子查询是多行多列的情况：结果集类似于一张虚拟表，不能用于where 条件，用于select子句中做为子表")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\t‐‐ 1) 查询出2011年以后入职的员工信息\n2\t‐‐ 2) 查询所有的部门信息，与上面的虚拟表中的信息比对，找出所有部门ID相等的员工。\n3\tselect * from dept d, (select * from employee where join_date >'2011‐1‐\n1') e where e.dept_id = d.id;\n4\t‐‐ 使用表连接：\n5\tselect d.*, e.* from dept d inner join employee e on d.id = e.dept_id whe re e.join_date >'2011‐1‐1'\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"mysql中in和exists区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql中in和exists区别"}},[t._v("#")]),t._v(" mysql中in和exists区别")]),t._v(" "),s("p",[t._v("mysql中的in语句是把外表和内表作hash 连接，而exists语句是对外表作loop")]),t._v(" "),s("p",[t._v("循环，每次loop循环再对内表进行查询。一直大家都认为exists比in语句的效率要高，这种说法其实是不准确的。这个是要区分环境的。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果查询的两个表大小相当，那么用in和exists差别不大。")])]),t._v(" "),s("li",[s("p",[t._v("如果两个表中一个较小，一个是大表，则子查询表大的用exists，子查询表小的用in。")])]),t._v(" "),s("li",[s("p",[t._v("not in 和not exists：如果查询语句使用了not in，那么内外表都进行全表扫描，没有用到索引；而not extsts的子查询依然能用到表上的索引。所以无论那个表大，用not exists都比not in要快。")])])]),t._v(" "),s("h2",{attrs:{id:"varchar与char的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#varchar与char的区别"}},[t._v("#")]),t._v(" varchar与char的区别")]),t._v(" "),s("p",[t._v("char的特点")]),t._v(" "),s("p",[t._v("char表示定长字符串，长度是固定的；如果插入数据的长度小于char的固定长度时，则用空格填充；")]),t._v(" "),s("p",[t._v("因为长度固定，所以存取速度要比varchar快很多，甚至能快50%，但正因为其长度固定，所以会占据多余的空间，是空间换时间的做法；")]),t._v(" "),s("p",[t._v("对于char来说，   多能存放的字符个数为255，和编码无关 varchar的特点")]),t._v(" "),s("p",[t._v("varchar表示可变长字符串，长度是可变的；")]),t._v(" "),s("p",[t._v("插入的数据是多长，就按照多长来存储；")]),t._v(" "),s("p",[t._v("varchar在存取方面与char相反，它存取慢，因为长度不固定，但正因如此，不占据多余的空间，是时间换空间的做法；")]),t._v(" "),s("p",[t._v("对于varchar来说， 多能存放的字符个数为65532 总之，结合性能角度（char更快）和节省磁盘空间角度（varchar更小），具体情况还需具体来设计数据库才是妥当的做法。")]),t._v(" "),s("h2",{attrs:{id:"varchar-50-中50的涵义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#varchar-50-中50的涵义"}},[t._v("#")]),t._v(" varchar(50)中50的涵义")]),t._v(" "),s("p",[t._v("多存放50个字符，varchar(50)和(200)存储hello所占空间一样，但后者在排")]),t._v(" "),s("p",[t._v("序时会消耗更多内存，因为order by col采用fixed_length计算col长度")]),t._v(" "),s("p",[t._v("(memory引擎也一样)。在早期 MySQL 版本中， 50 代表字节数，现在代表字符数。")]),t._v(" "),s("h2",{attrs:{id:"int-20-中20的涵义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int-20-中20的涵义"}},[t._v("#")]),t._v(" int(20)中20的涵义")]),t._v(" "),s("p",[t._v("是指显示字符的长度。20表示 大显示宽度为20，但仍占4字节存储，存储范围不变；")]),t._v(" "),s("p",[t._v("不影响内部存储，只是影响带 zerofill 定义的 int 时，前面补多少个 0，易于报表展示")]),t._v(" "),s("h2",{attrs:{id:"mysql为什么这么设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql为什么这么设计"}},[t._v("#")]),t._v(" mysql为什么这么设计")]),t._v(" "),s("p",[t._v("对大多数应用没有意义，只是规定一些工具用来显示字符的个数；int(1)和 int(20)存储和计算均一样；")]),t._v(" "),s("h2",{attrs:{id:"mysql中int-10-和char-10-以及varchar-10-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql中int-10-和char-10-以及varchar-10-的区别"}},[t._v("#")]),t._v(" mysql中int(10)和char(10)以及varchar(10)的区别")]),t._v(" "),s("ul",[s("li",[t._v("int(10)的10表示显示的数据的长度，不是存储数据的大小； chart(10)和varchar(10)的10表示存储数据的大小，即表示存储多少个字符。")])]),t._v(" "),s("p",[t._v("int(10) 10位的数据长度 9999999999，占32个字节，int型4位 char(10) 10位固定字符串，不足补空格   多10个字符")]),t._v(" "),s("p",[t._v("varchar(10) 10位可变字符串，不足补空格  多10个字符")]),t._v(" "),s("ul",[s("li",[t._v("char(10)表示存储定长的10个字符，不足10个就用空格补齐，占用更多的存储空间")]),t._v(" "),s("li",[t._v("varchar(10)表示存储10个变长的字符，存储多少个就是多少个，空格也按一个字符存储，这一点是和char(10)的空格不同的，char(10)的空格表示占位不算一个字符")])]),t._v(" "),s("h2",{attrs:{id:"float和double的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float和double的区别是什么"}},[t._v("#")]),t._v(" FLOAT和DOUBLE的区别是什么？")]),t._v(" "),s("p",[t._v("FLOAT类型数据可以存储至多8位十进制数，并在内存中占4字节。")]),t._v(" "),s("p",[t._v("DOUBLE类型数据可以存储至多18位十进制数，并在内存中占8字节。")]),t._v(" "),s("h2",{attrs:{id:"drop、delete与truncate的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drop、delete与truncate的区别"}},[t._v("#")]),t._v(" drop、delete与truncate的区别")]),t._v(" "),s("h3",{attrs:{id:"三者都表示删除-但是三者有一些差别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三者都表示删除-但是三者有一些差别"}},[t._v("#")]),t._v(" 三者都表示删除，但是三者有一些差别：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Delete")]),t._v(" "),s("th",[t._v("Truncate")]),t._v(" "),s("th",[t._v("Drop")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("类型")]),t._v(" "),s("td",[t._v("属于DML")]),t._v(" "),s("td",[t._v("属于DDL")]),t._v(" "),s("td",[t._v("属于DDL")])]),t._v(" "),s("tr",[s("td",[t._v("回滚")]),t._v(" "),s("td",[t._v("可回滚")]),t._v(" "),s("td",[t._v("不可回滚")]),t._v(" "),s("td",[t._v("不可回滚")])]),t._v(" "),s("tr",[s("td",[t._v("删除内容")]),t._v(" "),s("td",[t._v("表结构还在，删除表的全部或者一部分数据行")]),t._v(" "),s("td",[t._v("表结构还在，删除表中的所有数据")]),t._v(" "),s("td",[t._v("从数据库中删除表，所有的数据行，索引和权限也会被删除")])]),t._v(" "),s("tr",[s("td",[t._v("删除速度")]),t._v(" "),s("td",[t._v("删除速度慢，需要逐行删除")]),t._v(" "),s("td",[t._v("删除速度快")]),t._v(" "),s("td",[t._v("删除速度快")])])])]),t._v(" "),s("p",[t._v("因此，在不再需要一张表的时候，用drop；在想删除部分数据行时候，用 delete；在保留表而删除所有数据的时候用truncate。")]),t._v(" "),s("h2",{attrs:{id:"union与unionall的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#union与unionall的区别"}},[t._v("#")]),t._v(" UNION与UNIONALL的区别？")]),t._v(" "),s("p",[t._v("如果使用UNION ALL，不会合并重复的记录行")]),t._v(" "),s("p",[t._v("效率 UNION 高于 UNION ALL")]),t._v(" "),s("h1",{attrs:{id:"sql优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[t._v("#")]),t._v(" SQL优化")]),t._v(" "),s("h2",{attrs:{id:"如何定位及优化sql语句的性能问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何定位及优化sql语句的性能问题"}},[t._v("#")]),t._v(" 如何定位及优化SQL语句的性能问题？")]),t._v(" "),s("h2",{attrs:{id:"创建的索引有没有被使用到-或者说怎么才可以知道这条语句运行很慢的原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建的索引有没有被使用到-或者说怎么才可以知道这条语句运行很慢的原因"}},[t._v("#")]),t._v(" 创建的索引有没有被使用到?或者说怎么才可以知道这条语句运行很慢的原因？")]),t._v(" "),s("p",[t._v("对于低性能的SQL语句的定位， 重要也是 有效的方法就是使用执行计划， MySQL提供了explain命令来查看语句的执行计划。 我们知道，不管是哪种数据库，或者是哪种数据库引擎，在对一条SQL语句进行执行的过程中都会做很多相关的优化，对于查询语句，最重要的优化方式就是使用索引。 而执行计划，就是显示数据库引擎对于SQL语句的执行的详细情况，其中包含了是否使用索引，使用什么索引，使用的索引的相关信息等。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/ggjucheng/archive/2012/11/11/2765237.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("以下示例网址"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t3\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\namd t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("other_column "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("id")]),t._v(" "),s("th",[t._v("select_type")]),t._v(" "),s("th",[t._v("table")]),t._v(" "),s("th",[t._v("type")]),t._v(" "),s("th",[t._v("possible_keys")]),t._v(" "),s("th",[t._v("key")]),t._v(" "),s("th",[t._v("key_len")]),t._v(" "),s("th",[t._v("ref")]),t._v(" "),s("th",[t._v("rows")]),t._v(" "),s("th",[t._v("Extra")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("t1")]),t._v(" "),s("td",[t._v("ref")]),t._v(" "),s("td",[t._v("PRIMARY, idx_t1")]),t._v(" "),s("td",[t._v("idx_t1")]),t._v(" "),s("td",[t._v("92")]),t._v(" "),s("td",[t._v("const")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("Using where")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("t3")]),t._v(" "),s("td",[t._v("eq_ref")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("test.t1.ID")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("Using index")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("t2")]),t._v(" "),s("td",[t._v("eq_ref")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("test.t1.ID")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("执行计划包含的信息 id 有一组数字组成。表示一个查询中各个子查询的执行顺序;")]),t._v(" "),s("ul",[s("li",[t._v("id相同执行顺序由上至下。")]),t._v(" "),s("li",[t._v("id不同，id值越大优先级越高，越先被执行。")]),t._v(" "),s("li",[t._v("id为null时表示一个结果集，不需要使用它查询，常出现在包含union等查询语句中。")])]),t._v(" "),s("p",[t._v("select_type 每个子查询的查询类型，一些常见的查询类型。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("id")]),t._v(" "),s("th",[t._v("select_ty pe")]),t._v(" "),s("th",[t._v("descripti on")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("SIMPLE")]),t._v(" "),s("td",[t._v("不包含任何子查询  或union等查询")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("PRIMARY")]),t._v(" "),s("td",[t._v("包含子查询  外层查询就显示为   PRIMARY")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("SUBQUER Y")]),t._v(" "),s("td",[t._v("在select或  where字句中包含的查询")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("DERIVED")]),t._v(" "),s("td",[t._v("from字句中包含的查询")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("UNION")]),t._v(" "),s("td",[t._v("出现在  union后的查询语句中")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("UNION RESULT")]),t._v(" "),s("td",[t._v("从UNION 中获取结果集，例如上文的")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("第三个例子")])])])]),t._v(" "),s("p",[t._v("table 查询的数据表，当从衍生表中查数据时会显示 x 表示对应的执行计划id")]),t._v(" "),s("p",[t._v("partitions 表分区、表创建的时候可以指定通过那个列进行表分区。 举个例子：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\tcreate table tmp (\n2\tid int unsigned not null AUTO_INCREMENT,\n3\tname varchar(255),\n4\tPRIMARY KEY(id))\n5\tengine=innodb partition by key(id) partitions 5;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("type(非常重要，可以看到有没有走索引) 访问类型")]),t._v(" "),s("p",[t._v("ALL 扫描全表数据 index 遍历索引 range 索引范围查找 index_subquery 在子查询中使用 ref unique_subquery 在子查询中使用 eq_ref ref_or_null 对Null进行索引的优化的 ref fulltext 使用全文索引")]),t._v(" "),s("p",[t._v("ref 使用非唯一索引查找数据 eq_ref 在join查询中使用PRIMARY KEYorUNIQUE NOT NULL索引关联。")]),t._v(" "),s("p",[t._v("possible_keys 可能使用的索引，注意不一定会使用。查询涉及到的字段上若存在索引，则该索引将被列出来。当该列为 NULL时就要考虑当前的SQL是否需要优化了。")]),t._v(" "),s("p",[t._v("key 显示MySQL在查询中实际使用的索引，若没有使用索引，显示为NULL。 TIPS:查询中若使用了覆盖索引(覆盖索引：索引的数据覆盖了需要查询的所有数据)，则该索引仅出现在key列表中")]),t._v(" "),s("p",[t._v("key_length 索引长度")]),t._v(" "),s("p",[t._v("ref 表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值 rows 返回估算的结果集数目，并不是一个准确的值。")]),t._v(" "),s("p",[t._v("extra 的信息非常丰富，常见的有：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Using index 使用覆盖索引")])]),t._v(" "),s("li",[s("p",[t._v("Using where 使用了用where子句来过滤结果集")])]),t._v(" "),s("li",[s("p",[t._v("Using filesort 使用文件排序，使用非索引列进行排序时出现，非常消耗性能，尽量优化。")])]),t._v(" "),s("li",[s("p",[t._v("Using temporary 使用了临时表 sql优化的目标可以参考阿里开发手册")])])]),t._v(" "),s("p",[t._v("【推荐】SQL性能优化的目标：至少要达到 range 级别，要求是ref级别，如果可以是")]),t._v(" "),s("p",[t._v("consts 好。 说明： 1） consts 单表中  多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。 2） ref 指的是使用普通的索引（normal index）。 3） range 对索引进行范围检索。 反例：explain表的结果，type=index，索引物理文件全扫描，速度非常慢，这个index级别比较range还低，与全表扫描是小巫见大巫。")]),t._v(" "),s("h2",{attrs:{id:"sql的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql的生命周期"}},[t._v("#")]),t._v(" SQL的生命周期？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("应用服务器与数据库服务器建立一个连接")])]),t._v(" "),s("li",[s("p",[t._v("数据库进程拿到请求sql")])]),t._v(" "),s("li",[s("p",[t._v("解析并生成执行计划，执行")])]),t._v(" "),s("li",[s("p",[t._v("读取数据到内存并进行逻辑处理")])]),t._v(" "),s("li",[s("p",[t._v("通过步骤一的连接，发送结果到客户端")])]),t._v(" "),s("li",[s("p",[t._v("关掉连接，释放资源")])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.processon.com/view/601191b25653bb05f9426a3d",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL的生命周期"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"大表数据查询-怎么优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大表数据查询-怎么优化"}},[t._v("#")]),t._v(" 大表数据查询，怎么优化")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("优化shema、sql语句+索引；")])]),t._v(" "),s("li",[s("p",[t._v("第二加缓存，memcached, redis；")])]),t._v(" "),s("li",[s("p",[t._v("主从复制，读写分离；")])]),t._v(" "),s("li",[s("p",[t._v("垂直拆分，根据你模块的耦合度，将一个大的系统分为多个小的系统，也就是分布式系统；")])]),t._v(" "),s("li",[s("p",[t._v("水平切分，针对数据量大的表，这一步 麻烦， 能考验技术水平，要选择一个合理的sharding key, 为了有好的查询效率，表结构也要改动，")])])]),t._v(" "),s("p",[t._v("做一定的冗余，应用也要改，sql中尽量带sharding key，将数据定位到限定的表上去查，而不是扫描全部的表；")]),t._v(" "),s("h2",{attrs:{id:"超大分页怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超大分页怎么处理"}},[t._v("#")]),t._v(" 超大分页怎么处理？")]),t._v(" "),s("p",[t._v("超大的分页一般从两个方向上来解决.")]),t._v(" "),s("ul",[s("li",[t._v("数据库层面,这也是我们主要集中关注的(虽然收效没那么大),类似于select * from table where age > 20 limit 1000000,10这种查询其实也是有可以优化的余地的. 这条语句需要load1000000数据然后基本上全部丢弃,只取10条当然比较慢. 当时我们可以修改为select * from table where id in (select id from table where age > 20 limit 1000000,10).这样虽然也load了一百万的数据,但是由于索引覆盖,要查询的所有字段都在索引中,所以速度会很快. 同时如果ID连续的好,我们还可以select * from table where id > 1000000 limit 10,效率也是不错的,优化的可能性有许多种, 但是核心思想都一样,就是减少load的数据.")]),t._v(" "),s("li",[t._v("从需求的角度减少这种请求…主要是不做类似的需求(直接跳转到几百万页之后的具体某一页.只允许逐页查看或者按照给定的路线走,这样可预测,可缓存)以及防止ID泄漏且连续被人恶意攻击.")])]),t._v(" "),s("p",[t._v("解决超大分页,其实主要是靠缓存,可预测性的提前查到内容,缓存至redis等k-V数据库中,直接返回即可.")]),t._v(" "),s("p",[t._v("在阿里巴巴《Java开发手册》中,对超大分页的解决办法是类似于上面提到的第一种.")]),t._v(" "),s("p",[t._v("【推荐】利用延迟关联或者子查询优化超多分页场景。 说明：MySQL并不是跳过offset")]),t._v(" "),s("p",[t._v("行，而是取offset+N行，然后返回放弃前offset行，返回N行，那当offset特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行SQL改写。 正例：先快速定位需要获取的id段，然后再关联：")]),t._v(" "),s("p",[s("code",[t._v("SELECT a.* FROM 表1 a,(select id from 表1 where 条件 LIMIT 100000,20) b w here a.id=b.id")])]),t._v(" "),s("h2",{attrs:{id:"mysql分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql分页"}},[t._v("#")]),t._v(" mysql分页")]),t._v(" "),s("p",[t._v("LIMIT 子句可以被用于强制 SELECT 语句返回指定的记录数。LIMIT 接受一个或两个数字参数。参数必须是一个整数常量。如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的  大数目。初始记录行的偏移量是 0(而不是 1)")]),t._v(" "),s("p",[t._v("mysql> SELECT * FROM table LIMIT 5,10; // 检索记录行 6-15")]),t._v(" "),s("p",[t._v("​            1")]),t._v(" "),s("p",[t._v("为了检索从某一个偏移量到记录集的结束所有的记录行，可以指定第二个参数为")]),t._v(" "),s("p",[t._v("-1：")]),t._v(" "),s("p",[t._v("mysql> SELECT * FROM table LIMIT 95,-1; // 检索记录行 96-last.")]),t._v(" "),s("p",[t._v("​            1")]),t._v(" "),s("p",[t._v("如果只给定一个参数，它表示返回 大的记录行数目： mysql> SELECT * FROM table LIMIT 5; //检索前 5 个记录行")]),t._v(" "),s("p",[t._v("​            1")]),t._v(" "),s("p",[t._v("换句话说，LIMIT n 等价于 LIMIT 0,n。")]),t._v(" "),s("h2",{attrs:{id:"慢查询日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#慢查询日志"}},[t._v("#")]),t._v(" 慢查询日志")]),t._v(" "),s("p",[t._v("用于记录执行时间超过某个临界值的SQL日志，用于快速定位慢查询，为我们的优化做参考。")]),t._v(" "),s("p",[t._v("开启慢查询日志")]),t._v(" "),s("p",[t._v("配置项：slow_query_log 可以使用show variables like ‘slov_query_log’查看是否开启，如果状态值为")]),t._v(" "),s("p",[t._v("OFF，可以使用set GLOBAL slow_query_log = on来开启，它会在datadir下产生一个xxx-slow.log的文件。")]),t._v(" "),s("p",[t._v("设置临界时间")]),t._v(" "),s("p",[t._v("配置项：long_query_time 查看：show VARIABLES like 'long_query_time'，单位秒设置：set long_query_time=0.5")]),t._v(" "),s("p",[t._v("实操时应该从长时间设置到短的时间，即将 慢的SQL优化掉")]),t._v(" "),s("p",[t._v("查看日志，一旦SQL超过了我们设置的临界时间就会被记录到xxx-slow.log中")]),t._v(" "),s("h2",{attrs:{id:"关心过业务系统里面的sql耗时吗-统计过慢查询吗-对慢查询都怎么优化过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关心过业务系统里面的sql耗时吗-统计过慢查询吗-对慢查询都怎么优化过"}},[t._v("#")]),t._v(" 关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？")]),t._v(" "),s("h3",{attrs:{id:"慢查询都怎么优化过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#慢查询都怎么优化过"}},[t._v("#")]),t._v(" 慢查询都怎么优化过？")]),t._v(" "),s("p",[t._v("在业务系统中，除了使用主键进行的查询，其他的我都会在测试库上测试其耗时，慢查询的统计主要由运维在做，会定期将业务中的慢查询反馈给我们。慢查询的优化首先要搞明白慢的原因是什么？ 是查询条件没有命中索引？是 load了不需要的数据列？还是数据量太大？所以优化也是针对这三个方向来的，")]),t._v(" "),s("p",[t._v("首先分析语句，看看是否load了额外的数据，可能是查询了多余的行并且抛弃掉了，可能是加载了许多结果中并不需要的列，对语句进行分析以及重写。")]),t._v(" "),s("p",[t._v("分析语句的执行计划，然后获得其使用索引的情况，之后修改语句或者修改索引，使得语句可以尽可能的命中索引。")]),t._v(" "),s("p",[t._v("​          如果对语句的优化已经无法进行，可以考虑表中的数据量是否太大，如果是的话可以进行横向或者纵向的分表。")]),t._v(" "),s("h2",{attrs:{id:"为什么要尽量设定一个主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要尽量设定一个主键"}},[t._v("#")]),t._v(" 为什么要尽量设定一个主键？")]),t._v(" "),s("p",[t._v("主键是数据库确保数据行在整张表唯一性的保障，即使业务上本张表没有主键，也建议添加一个自增长的ID列作为主键。设定了主键之后，在后续的删改查的时候可能更加快速以及确保操作数据范围安全。")]),t._v(" "),s("h2",{attrs:{id:"主键使用自增id还是uuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主键使用自增id还是uuid"}},[t._v("#")]),t._v(" 主键使用自增ID还是UUID？")]),t._v(" "),s("p",[t._v("推荐使用自增ID，不要使用UUID。")]),t._v(" "),s("p",[t._v("因为在InnoDB存储引擎中，主键索引是作为聚簇索引存在的，也就是说，主键索引的B+树叶子节点上存储了主键索引以及全部的数据(按照顺序)，如果主键索引是自增ID，那么只需要不断向后排列即可，如果是UUID，由于到来的ID与原来的大小不确定，会造成非常多的数据插入，数据移动，然后导致产生很多的内存碎片，进而造成插入性能的下降。")]),t._v(" "),s("p",[t._v("总之，在数据量大一些的情况下，用自增主键性能会好一些。")]),t._v(" "),s("p",[t._v("关于主键是聚簇索引，如果没有主键，InnoDB会选择一个唯一键来作为聚簇索引，如果没有唯一键，会生成一个隐式的主键。")]),t._v(" "),s("h2",{attrs:{id:"字段为什么要求定义为not-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段为什么要求定义为not-null"}},[t._v("#")]),t._v(" 字段为什么要求定义为not null？")]),t._v(" "),s("p",[t._v("null值会占用更多的字节，且会在程序中造成很多与预期不符的情况。")]),t._v(" "),s("h2",{attrs:{id:"如果要存储用户的密码散列-应该使用什么字段进行存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果要存储用户的密码散列-应该使用什么字段进行存储"}},[t._v("#")]),t._v(" 如果要存储用户的密码散列，应该使用什么字段进行存储？")]),t._v(" "),s("p",[t._v("密码散列，盐，用户身份证号等固定长度的字符串应该使用char而不是varchar 来存储，这样可以节省空间且提高检索效率。")]),t._v(" "),s("h2",{attrs:{id:"优化查询过程中的数据访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化查询过程中的数据访问"}},[t._v("#")]),t._v(" 优化查询过程中的数据访问")]),t._v(" "),s("p",[t._v("访问数据太多导致查询性能下降确定应用程序是否在检索大量超过需要的数据，可能是太多行或列确认MySQL服务器是否在分析大量不必要的数据行避免犯如下SQL语句错误")]),t._v(" "),s("p",[t._v("查询不需要的数据。解决办法：使用limit解决")]),t._v(" "),s("p",[t._v("多表关联返回全部列。解决办法：指定列名")]),t._v(" "),s("p",[t._v("总是返回全部列。解决办法：避免使用SELECT * 重复查询相同的数据。解决办法：可以缓存数据，下次直接读取缓存是否在扫描额外的记录。解决办法：")]),t._v(" "),s("p",[t._v("使用explain进行分析，如果发现查询需要扫描大量的数据，但只返回少数的行，可以通过如下技巧去优化：")]),t._v(" "),s("p",[t._v("使用索引覆盖扫描，把所有的列都放到索引中，这样存储引擎不需要回表获取对应行就可以返回结果。")]),t._v(" "),s("p",[t._v("改变数据库和表的结构，修改数据表范式")]),t._v(" "),s("p",[t._v("重写SQL语句，让优化器可以以更优的方式执行查询。")]),t._v(" "),s("h2",{attrs:{id:"优化长难的查询语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化长难的查询语句"}},[t._v("#")]),t._v(" 优化长难的查询语句")]),t._v(" "),s("p",[t._v("一个复杂查询还是多个简单查询")]),t._v(" "),s("p",[t._v("MySQL内部每秒能扫描内存中上百万行数据，相比之下，响应数据给客户端就要慢得多")]),t._v(" "),s("p",[t._v("使用尽可能小的查询是好的，但是有时将一个大的查询分解为多个小的查询是很有必要的。")]),t._v(" "),s("p",[t._v("切分查询将一个大的查询分为多个小的相同的查询")]),t._v(" "),s("p",[t._v("一次性删除1000万的数据要比一次删除1万，暂停一会的方案更加损耗服务器开销。")]),t._v(" "),s("p",[t._v("分解关联查询，让缓存的效率更高。")]),t._v(" "),s("p",[t._v("执行单个查询可以减少锁的竞争。")]),t._v(" "),s("p",[t._v("在应用层做关联更容易对数据库进行拆分。")]),t._v(" "),s("p",[t._v("查询效率会有大幅提升。")]),t._v(" "),s("p",[t._v("较少冗余记录的查询")]),t._v(" "),s("h2",{attrs:{id:"优化特定类型的查询语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化特定类型的查询语句"}},[t._v("#")]),t._v(" 优化特定类型的查询语句")]),t._v(" "),s("p",[t._v("count("),s("em",[t._v(")会忽略所有的列，直接统计所有列数，不要使用count(列名) MyISAM中，没有任何where条件的count(")]),t._v(")非常快。")]),t._v(" "),s("p",[t._v("当有where条件时，MyISAM的count统计不一定比其它引擎快。")]),t._v(" "),s("p",[t._v("可以使用explain查询近似值，用近似值替代count(*) 增加汇总表使用缓存")]),t._v(" "),s("h2",{attrs:{id:"优化关联查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化关联查询"}},[t._v("#")]),t._v(" 优化关联查询")]),t._v(" "),s("p",[t._v("确定ON或者USING子句中是否有索引。")]),t._v(" "),s("p",[t._v("确保GROUP BY和ORDER BY只有一个表中的列，这样MySQL才有可能使用索引")]),t._v(" "),s("h2",{attrs:{id:"优化子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化子查询"}},[t._v("#")]),t._v(" 优化子查询")]),t._v(" "),s("p",[t._v("用关联查询替代")]),t._v(" "),s("p",[t._v("优化GROUP BY和DISTINCT")]),t._v(" "),s("p",[t._v("这两种查询据可以使用索引来优化，是  有效的优化方法关联查询中，使用标识列分组的效率更高")]),t._v(" "),s("p",[t._v("如果不需要ORDER BY，进行GROUP BY时加ORDER BY NULL，MySQL不会再进行文件排序。")]),t._v(" "),s("p",[t._v("WITH ROLLUP超级聚合，可以挪到应用程序处理")]),t._v(" "),s("h2",{attrs:{id:"优化limit分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化limit分页"}},[t._v("#")]),t._v(" 优化LIMIT分页")]),t._v(" "),s("p",[t._v("LIMIT偏移量大的时候，查询效率较低")]),t._v(" "),s("p",[t._v("可以记录上次查询的   大ID，下次查询时直接根据该ID来查询")]),t._v(" "),s("h2",{attrs:{id:"优化union查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化union查询"}},[t._v("#")]),t._v(" 优化UNION查询")]),t._v(" "),s("p",[t._v("UNION ALL的效率高于UNION")]),t._v(" "),s("h2",{attrs:{id:"优化where子句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化where子句"}},[t._v("#")]),t._v(" 优化WHERE子句")]),t._v(" "),s("p",[t._v("解题方法对于此类考题，先说明如何定位低效SQL语句，然后根据SQL语句可能低效的原因做排查，先从索引着手，如果索引没有问题，考虑以上几个方面，数据访问的问题，长难查询句的问题还是一些特定类型优化的问题，逐一回答。")]),t._v(" "),s("p",[t._v("SQL语句优化的一些方法？")]),t._v(" "),s("p",[t._v("1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。")]),t._v(" "),s("p",[t._v("2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where num is null ‐‐ 可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：select id from t where num=0")])]),t._v(" "),s("p",[t._v("3.应尽量避免在 where 子句中使用!=或<>操作符，否则引擎将放弃使用索引而进行全表扫描。")]),t._v(" "),s("p",[t._v("4.应尽量避免在 where 子句中使用or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where num=10 or num=20 ‐‐ 可以这样查询：select id from t where num=10 union all select id from t where num=20")])]),t._v(" "),s("p",[t._v("​            5.in 和 not in 也要慎用，否则会导致全表扫描，如：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where num in(1,2,3) ‐‐ 对于连续的数值，能用 between 就不要用 in 了：select id from t where num between 1 and 3")])]),t._v(" "),s("p",[t._v("6.下面的查询也将导致全表扫描：select id from t where name like ‘% 李%’若要提高效率，可以考虑全文检索。")]),t._v(" "),s("p",[t._v("7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然 而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where num=@num ‐‐可以改为强制查询使用索引：select id from t with (index(索引名)) where num=@num")])]),t._v(" "),s("p",[t._v("8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where num/2=100 ‐‐ 应改为:select id from t where num=100*2")])]),t._v(" "),s("p",[t._v("9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：")]),t._v(" "),s("p",[s("code",[t._v("1 select id from t where substring(name,1,3)=’abc’ ‐‐ name以abc开头的id应改为: select id from t where name like ‘abc%’")])]),t._v(" "),s("p",[t._v("10.不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。")]),t._v(" "),s("h2",{attrs:{id:"数据库优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库优化"}},[t._v("#")]),t._v(" 数据库优化")]),t._v(" "),s("h2",{attrs:{id:"为什么要优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要优化"}},[t._v("#")]),t._v(" 为什么要优化")]),t._v(" "),s("p",[t._v("系统的吞吐量瓶颈往往出现在数据库的访问速度上随着应用程序的运行，数据库的中的数据会越来越多，处理时间会相应变慢数据是存放在磁盘上的，读写速度无法和内存相比优化原则：减少系统瓶颈，减少资源占用，增加系统的反应速度。")]),t._v(" "),s("h1",{attrs:{id:"数据库结构优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库结构优化"}},[t._v("#")]),t._v(" 数据库结构优化")]),t._v(" "),s("p",[t._v("一个好的数据库设计方案对于数据库的性能往往会起到事半功倍的效果。")]),t._v(" "),s("p",[t._v("需要考虑数据冗余、查询和更新的速度、字段的数据类型是否合理等多方面的内容。")]),t._v(" "),s("p",[t._v("将字段很多的表分解成多个表对于字段较多的表，如果有些字段的使用频率很低，可以将这些字段分离出来形成新表。")]),t._v(" "),s("p",[t._v("因为当一个表的数据量很大时，会由于使用频率低的字段的存在而变慢。")]),t._v(" "),s("p",[t._v("增加中间表对于需要经常联合查询的表，可以建立中间表以提高查询效率。")]),t._v(" "),s("p",[t._v("通过建立中间表，将需要通过联合查询的数据插入到中间表中，然后将原来的联合查询改为对中间表的查询。")]),t._v(" "),s("p",[t._v("增加冗余字段设计数据表时应尽量遵循范式理论的规约，尽可能的减少冗余字段，让数据库设计看起来精致、优雅。但是，合理的加入冗余字段可以提高查询速度。")]),t._v(" "),s("p",[t._v("表的规范化程度越高，表和表之间的关系越多，需要连接查询的情况也就越多，性能也就越差。")]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("p",[t._v("冗余字段的值在一个表中修改了，就要想办法在其他表中更新，否则就会导致数据不一致的问题")]),t._v(" "),s("h2",{attrs:{id:"mysql数据库cpu飙升到500-的话他怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据库cpu飙升到500-的话他怎么处理"}},[t._v("#")]),t._v(" MySQL数据库cpu飙升到500%的话他怎么处理？")]),t._v(" "),s("p",[t._v("当 cpu 飙升到 500%时，先用操作系统命令 top 命令观察是不是 mysqld 占用导致的，如果不是，找出占用高的进程，并进行相关处理。")]),t._v(" "),s("p",[t._v("如果是 mysqld 造成的， show processlist，看看里面跑的 session 情况，是不是有消耗资源的 sql 在运行。找出消耗高的 sql，看看执行计划是否准确， index 是否缺失，或者实在是数据量太大造成。")]),t._v(" "),s("p",[t._v("一般来说，肯定要 kill 掉这些线程(同时观察 cpu 使用率是否下降)，等进行相应的调整(比如说加索引、改 sql、改内存参数)之后，再重新跑这些 SQL。")]),t._v(" "),s("p",[t._v("也有可能是每个 sql 消耗资源并不多，但是突然之间，有大量的 session 连进来导致 cpu 飙升，这种情况就需要跟应用一起来分析为何连接数会激增，再做出相应的调整,比如说限制连接数等")]),t._v(" "),s("h2",{attrs:{id:"大表怎么优化-某个表有近千万数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大表怎么优化-某个表有近千万数据"}},[t._v("#")]),t._v(" 大表怎么优化？某个表有近千万数据，")]),t._v(" "),s("h2",{attrs:{id:"crud比较慢-如何优化-分库分表了是怎么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#crud比较慢-如何优化-分库分表了是怎么"}},[t._v("#")]),t._v(" CRUD比较慢，如何优化？分库分表了是怎么")]),t._v(" "),s("h2",{attrs:{id:"做的-分表分库了有什么问题-有用到中间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#做的-分表分库了有什么问题-有用到中间"}},[t._v("#")]),t._v(" 做的？分表分库了有什么问题？有用到中间")]),t._v(" "),s("h2",{attrs:{id:"件么-他们的原理知道么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#件么-他们的原理知道么"}},[t._v("#")]),t._v(" 件么？他们的原理知道么？")]),t._v(" "),s("p",[t._v("当MySQL单表记录数过大时，数据库的CRUD性能会明显下降，一些常见的优化措施如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("限定数据的范围： 务必禁止不带任何限制数据范围条件的查询语句。比如：我们当用户在查询订单历史的时候，我们可以控制在一个月的范围内。；")])]),t._v(" "),s("li",[s("p",[t._v("读/写分离： 经典的数据库拆分方案，主库负责写，从库负责读；")])]),t._v(" "),s("li",[s("p",[t._v("缓存： 使用MySQL的缓存，另外对重量级、更新少的数据可以考虑使用应用级别的缓存；")])])]),t._v(" "),s("p",[t._v("有就是通过分库分表的方式进行优化，主要有垂直分表和水平分表")]),t._v(" "),s("ol",[s("li",[t._v("垂直分区：")])]),t._v(" "),s("p",[t._v("根据数据库里面数据表的相关性进行拆分。 例如，用户表中既有用户的登录信息又有用户的基本信息，可以将用户表拆分成两个单独的表，甚至放到单独的库做分库。")]),t._v(" "),s("p",[t._v("简单来说垂直拆分是指数据表列的拆分，把一张列比较多的表拆分为多张表。 如下图所示，这样来说大家应该就更容易理解了。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("列1列2列3列4列5列6列7\n\t\t|\n\t\tv\n列1列2列3\t +\t列4列5列6列7\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("垂直拆分的优点： 可以使得行数据变小，在查询时减少读取的Block数，减少")]),t._v(" "),s("p",[t._v("I/O次数。此外，垂直分区可以简化表的结构，易于维护。")]),t._v(" "),s("p",[t._v("垂直拆分的缺点： 主键会出现冗余，需要管理冗余列，并会引起Join操作，可")]),t._v(" "),s("p",[t._v("以通过在应用层进行Join来解决。此外，垂直分区会让事务变得更加复杂；")]),t._v(" "),s("h3",{attrs:{id:"垂直分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垂直分表"}},[t._v("#")]),t._v(" 垂直分表")]),t._v(" "),s("p",[t._v("把主键和一些列放在一个表，然后把主键和另外的列放在另一个表中")]),t._v(" "),s("h4",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("p",[t._v("1、    如果一个表中某些列常用，另外一些列不常用")]),t._v(" "),s("p",[t._v("2、    可以使数据行变小，一个数据页能存储更多数据，查询时减少I/O次数")]),t._v(" "),s("h4",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("p",[t._v("有些分表的策略基于应用层的逻辑算法，一旦逻辑算法改变，整个分表逻辑都会改变，扩展性较差 对于应用层来说，逻辑算法增加开发成本管理冗余列，查询所有数据需要join操作")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("水平分区：")])]),t._v(" "),s("p",[t._v("保持数据表结构不变，通过某种策略存储数据分片。这样每一片数据分散到不同的表或者库中，达到了分布式的目的。 水平拆分可以支撑非常大的数据量。")]),t._v(" "),s("p",[t._v("水平拆分是指数据表行的拆分，表的行数超过200万行时，就会变慢，这时可以把一张的表的数据拆成多张表来存放。举个例子：我们可以将用户信息表拆分成多个用户信息表，这样就可以避免单一表数据量过大对性能造成影响。")]),t._v(" "),s("p",[t._v("水平拆分可以支持非常大的数据量。需要注意的一点是:分表仅仅是解决了单一表数据过大的问题，但由于表的数据还是在同一台机器上，其实对于提升")]),t._v(" "),s("p",[t._v("MySQL并发能力没有什么意义，所以 水平拆分最好分库 。")]),t._v(" "),s("p",[t._v("水平拆分能够 支持非常大的数据量存储，应用端改造也少，但 分片事务难以解决 ，跨界点Join性能较差，逻辑复杂。")]),t._v(" "),s("p",[t._v("《Java工程师修炼之道》的作者推荐 尽量不要对数据进行分片，因为拆分会带来逻辑、部署、运维的各种复杂度 ，一般的数据表在优化得当的情况下支撑千万以下的数据量是没有太大问题的。如果实在要分片，尽量选择客户端分片架构，这样可以减少一次和中间件的网络I/O。")]),t._v(" "),s("h3",{attrs:{id:"水平分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#水平分表"}},[t._v("#")]),t._v(" 水平分表：")]),t._v(" "),s("p",[t._v("表很大，分割后可以降低在查询时需要读的数据和索引的页数，同时也降低了索引的层数，提高查询次数")]),t._v(" "),s("h3",{attrs:{id:"适用场景-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景-2"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("p",[t._v("1、表中的数据本身就有独立性，例如表中分表记录各个地区的数据或者不同时期的数据，特别是有些数据常用，有些不常用。")]),t._v(" "),s("p",[t._v("​                    2、需要把数据存放在多个介质上。")]),t._v(" "),s("p",[t._v("水平切分的缺点")]),t._v(" "),s("p",[t._v("1、给应用增加复杂度，通常查询时需要多个表名，查询所有数据都需UNION操作")]),t._v(" "),s("p",[t._v("2、在许多数据库应用中，这种复杂度会超过它带来的优点，查询时会增加读一个索引层的磁盘次数")]),t._v(" "),s("p",[t._v("下面补充一下数据库分片的两种常见方案：")]),t._v(" "),s("p",[t._v("客户端代理：分片逻辑在应用端，封装在jar包中，通过修改或者封装JDBC层来实现。 当当网的 Sharding-")]),t._v(" "),s("p",[t._v("JDBC 、阿里的TDDL是两种比较常用的实现。")]),t._v(" "),s("p",[t._v("中间件代理：在应用和数据中间加了一个代理层。分片逻辑统一维护在中间件服务中。 我们现在谈的 Mycat")]),t._v(" "),s("p",[t._v("、360的Atlas、网易的DDB等等都是这种架构的实现。")]),t._v(" "),s("p",[t._v("分库分表后面临的问题")]),t._v(" "),s("p",[t._v("事务支持 分库分表后，就成了分布式事务了。如果依赖数据库本身的分布式事务管理功能去执行事务，将付出高昂的性能代价； 如果由应用程序去协助控制，形成程序逻辑上的事务，又会造成编程方面的负担。")]),t._v(" "),s("p",[t._v("​           跨库join")]),t._v(" "),s("p",[t._v("只要是进行切分，跨节点Join的问题是不可避免的。但是良好的设计和切分却可以减少此类情况的发生。解决这一问题的普遍做法是分两次查询实现。在第一次查询的结果集中找出关联数据的id,根据这些id发起第二次请求得到关联数据。 分库分表方案产品")]),t._v(" "),s("p",[t._v("跨节点的count,order by,group by以及聚合函数问题 这些是一类问题，因为它们都需要基于全部数据集合进行计算。多数的代理都不会自动处理合并工作。解决方案：与解决跨节点join问题的类似，分别在各个节点上得到结果后在应用程序端进行合并。和join不同的是每个结点的查询可以并行执行，因此很多时候它的速度要比单一大表快很多。但如果结果集很大，对应用程序内存的消耗是一个问题。")]),t._v(" "),s("p",[t._v("数据迁移，容量规划，扩容等问题 来自淘宝综合业务平台团队，它利用对2的倍数取余具有向前兼容的特性（如对4取余得1的数对2取余也是 1）来分配数据，避免了行级别的数据迁移，但是依然需要进行表级别的迁移，同时对扩容规模和分表数量都有限制。总得来说，这些方案都不是")]),t._v(" "),s("p",[t._v("十分的理想，多多少少都存在一些缺点，这也从一个侧面反映出了")]),t._v(" "),s("p",[t._v("Sharding扩容的难度。")]),t._v(" "),s("p",[t._v("ID问题")]),t._v(" "),s("p",[t._v("一旦数据库被切分到多个物理结点上，我们将不能再依赖数据库自身的主键生成机制。一方面，某个分区数据库自生成的ID无法保证在全局上是唯一的；另一方面，应用程序在插入数据之前需要先获得ID,以便进行")]),t._v(" "),s("p",[t._v("SQL路由. 一些常见的主键生成策略")]),t._v(" "),s("p",[t._v("UUID 使用UUID作主键是   简单的方案，但是缺点也是非常明显的。由于")]),t._v(" "),s("p",[t._v("UUID非常的长，除占用大量存储空间外， 主要的问题是在索引上，在建立索引和基于索引进行查询时都存在性能问题。 Twitter的分布式自增ID算法")]),t._v(" "),s("p",[t._v("Snowflake 在分布式系统中，需要生成全局UID的场合还是比较多的，twitter 的snowflake解决了这种需求，实现也还是很简单的，除去配置信息，核心代码就是毫秒级时间41位 机器ID 10位 毫秒内序列12位。")]),t._v(" "),s("p",[t._v("跨分片的排序分页般来讲，分页时需要按照指定字段进行排序。当排序字段就是分片字段的时候，我们通过分片规则可以比较容易定位到指定的分片，而当排序字段非分片字段的时候，情况就会变得比较复杂了。为了  终结果的准确性，我们需要在不同的分片节点中将数据进行排序并返回，并将不同分片返回的结果集进行汇总和再次排序，  后再返回给用户。如下图所示：")]),t._v(" "),s("p",[s("svg",{attrs:{id:"SvgjsSvg1188",width:"570.0028381347656",height:"360.0084991455078",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[s("defs",{attrs:{id:"SvgjsDefs1189"}},[s("linearGradient",{attrs:{id:"SvgjsLinearGradient1193",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1194","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1195","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1197",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1198","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1199","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1209",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1210","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1211","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1213",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1214","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1215","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("marker",{attrs:{id:"SvgjsMarker1261",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1262",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1271",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1272",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1275",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1276",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})])],1),s("rect",{attrs:{id:"SvgjsRect1190",width:"570.0028381347656",height:"360.0084991455078",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1191",transform:"translate(165.05682373046875,92.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1192",d:"M 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8L 63.725852966308594 60.199999999999996C 63.725852966308594 72.8 0 72.8 0 60.199999999999996L 0 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1193)"}}),s("path",{attrs:{id:"SvgjsPath1196",d:"M 63.725852966308594 9.8C 63.725852966308594 21 0 21 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1197)"}}),s("path",{attrs:{id:"SvgjsPath1200",d:"M 0 7Q 31.862926483154297 -7 63.725852966308594 7L 63.725852966308594 63Q 31.862926483154297 77 0 63L 0 7Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1201"}},[s("text",{attrs:{id:"SvgjsText1202","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"64px",fill:"#ffffff","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"22.775000000000002",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1203",dy:"16",x:"32"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1204"}},[t._v("Data")])]),s("tspan",{attrs:{id:"SvgjsTspan1205",dy:"16",x:"32"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1206"}},[t._v("Node1")])])])])]),s("g",{attrs:{id:"SvgjsG1207",transform:"translate(336.05682373046875,92.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1208",d:"M 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8L 63.725852966308594 60.199999999999996C 63.725852966308594 72.8 0 72.8 0 60.199999999999996L 0 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1209)"}}),s("path",{attrs:{id:"SvgjsPath1212",d:"M 63.725852966308594 9.8C 63.725852966308594 21 0 21 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1213)"}}),s("path",{attrs:{id:"SvgjsPath1216",d:"M 0 7Q 31.862926483154297 -7 63.725852966308594 7L 63.725852966308594 63Q 31.862926483154297 77 0 63L 0 7Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1217"}},[s("text",{attrs:{id:"SvgjsText1218","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"64px",fill:"#ffffff","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"22.775000000000002",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1219",dy:"16",x:"32"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1220"}},[t._v("Data")])]),s("tspan",{attrs:{id:"SvgjsTspan1221",dy:"16",x:"32"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1222"}},[t._v("Node2")])])])])]),s("g",{attrs:{id:"SvgjsG1223",transform:"translate(136.00885104077327,25.008529663085938)"}},[s("path",{attrs:{id:"SvgjsPath1224",d:"M 0 0L 121.82179834569952 0L 121.82179834569952 39L 0 39Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#99ccff"}}),s("g",{attrs:{id:"SvgjsG1225"}},[s("text",{attrs:{id:"SvgjsText1226","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"102px",fill:"#ffffff","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.375",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1227",dy:"16",x:"61"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1228"}},[t._v("ID 1-10000")])])])])]),s("g",{attrs:{id:"SvgjsG1229",transform:"translate(307.00885104077327,25.008529663085938)"}},[s("path",{attrs:{id:"SvgjsPath1230",d:"M 0 0L 121.82179834569952 0L 121.82179834569952 39L 0 39Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#99ccff"}}),s("g",{attrs:{id:"SvgjsG1231"}},[s("text",{attrs:{id:"SvgjsText1232","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"102px",fill:"#ffffff","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.375",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1233",dy:"16",x:"61"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1234"}},[t._v("ID 10001-20000")])])])])]),s("g",{attrs:{id:"SvgjsG1235",transform:"translate(307.00885104077327,151.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1236",d:"M 0 0L 238 0L 238 32L 0 32Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1237"}},[s("text",{attrs:{id:"SvgjsText1238","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"238px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"-1.125",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1239",dy:"16",x:"119"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1240"}},[t._v("执行")])]),s("tspan",{attrs:{id:"SvgjsTspan1241",dy:"16",x:"119"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1242"}},[t._v("select .. order by date desc limit 0,10")])])])])]),s("g",{attrs:{id:"SvgjsG1243",transform:"translate(153.78267669677734,230.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1244",d:"M 0 0L 252.2741470336914 0L 252.2741470336914 40L 0 40Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#99ccff"}}),s("g",{attrs:{id:"SvgjsG1245"}},[s("text",{attrs:{id:"SvgjsText1246","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"233px",fill:"#ffffff","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"2.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1247",dy:"16",x:"126.5"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1248"}},[t._v("合并, 再执行")])]),s("tspan",{attrs:{id:"SvgjsTspan1249",dy:"16",x:"126.5"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1250"}},[t._v("select .. order by date desc limit 0,10")])])])])]),s("g",{attrs:{id:"SvgjsG1251",transform:"translate(25.008851040773266,151.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1252",d:"M 0 0L 238 0L 238 32L 0 32Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1253"}},[s("text",{attrs:{id:"SvgjsText1254","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"238px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"-1.125",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1255",dy:"16",x:"119"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1256"}},[t._v("执行")])]),s("tspan",{attrs:{id:"SvgjsTspan1257",dy:"16",x:"119"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1258"}},[t._v("select .. order by date desc limit 0,10")])])])])]),s("g",{attrs:{id:"SvgjsG1259"}},[s("path",{attrs:{id:"SvgjsPath1260",d:"M279.91975021362305 270.00852966308594C 279.91975021362305 286.4085296630859 279.91975021362305 294.60852966308596 279.91975021362305 311.00852966308594",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1261)"}})]),s("g",{attrs:{id:"SvgjsG1263",transform:"translate(219.91975021362305,311.00852966308594)"}},[s("path",{attrs:{id:"SvgjsPath1264",d:"M 0 0L 120 0L 120 23L 0 23Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1265"}},[s("text",{attrs:{id:"SvgjsText1266","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"2.375",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1267",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1268"}},[t._v("返回结果")])])])])]),s("g",{attrs:{id:"SvgjsG1269"}},[s("path",{attrs:{id:"SvgjsPath1270",d:"M144.00885104077327 183.00852966308594C 144.00885104077327 210.09218574701657 126.69902061284668 250.00852966308594 153.78267669677734 250.00852966308594",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1271)"}})]),s("g",{attrs:{id:"SvgjsG1273"}},[s("path",{attrs:{id:"SvgjsPath1274",d:"M426.00885104077327 183.00852966308594C 426.00885104077327 210.97160072129736 434.0198947886802 250.00852966308594 406.05682373046875 250.00852966308594",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1275)"}})]),s("g",{attrs:{id:"SvgjsG1277"}},[s("path",{attrs:{id:"SvgjsPath1278",d:"M196.91975021362302 64.00852966308594C 196.91975021362302 75.20852966308593 196.91975021362305 80.80852966308595 196.91975021362305 92.00852966308594",stroke:"#323232","stroke-width":"2",fill:"none"}})]),s("g",{attrs:{id:"SvgjsG1279"}},[s("path",{attrs:{id:"SvgjsPath1280",d:"M367.91975021362305 64.00852966308594C 367.91975021362305 75.20852966308593 367.91975021362305 80.80852966308595 367.91975021362305 92.00852966308594",stroke:"#323232","stroke-width":"2",fill:"none"}})])])]),t._v(" "),s("h2",{attrs:{id:"mysql的复制原理以及流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql的复制原理以及流程"}},[t._v("#")]),t._v(" MySQL的复制原理以及流程")]),t._v(" "),s("p",[t._v("主从复制：将主数据库中的DDL和DML操作通过二进制日志（BINLOG）传输到从数据库上，然后将这些日志重新执行（重做）；从而使得从数据库的数据与主数据库保持一致。")]),t._v(" "),s("p",[t._v("主从复制的作用")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("主数据库出现问题，可以切换到从数据库。")])]),t._v(" "),s("li",[s("p",[t._v("可以进行数据库层面的读写分离。")])]),t._v(" "),s("li",[s("p",[t._v("可以在从数据库上进行日常备份。")])])]),t._v(" "),s("p",[t._v("MySQL主从复制解决的问题")]),t._v(" "),s("ul",[s("li",[t._v("数据分布：随意开始或停止复制，并在不同地理位置分布数据备份负载均衡：降低单个服务器的压力高可用和故障切换：帮助应用程序避免单点失败升级测试：可以用更高版本的MySQL作为从库")]),t._v(" "),s("li",[t._v("MySQL主从复制工作原理")]),t._v(" "),s("li",[t._v("在主库上把数据更高记录到二进制日志从库将主库的日志复制到自己的中继日志")]),t._v(" "),s("li",[t._v("从库读取中继日志的事件，将其重放到从库数据中基本原理流程，3个线程以及之间的关联")])]),t._v(" "),s("p",[t._v("主：binlog线程——记录下所有改变了数据库数据的语句，放进master上的 binlog中；从：io线程——在使用start slave 之后，负责从master上拉取 binlog 内容，放进自己的relay log中；")]),t._v(" "),s("p",[t._v("从：sql执行线程——执行relay log中的语句；")]),t._v(" "),s("p",[s("svg",{attrs:{id:"SvgjsSvg1065",width:"510.6960144042969",height:"382.3579559326172",xmlns:"http://www.w3.org/2000/svg",version:"1.1","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:svgjs":"http://svgjs.com/svgjs"}},[s("defs",{attrs:{id:"SvgjsDefs1066"}},[s("linearGradient",{attrs:{id:"SvgjsLinearGradient1078",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1079","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1080","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1082",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1083","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1084","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1090",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1091","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1092","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("linearGradient",{attrs:{id:"SvgjsLinearGradient1094",x1:"1",y1:"0",x2:"0",y2:"1"}},[s("stop",{attrs:{id:"SvgjsStop1095","stop-opacity":"1","stop-color":"#9dd7ed",offset:"0"}}),s("stop",{attrs:{id:"SvgjsStop1096","stop-opacity":"1","stop-color":"#899dc0",offset:"1"}})],1),s("marker",{attrs:{id:"SvgjsMarker1122",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1123",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1158",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1159",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1166",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1167",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1174",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1175",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})]),s("marker",{attrs:{id:"SvgjsMarker1182",markerWidth:"16",markerHeight:"12",refX:"16",refY:"6",viewBox:"0 0 16 12",orient:"auto",markerUnits:"userSpaceOnUse","stroke-dasharray":"0,0"}},[s("path",{attrs:{id:"SvgjsPath1183",d:"M0,2 L14,6 L0,11 L0,2",fill:"#323232",stroke:"#323232","stroke-width":"2"}})])],1),s("rect",{attrs:{id:"SvgjsRect1067",width:"510.6960144042969",height:"382.3579559326172",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1068",transform:"translate(25.000015258789062,57.35795593261719)"}},[s("path",{attrs:{id:"SvgjsPath1069",d:"M 0 4Q 0 0 4 0L 146 0Q 150 0 150 4L 150 296Q 150 300 146 300L 4 300Q 0 300 0 296Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1070"}},[s("text",{attrs:{id:"SvgjsText1071","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"130px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"140.875",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1072",transform:"translate(266.5483093261719,57.35795593261719)"}},[s("path",{attrs:{id:"SvgjsPath1073",d:"M 0 4Q 0 0 4 0L 197 0Q 201 0 201 4L 201 296Q 201 300 197 300L 4 300Q 0 300 0 296Z",stroke:"rgba(50,50,50,1)","stroke-width":"2","fill-opacity":"1",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1074"}},[s("text",{attrs:{id:"SvgjsText1075","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"181px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"140.875",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1076",transform:"translate(86.54830932617188,83.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1077",d:"M 0 9.8C 0 -2.8000000000000003 63.45170593261719 -2.8000000000000003 63.45170593261719 9.8L 63.45170593261719 60.199999999999996C 63.45170593261719 72.8 0 72.8 0 60.199999999999996L 0 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1078)"}}),s("path",{attrs:{id:"SvgjsPath1081",d:"M 63.45170593261719 9.8C 63.45170593261719 21 0 21 0 9.8C 0 -2.8000000000000003 63.45170593261719 -2.8000000000000003 63.45170593261719 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1082)"}}),s("path",{attrs:{id:"SvgjsPath1085",d:"M 0 7Q 31.725852966308594 -7 63.45170593261719 7L 63.45170593261719 63Q 31.725852966308594 77 0 63L 0 7Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1086"}},[s("text",{attrs:{id:"SvgjsText1087","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"64px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"30.775000000000006",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1088",transform:"translate(379.5483093261719,83.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1089",d:"M 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8L 63.725852966308594 60.199999999999996C 63.725852966308594 72.8 0 72.8 0 60.199999999999996L 0 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1090)"}}),s("path",{attrs:{id:"SvgjsPath1093",d:"M 63.725852966308594 9.8C 63.725852966308594 21 0 21 0 9.8C 0 -2.8000000000000003 63.725852966308594 -2.8000000000000003 63.725852966308594 9.8Z",stroke:"rgba(11,108,195,1)","stroke-width":"2",fill:"url(#SvgjsLinearGradient1094)"}}),s("path",{attrs:{id:"SvgjsPath1097",d:"M 0 7Q 31.862926483154297 -7 63.725852966308594 7L 63.725852966308594 63Q 31.862926483154297 77 0 63L 0 7Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1098"}},[s("text",{attrs:{id:"SvgjsText1099","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"64px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"30.775000000000006",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1100",transform:"translate(60.00001525878906,260.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1101",d:"M 0 0L 59.39308947891021 0L 75.39308947891021 16L 75.39308947891021 82L 0 82L 0 0Z",stroke:"none","fill-opacity":"1",fill:"#ffffaa"}}),s("path",{attrs:{id:"SvgjsPath1102",d:"M 59.39308947891021 0L 59.39308947891021 16L 75.39308947891021 16Z",stroke:"none","fill-opacity":"1",fill:"#cdcdcd"}}),s("path",{attrs:{id:"SvgjsPath1103",d:"M 0 0L 59.39308947891021 0L 75.39308947891021 16L 75.39308947891021 82L 0 82L 0 0Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1104"}},[s("text",{attrs:{id:"SvgjsText1105","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"23.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1106",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1107"}},[t._v("Binary")])]),s("tspan",{attrs:{id:"SvgjsTspan1108",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1109"}},[t._v("log")])])])])]),s("g",{attrs:{id:"SvgjsG1110",transform:"translate(295.76213036835145,260.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1111",d:"M 0 0L 59.39308947891021 0L 75.39308947891021 16L 75.39308947891021 82L 0 82L 0 0Z",stroke:"none","fill-opacity":"1",fill:"#ffffaa"}}),s("path",{attrs:{id:"SvgjsPath1112",d:"M 59.39308947891021 0L 59.39308947891021 16L 75.39308947891021 16Z",stroke:"none","fill-opacity":"1",fill:"#cdcdcd"}}),s("path",{attrs:{id:"SvgjsPath1113",d:"M 0 0L 59.39308947891021 0L 75.39308947891021 16L 75.39308947891021 82L 0 82L 0 0Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1114"}},[s("text",{attrs:{id:"SvgjsText1115","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"56px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"23.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1116",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1117"}},[t._v("Relay")])]),s("tspan",{attrs:{id:"SvgjsTspan1118",dy:"16",x:"38"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1119"}},[t._v("log")])])])])]),s("g",{attrs:{id:"SvgjsG1120"}},[s("path",{attrs:{id:"SvgjsPath1121",d:"M118.27416229248047 153.01136779785156C 118.27416229248047 196.59565435377402 97.6965599982442 216.4270812419291 97.69655999824417 260.01136779785156",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1122)"}})]),s("g",{attrs:{id:"SvgjsG1124",transform:"translate(336.5483093261719,74.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1125",d:"M 0 21.5C 0 -7.166666666666667 43 -7.166666666666667 43 21.5C 43 50.166666666666664 0 50.166666666666664 0 21.5Z",stroke:"rgba(161,161,161,0.5)","stroke-width":"2","fill-opacity":"0.5",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1126"}},[s("text",{attrs:{id:"SvgjsText1127","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"23px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"0.5",y:"12.375",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1128",transform:"translate(404.1965599982442,153.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1129",d:"M 0 21.5C 0 -7.166666666666667 43 -7.166666666666667 43 21.5C 43 50.166666666666664 0 50.166666666666664 0 21.5Z",stroke:"rgba(161,161,161,0.5)","stroke-width":"2","fill-opacity":"0.5",fill:"#ffffff"}}),s("g",{attrs:{id:"SvgjsG1130"}},[s("text",{attrs:{id:"SvgjsText1131","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"23px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"0.5",y:"12.375",transform:"rotate(0)"}})])]),s("g",{attrs:{id:"SvgjsG1132",transform:"translate(34.69655999824417,25.011367797851562)"}},[s("path",{attrs:{id:"SvgjsPath1133",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1134"}},[s("text",{attrs:{id:"SvgjsText1135","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1136",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1137"}},[t._v("Master")])])])])]),s("g",{attrs:{id:"SvgjsG1138",transform:"translate(316.6965599982442,25.011367797851562)"}},[s("path",{attrs:{id:"SvgjsPath1139",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1140"}},[s("text",{attrs:{id:"SvgjsText1141","font-family":"微软雅黑","text-anchor":"middle","font-size":"16px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"16px",weight:"400","font-style":"",opacity:"1",y:"8",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1142",dy:"20",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1143"}},[t._v("Slaver")])])])])]),s("g",{attrs:{id:"SvgjsG1144",transform:"translate(298.0483093261719,57.35795593261719)"}},[s("path",{attrs:{id:"SvgjsPath1145",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1146"}},[s("text",{attrs:{id:"SvgjsText1147","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1148",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1149"}},[t._v("I/O thread")])])])])]),s("g",{attrs:{id:"SvgjsG1150",transform:"translate(365.6965599982442,142.01136779785156)"}},[s("path",{attrs:{id:"SvgjsPath1151",d:"M 0 0L 120 0L 120 40L 0 40Z",stroke:"none",fill:"none"}}),s("g",{attrs:{id:"SvgjsG1152"}},[s("text",{attrs:{id:"SvgjsText1153","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"120px",fill:"#323232","font-weight":"400",align:"middle",lineHeight:"125%",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"10.875",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1154",dy:"16",x:"60"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1155"}},[t._v("SQL thread")])])])])]),s("g",{attrs:{id:"SvgjsG1156"}},[s("path",{attrs:{id:"SvgjsPath1157",d:"M336.5483093261719 95.51136779785156C 223.26978731183385 115.48542756375718 250.41913054614338 301.01136779785156 135.39310473769928 301.01136779785156",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1158)"}}),s("rect",{attrs:{id:"SvgjsRect1160",width:"32",height:"15",x:"220.62602095472536",y:"198.25164021006617",fill:"#ffffff"}}),s("text",{attrs:{id:"SvgjsText1161","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"32px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"196.62664021006617",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1162",dy:"16",x:"236.62602095472536"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1163"}},[t._v("Read")])])])]),s("g",{attrs:{id:"SvgjsG1164"}},[s("path",{attrs:{id:"SvgjsPath1165",d:"M358.0483093261719 117.01136779785156C 363.10678540088657 174.8300139041071 333.4586751078066 201.97186385649383 333.4586751078066 260.01136779785156",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1166)"}}),s("rect",{attrs:{id:"SvgjsRect1168",width:"34",height:"15",x:"330.6504207450073",y:"180.92854610968823",fill:"#ffffff"}}),s("text",{attrs:{id:"SvgjsText1169","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"34px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"179.30354610968823",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1170",dy:"16",x:"347.6504207450073"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1171"}},[t._v("Write")])])])]),s("g",{attrs:{id:"SvgjsG1172"}},[s("path",{attrs:{id:"SvgjsPath1173",d:"M425.6965599982442 196.01136779785156C 371.5483093261719 217.01136779785156 372.5483093261719 263.01136779785156 371.15521984726166 301.01136779785156",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1174)"}}),s("rect",{attrs:{id:"SvgjsRect1176",width:"32",height:"15",x:"362.64270447531715",y:"234.63636779785156",fill:"#ffffff"}}),s("text",{attrs:{id:"SvgjsText1177","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"32px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"233.01136779785156",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1178",dy:"16",x:"378.64270447531715"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1179"}},[t._v("Read")])])])]),s("g",{attrs:{id:"SvgjsG1180"}},[s("path",{attrs:{id:"SvgjsPath1181",d:"M371.15521984726166 301.01136779785156C 418.4834486929984 301.01136779785156 429.82148693622554 243.15949844404736 425.6965599982442 196.01136779785156",stroke:"#323232","stroke-width":"2",fill:"none","marker-end":"url(#SvgjsMarker1182)"}}),s("rect",{attrs:{id:"SvgjsRect1184",width:"42",height:"15",x:"396.7208233416472",y:"258.691916790175",fill:"#ffffff"}}),s("text",{attrs:{id:"SvgjsText1185","font-family":"微软雅黑","text-anchor":"middle","font-size":"13px",width:"42px",fill:"#323232","font-weight":"400",align:"top",lineHeight:"16px",anchor:"middle",family:"微软雅黑",size:"13px",weight:"400","font-style":"",opacity:"1",y:"257.066916790175",transform:"rotate(0)"}},[s("tspan",{attrs:{id:"SvgjsTspan1186",dy:"16",x:"417.7208233416472"}},[s("tspan",{staticStyle:{},attrs:{id:"SvgjsTspan1187"}},[t._v("Replay")])])])])])]),t._v(" "),s("p",[t._v("Binary log：主数据库的二进制日志")]),t._v(" "),s("p",[t._v("Relay log：从服务器的中继日志")]),t._v(" "),s("p",[t._v("第一步：master在每个事务更新数据完成之前，将该操作记录串行地写入到 binlog文件中。")]),t._v(" "),s("p",[t._v("第二步：salve开启一个I/O Thread，该线程在master打开一个普通连接，主要工作是binlog dump process。如果读取的进度已经跟上了master，就进入睡眠状态并等待master产生新的事件。I/O线程 终的目的是将这些事件写入到中继日志中。")]),t._v(" "),s("p",[t._v("第三步：SQL Thread会读取中继日志，并顺序执行该日志中的SQL事件，从而与主数据库中的数据保持一致。")]),t._v(" "),s("h2",{attrs:{id:"读写分离有哪些解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读写分离有哪些解决方案"}},[t._v("#")]),t._v(" 读写分离有哪些解决方案？")]),t._v(" "),s("p",[t._v("读写分离是依赖于主从复制，而主从复制又是为读写分离服务的。因为主从复制要求slave不能写只能读（如果对slave执行写操作，那么show slave status将会呈现Slave_SQL_Running=NO，此时你需要按照前面提到的手动同步一下slave）。")]),t._v(" "),s("p",[t._v("方案一")]),t._v(" "),s("p",[t._v("使用mysql-proxy代理")]),t._v(" "),s("p",[t._v("优点：直接实现读写分离和负载均衡，不用修改代码，master和slave用一样的帐号，mysql官方不建议实际生产中使用缺点：降低性能， 不支持事务方案二")]),t._v(" "),s("p",[t._v("使用AbstractRoutingDataSource+aop+annotation在dao层决定数据源。如果采用了mybatis， 可以将读写分离放在ORM层，比如mybatis可以通过")]),t._v(" "),s("p",[t._v("mybatis plugin拦截sql语句，所有的insert/update/delete都访问master库，所有的select 都访问salve库，这样对于dao层都是透明。 plugin实现时可以通过注解或者分析语句是读写方法来选定主从库。不过这样依然有一个问题， 也就是不支持事务， 所以我们还需要重写一下")]),t._v(" "),s("p",[t._v("DataSourceTransactionManager， 将read-only的事务扔进读库， 其余的有读有写的扔进写库。")]),t._v(" "),s("p",[t._v("方案三")]),t._v(" "),s("p",[t._v("使用AbstractRoutingDataSource+aop+annotation在service层决定数据源，可以支持事务. 缺点：类内部方法通过this.xx()方式相互调用时，aop不会进行拦截，需进行特殊处理")]),t._v(" "),s("h2",{attrs:{id:"备份计划-mysqldump以及xtranbackup的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份计划-mysqldump以及xtranbackup的实现原理"}},[t._v("#")]),t._v(" 备份计划，mysqldump以及xtranbackup的实现原理")]),t._v(" "),s("p",[t._v("(1)备份计划视库的大小来定，一般来说 100G 内的库，可以考虑使用 mysqldump 来做，因为 mysqldump更加轻巧灵活，备份时间选在业务低峰期，可以每天进行都进行全量备份(mysqldump 备份出来的文件比较小，压缩之后更小)。")]),t._v(" "),s("p",[t._v("100G 以上的库，可以考虑用 xtranbackup 来做，备份速度明显要比")]),t._v(" "),s("p",[t._v("mysqldump 要快。一般是选择一周一个全备，其余每天进行增量备份，备份时间为业务低峰期。")]),t._v(" "),s("p",[t._v("(2)备份恢复时间")]),t._v(" "),s("p",[t._v("物理备份恢复快，逻辑备份恢复慢")]),t._v(" "),s("p",[t._v("这里跟机器，尤其是硬盘的速率有关系，以下列举几个仅供参考")]),t._v(" "),s("p",[t._v("20G的2分钟（mysqldump）")]),t._v(" "),s("p",[t._v("80G的30分钟(mysqldump)")]),t._v(" "),s("p",[t._v("111G的30分钟（mysqldump)")]),t._v(" "),s("p",[t._v("288G的3小时（xtra)")]),t._v(" "),s("p",[t._v("3T的4小时（xtra)")]),t._v(" "),s("p",[t._v("逻辑导入时间一般是备份时间的5倍以上")]),t._v(" "),s("p",[t._v("(3)备份恢复失败如何处理首先在恢复之前就应该做足准备工作，避免恢复的时候出错。比如说备份之后的有效性检查、权限检查、空间检查等。如果万一报错，再根据报错的提示来进行相应的调整。")]),t._v(" "),s("p",[t._v("(4)mysqldump和xtrabackup实现原理 mysqldump mysqldump 属于逻辑备份。加入–single-transaction 选项可以进行一致性备份。后台进程会先设置 session 的事务隔离级别为 RR(SET SESSION")]),t._v(" "),s("p",[t._v("TRANSACTION ISOLATION LEVELREPEATABLE READ)，之后显式开启一个")]),t._v(" "),s("p",[t._v("事务(START TRANSACTION /*!40100 WITH CONSISTENTSNAPSHOT */)，这样就保证了该事务里读到的数据都是事务事务时候的快照。之后再把表的数据读取出来。如果加上–master-data=1 的话，在刚开始的时候还会加一个数据库的读锁(FLUSH TABLES WITH READ LOCK),等开启事务后，再记录下数据库此时 binlog 的位置(showmaster status)，马上解锁，再读取表的数据。等所有的数据都已经导完，就可以结束事务")]),t._v(" "),s("p",[t._v("Xtrabackup:")]),t._v(" "),s("p",[t._v("xtrabackup 属于物理备份，直接拷贝表空间文件，同时不断扫描产生的 redo 日志并保存下来。  后完成 innodb 的备份后，会做一个 flush engine logs 的")]),t._v(" "),s("p",[t._v("操作(老版本在有 bug，在5.6 上不做此操作会丢数据)，确保所有的 redo log 都已经落盘(涉及到事务的两阶段提交")]),t._v(" "),s("p",[t._v("概念，因为 xtrabackup 并不拷贝 binlog，所以必须保证所有的 redo log 都落盘，否则可能会丢 后一组提交事务的数据)。这个时间点就是 innodb 完成备份的时间点，数据文件虽然不是一致性的，但是有这段时间的 redo 就可以让数据文件达到一致性(恢复的时候做的事")]),t._v(" "),s("p",[t._v("情)。然后还需要 flush tables with read lock，把 myisam 等其他引擎的表给备份出来，备份完后解锁。这样就做到了完美的热备。")]),t._v(" "),s("h2",{attrs:{id:"数据表损坏的修复方式有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据表损坏的修复方式有哪些"}},[t._v("#")]),t._v(" 数据表损坏的修复方式有哪些？")]),t._v(" "),s("p",[t._v("使用 myisamchk 来修复，具体步骤：")]),t._v(" "),s("p",[t._v("1）   修复前将mysql服务停止。")]),t._v(" "),s("p",[t._v("2）   打开命令行方式，然后进入到mysql的/bin目录。")]),t._v(" "),s("p",[t._v("3）   执行myisamchk –recover 数据库所在路径/*.MYI使用repair table 或者 OPTIMIZE table命令来修复，REPAIR TABLE")]),t._v(" "),s("p",[t._v("table_name 修复表 OPTIMIZE TABLE table_name 优化表 REPAIR TABLE 用于修复被破坏的表。 OPTIMIZE TABLE 用于回收闲置的数据库空间，当表上的数据行被删除时，所占据的磁盘空间并没有立即被回收，使用了OPTIMIZE")]),t._v(" "),s("p",[t._v("TABLE命令后这些空间将被回收，并且对磁盘上的数据行进行重排（注意：是磁盘上，而非数据库）")])])}),[],!1,null,null,null);a.default=r.exports}}]);