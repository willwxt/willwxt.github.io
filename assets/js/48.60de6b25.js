(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{401:function(e,t,r){"use strict";r.r(t);var a=r(45),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"elastic-search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#elastic-search"}},[e._v("#")]),e._v(" Elastic Search")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/inverted-index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("倒排索引inverted-index.html"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.zhihu.com/question/23202010",target:"_blank",rel:"noopener noreferrer"}},[e._v("倒排索引为什么叫倒排索引"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"为什么使用inverted-index倒排索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用inverted-index倒排索引"}},[e._v("#")]),e._v(" 为什么使用inverted-index倒排索引?")]),e._v(" "),r("h4",{attrs:{id:"优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[e._v("#")]),e._v(" 优势")]),e._v(" "),r("ul",[r("li",[e._v("传统线性查找, 如果关键字在文档最后(而且文档内容很大), 需要较长时间")]),e._v(" "),r("li",[e._v("倒排索引: 记录每个词条出现在哪些文档, 以及文档中的位置, 那么根据查询信息快速定位到相关词条的文档和位置")])]),e._v(" "),r("h4",{attrs:{id:"创建inverted-index顺序-基于lucene"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建inverted-index顺序-基于lucene"}},[e._v("#")]),e._v(" 创建inverted-index顺序, 基于lucene")]),e._v(" "),r("ol",[r("li",[e._v("创建文档列表\n"),r("ul",[r("li",[e._v("首先对原始文档数据进行编号 (DocId) 形成文档列表")])])]),e._v(" "),r("li",[e._v("创建倒排索引列表\n"),r("ul",[r("li",[e._v("对文档中的数据进行分词, 得到词条;")]),e._v(" "),r("li",[e._v("对这些分词/单词进行编号, 创建索引; 然后每个单词对应记录包含这个单词的所有文档编号")])])])]),e._v(" "),r("h4",{attrs:{id:"查询过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查询过程"}},[e._v("#")]),e._v(" 查询过程")]),e._v(" "),r("ol",[r("li",[e._v("用户输入查询内容")]),e._v(" "),r("li",[e._v("将查询内容进行分词, 得到用户要搜索的词条")]),e._v(" "),r("li",[e._v("用词条去倒排索引中匹配, 可以找到包含这些词条的所有文档编号")]),e._v(" "),r("li",[e._v("根据文档编号去文档列表中找到文档")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/distributed-cluster.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES基础入门 - 集群内部原理"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"es集群基本结构-要素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es集群基本结构-要素"}},[e._v("#")]),e._v(" ES集群基本结构/要素")]),e._v(" "),r("ul",[r("li",[e._v("集群cluster (拥有状态, status 字段指示着当前集群在总体上是否工作正常\n"),r("ul",[r("li",[r("strong",[e._v("green")]),e._v(" 所有的主分片和副本分片都正常运行。")]),e._v(" "),r("li",[r("strong",[e._v("yellow")]),e._v(" 所有的主分片都正常运行，但不是所有的副本分片都正常运行。")]),e._v(" "),r("li",[r("strong",[e._v("red")]),e._v(" 有主分片没能正常运行。")])])]),e._v(" "),r("li",[e._v("节点nodes\n"),r("ul",[r("li",[e._v("集群中可以拥有一个或多个节点")]),e._v(" "),r("li",[e._v("节点有主节点和其他节点之分, 主节点负责管理集群 (增加删除索引/节点)")]),e._v(" "),r("li",[e._v("所有节点都可以查询回数据")])])]),e._v(" "),r("li",[e._v("分片shards\n"),r("ul",[r("li",[e._v("创建索引时会创建分片(可指定分片数量和分片的副本数量)")]),e._v(" "),r("li",[e._v("分片有主分片和副本分片")]),e._v(" "),r("li",[e._v("所有被索引的文档都将会保存在主分片上，然后并行复制到对应的副本分片上")]),e._v(" "),r("li",[e._v("我们既可以从主分片又可以从副本分片上获得文档")])])])]),e._v(" "),r("p",[r("strong",[e._v("如果我们启动了一个单独的节点，里面不包含任何的数据和索引")])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0201.png",alt:"-1"}})]),e._v(" "),r("p",[e._v("此时, 创建 "),r("code",[e._v("/blogs")]),e._v(" 索引, 指定分片数量为3, 副本数为1, 则如下图所示, 但是集群状态为 "),r("code",[e._v("yellow")]),e._v(" , 因为分片的副本没有节点地方可以存放了,  如果再加入一个新节点, 则可以将副本存入, 同时集群状态恢复 "),r("code",[e._v("green")])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0202.png",alt:"0"}})]),e._v(" "),r("h4",{attrs:{id:"水平扩容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#水平扩容"}},[e._v("#")]),e._v(" 水平扩容")]),e._v(" "),r("p",[e._v("水平扩容 - 为了分散负载会重新分配 (下图均为 3分片 1副本的索引)")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0203.png",alt:"1"}})]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0204.png",alt:"2"}})]),e._v(" "),r("h4",{attrs:{id:"动态调整副本分片数目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态调整副本分片数目"}},[e._v("#")]),e._v(" 动态调整副本分片数目")]),e._v(" "),r("p",[e._v("将原来的1个副本配置, 变更为2副本")]),e._v(" "),r("ul",[r("li",[e._v("相同节点数目的集群上增加更多的副本分片并不能提高性能")]),e._v(" "),r("li",[e._v("提高了数据冗余量, 我们可以在失去2个节点的情况下不丢失任何数据")])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0205.png",alt:"将参数number_of_replicas调大到 2"}})]),e._v(" "),r("h4",{attrs:{id:"应对故障"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应对故障"}},[e._v("#")]),e._v(" 应对故障")]),e._v(" "),r("p",[e._v("我们关闭 NODE1 之后")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/images/elas_0206.png",alt:"err"}})]),e._v(" "),r("ol",[r("li",[e._v("我们关闭了主节点, 所以必须选举一个新的主节点 (NODE2)")]),e._v(" "),r("li",[e._v("同时失去了主分片 "),r("code",[e._v("1")]),e._v(" 和 "),r("code",[e._v("2")]),e._v(", 此时集群状态本来应该是 "),r("code",[e._v("red")])]),e._v(" "),r("li",[e._v("但是其他节点上还存在 "),r("code",[e._v("1")]),e._v(" 和 "),r("code",[e._v("2")]),e._v(" 的完整副本, 所以新的主节点会立即将存活节点上的对应副本提升为主分片")]),e._v(" "),r("li",[e._v("所以, 此时集群的状态应该为 "),r("code",[e._v("yellow")])])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/inside-a-shard.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("分片内部原理inside-a-shard.html"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"基本api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本api"}},[e._v("#")]),e._v(" 基本API")])])}),[],!1,null,null,null);t.default=s.exports}}]);