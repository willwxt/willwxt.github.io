(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{413:function(t,r,e){"use strict";e.r(r);var a=e(45),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"domain-driven-design"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#domain-driven-design"}},[t._v("#")]),t._v(" domain-driven design")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://artislong.oss-cn-hangzhou.aliyuncs.com/files/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%EF%BC%9A%E8%BD%AF%E4%BB%B6%E6%A0%B8%E5%BF%83%E5%A4%8D%E6%9D%82%E6%80%A7%E5%BA%94%E5%AF%B9%E4%B9%8B%E9%81%93.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考书籍-领域驱动设计: 软件核心复杂性应对之道"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("三个项目:")]),t._v(" "),e("ol",[e("li",[t._v("开发人员直接开发: 初次成功, 但后续版本/新功能迭代困难")]),t._v(" "),e("li",[t._v("重视领域模型, 在功能迭代中不断精化领域模型, 易于维护和扩展")]),t._v(" "),e("li",[t._v("建模与现实脱节, 开发人员没有基于领域设计进行编码, 最终不再重视模型")])]),t._v(" "),e("h4",{attrs:{id:"extreme-programming-xp-极限编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extreme-programming-xp-极限编程"}},[t._v("#")]),t._v(" Extreme Programming XP, 极限编程")]),t._v(" "),e("p",[t._v("反对预先设计, 重视沟通和项目快速变更能力, 只使用简单有效的方案, 持续@重构得到最终需要的设计")]),t._v(" "),e("ul",[e("li",[t._v("适合设计感觉敏锐的开发人员, 每次重构的难度取决于先前的设计选择")])]),t._v(" "),e("h4",{attrs:{id:"本文结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本文结构"}},[t._v("#")]),t._v(" 本文结构")]),t._v(" "),e("ol",[e("li",[t._v("基本目标")]),t._v(" "),e("li",[t._v("最佳时间构造块")]),t._v(" "),e("li")])])}),[],!1,null,null,null);r.default=s.exports}}]);