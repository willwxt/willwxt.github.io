(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{423:function(s,e,a){"use strict";a.r(e);var t=a(45),r=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[s._v("#")]),s._v(" Zookeeper")]),s._v(" "),a("h2",{attrs:{id:"第一节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一节"}},[s._v("#")]),s._v(" 第一节")]),s._v(" "),a("h4",{attrs:{id:"完成分布式协调-分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成分布式协调-分布式锁"}},[s._v("#")]),s._v(" 完成分布式协调, 分布式锁")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zookeeper.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zookeeper.apache.org/"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("扩展性, 可靠性, 时序")]),s._v(" "),a("h4",{attrs:{id:"综述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#综述"}},[s._v("#")]),s._v(" 综述")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("首先zookeeper也是leader(写) - follower(读)模型, 那首先会有leader挂掉导致服务不可用的问题")]),s._v(" "),a("li",[s._v("但事实上, zk集群是极其高可用的, (如果有一种方式可以快速恢复leader)")])]),s._v(" "),a("p",[s._v("zookeeper 中两种运行状态: 可用和不可用 状态")]),s._v(" "),a("p",[s._v("不可用状态恢复到可用状态应该越快越好")]),s._v(" "),a("ul",[a("li",[s._v("官方压测: 选择新领导的时间不到200ms")]),s._v(" "),a("li",[s._v("不同服务节点数, 根据读写比例的QPS 图")]),s._v(" "),a("li",[s._v("数据模型和命名空间是一个目录树结构, 但是节点的概念, 节点可以存一些数据1M, 但是不要做数据库用!")]),s._v(" "),a("li",[s._v("session 会话, 每个请求来zk都有session\n"),a("ul",[a("li",[s._v("持久节点")]),s._v(" "),a("li",[s._v("临时节点 - session - 用来解决前面redis中说的死锁和锁时间的问题, session和锁可以同步生命周期")]),s._v(" "),a("li",[s._v("序列节点/序列化概念 - 上两种节点支持序列化")])])]),s._v(" "),a("li",[s._v("保证顺序(单leader好处就是容易保证写请求的顺序一致) 顺序一致性")]),s._v(" "),a("li",[s._v("原子性 - 全部成功或全部失败")]),s._v(" "),a("li",[s._v("单系统镜像 - 无论连接到哪个服务器, 都能得到相同的服务")]),s._v(" "),a("li",[s._v("可靠性 - 持久化")]),s._v(" "),a("li",[s._v("及时性 - 最终一致性")])])]),s._v(" "),a("h4",{attrs:{id:"安装使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装使用"}},[s._v("#")]),s._v(" 安装使用")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("安装JDK, 配置环境变量, 最好使用 oracle jdk")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/java/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JRE_HOME 根据需要来..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("JAVA_HOME/bin\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /etc/profile\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载新增的环境变量到配置文件 或 . /etc/profile")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("下载zookeeper, 解压到 opt 文件下")])]),s._v(" "),a("li",[a("p",[s._v("bin 文件下有 sh 脚本,")])]),s._v(" "),a("li",[a("p",[s._v("conf 配置 zoo_simple.cfg 配置模板")])])])]),s._v(" "),a("h4",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),a("blockquote",[a("p",[s._v("心跳时间")]),s._v(" "),a("p",[s._v("初始化限制次数 leader可以忍耐的初始延迟")]),s._v(" "),a("p",[s._v("同步次数")]),s._v(" "),a("p",[s._v("快照/持久化目录")]),s._v(" "),a("p",[s._v("端口号")]),s._v(" "),a("p",[s._v("最大连接数")]),s._v(" "),a("p",[s._v("...")]),s._v(" "),a("p",[s._v("配置 zk 的节点")]),s._v(" "),a("p",[s._v("server.1=node01:2888:3888")]),s._v(" "),a("p",[s._v("server.2=node02:2888:3888")]),s._v(" "),a("p",[s._v("server.3=node03:2888:3888")]),s._v(" "),a("p",[s._v("server.4=node04:2888:3888")]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -natp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(2888|3888)'")]),s._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# follower 首先会连 leader:2888\t自己只开启3888会被其他node连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被2 和 3 连接, 自己连接 leader:2888")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# leader 会开启 3888和2888, 2888被所有follower连接, 还会开启端口连接所有follower")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \t3888:\t选主投票用的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#\t2888: \tleader接收请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \t任何一个节点都可以将信息传输给别人")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("h4",{attrs:{id:"创建myid-拷贝-配置环境变量-启动zk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建myid-拷贝-配置环境变量-启动zk"}},[s._v("#")]),s._v(" 创建myid, 拷贝, 配置环境变量, 启动zk")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /var/zk\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" myid\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写每台的id号, 例如 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 递归拷贝到多台机器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ZOOKEEPER_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/zookeeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置zk环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ZOOKEEPER_HOME/bin\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /etc/profile\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载新增的环境变量到配置文件 或 . /etc/profile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zk + tab 键, 就可以看见可以调用的命令")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" /etc/profile "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.106:/etc\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝到多台机器, 发送source /etc/profile到全部会话")]),s._v("\n\nzkServer.sh "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看下帮助")]),s._v("\nzkServer.sh start \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zk启动")]),s._v("\nzkServer.sh status\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看状态, leader 或 follower")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h4",{attrs:{id:"连接zk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接zk"}},[s._v("#")]),s._v(" 连接zk")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("zkCli.sh\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认连接自己")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /\ncreate /ooxx "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建节点")]),s._v("\nget /ooxx\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" /ooxx "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n\ncreate -e \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建临时节点, 归属于本次连接的session, 伴随着session的生命周期而消失")]),s._v("\ncreate -s \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以序列的形式创建节点, 在节点名后增加序列号, 规避重复创建同一个节点(数据覆盖)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"节点属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点属性"}},[s._v("#")]),s._v(" 节点属性")]),s._v(" "),a("blockquote",[a("p",[s._v("cZxid\t后32位创建操作的序列号, c = create, 前32位代表纪元, --- 本节点创建时候使用的全局序列号(事务ID)")]),s._v(" "),a("p",[s._v("mZxid\t修改操作")]),s._v(" "),a("p",[s._v("pZxid\t创建的最后节点的序列号")]),s._v(" "),a("p",[s._v("ephemeralOwner\t临时节点所有者(某连接的session)")])]),s._v(" "),a("h4",{attrs:{id:"问题-连接的节点挂机后-session是否会消失"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-连接的节点挂机后-session是否会消失"}},[s._v("#")]),s._v(" 问题: 连接的节点挂机后, session是否会消失?")]),s._v(" "),a("blockquote",[a("p",[s._v("session是所有客户端都有, 所以连接的节点挂机, 连接到别的节点依然会有原来的session")]),s._v(" "),a("p",[s._v("client连接zk的时候, 创建的sessionid将会写给所有节点, 占用了一个全局序列号cZxid")]),s._v(" "),a("p",[s._v("sessionid消失的时候, 也会占用一个全局序列号进行一次全局节点的删除操作")])]),s._v(" "),a("h4",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[s._v("#")]),s._v(" 功能")]),s._v(" "),a("blockquote",[a("p",[s._v("统一配置管理: 通过节点的1M数据")]),s._v(" "),a("p",[s._v("分组管理: 通过path结构")]),s._v(" "),a("p",[s._v("统一命名: 通过序列节点sequential")]),s._v(" "),a("p",[s._v("同步: 临时节点/session")])]),s._v(" "),a("h4",{attrs:{id:"使用场景-分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景-分布式锁"}},[s._v("#")]),s._v(" 使用场景 - 分布式锁")]),s._v(" "),a("blockquote",[a("p",[s._v("创建临时节点")]),s._v(" "),a("p",[s._v("准备一个父节点, 并使用带序列的临时节点命名, 实现一个 队列式/事务 的锁模型")]),s._v(" "),a("p",[s._v("以上需要client(你自己)的代码实现")]),s._v(" "),a("p",[s._v("HA 选主")])]),s._v(" "),a("h2",{attrs:{id:"第二节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二节"}},[s._v("#")]),s._v(" 第二节")]),s._v(" "),a("ol",[a("li",[s._v("paxos")]),s._v(" "),a("li",[s._v("zab")]),s._v(" "),a("li",[s._v("watch")]),s._v(" "),a("li",[s._v("api")]),s._v(" "),a("li",[s._v("callback reactive 响应式编程 更充分发挥OS, 硬件性能")])]),s._v(" "),a("h4",{attrs:{id:"扩展性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展性"}},[s._v("#")]),s._v(" 扩展性")]),s._v(" "),a("blockquote",[a("p",[s._v("角色")]),s._v(" "),a("ul",[a("li",[s._v("Leader")]),s._v(" "),a("li",[s._v("Follower")]),s._v(" "),a("li",[s._v("Observer")])]),s._v(" "),a("p",[s._v("读写分离, Observer - 只读不能选举")]),s._v(" "),a("p",[s._v("server.4=node04:2888:3888:observer\t设置observer")])]),s._v(" "),a("h4",{attrs:{id:"paxos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paxos"}},[s._v("#")]),s._v(" PAXOS")]),s._v(" "),a("blockquote",[a("p",[s._v("两阶段提交")]),s._v(" "),a("ol",[a("li",[s._v("询问意见(是否过半) - 同时记录了日志")]),s._v(" "),a("li",[s._v("发布(如果过半的话)")])]),s._v(" "),a("p",[s._v("leader选举")])]),s._v(" "),a("h4",{attrs:{id:"zk-server-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zk-server-实现"}},[s._v("#")]),s._v(" zk server 实现")]),s._v(" "),a("blockquote",[a("p",[s._v("查询时候, Sync同步数据的api")]),s._v(" "),a("p",[s._v("修改时候的投票")]),s._v(" "),a("p",[s._v("leader挂了以后的选举, 选举中不提供服务(没有达到足够势力范围的节点是不对外提供服务的)")])]),s._v(" "),a("h4",{attrs:{id:"zab协议-在可用状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zab协议-在可用状态"}},[s._v("#")]),s._v(" ZAB协议 - 在可用状态")]),s._v(" "),a("blockquote",[a("p",[s._v("zookeeper 原子广播")]),s._v(" "),a("ol",[a("li",[s._v("客户端 create")]),s._v(" "),a("li",[s._v("客户端通知leader create")]),s._v(" "),a("li",[s._v("leader 生成 Zxid")]),s._v(" "),a("li",[s._v("leader 通知所有 follower 写日志log(向磁盘)  (leader会维护一个发送队列, 保证有序)")]),s._v(" "),a("li",[s._v("follower们会会送"),a("code",[s._v("ok")]),s._v("消息")]),s._v(" "),a("li",[s._v("当"),a("code",[s._v("ok")]),s._v("数量达到一半以上, 广播 write 指令, 将create数据写到内存")]),s._v(" "),a("li",[s._v("follower收到write指令, 写完内存后, 返回"),a("code",[s._v("ok")])]),s._v(" "),a("li",[s._v("当leader收到过半的"),a("code",[s._v("ok")]),s._v("后, 给客户返回"),a("code",[s._v("ok")]),s._v(", 调用结束")])])]),s._v(" "),a("h4",{attrs:{id:"选举新的leader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选举新的leader"}},[s._v("#")]),s._v(" 选举新的leader")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("经验最丰富的 (Zxid)")]),s._v(" "),a("li",[s._v("myid")])])]),s._v(" "),a("h4",{attrs:{id:"场景-第一次启动集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景-第一次启动集群"}},[s._v("#")]),s._v(" 场景, 第一次启动集群")]),s._v(" "),a("blockquote",[a("p",[s._v("Zxid都为0, 通过id选出leader")])]),s._v(" "),a("h1",{attrs:{id:"zookeeper-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-2"}},[s._v("#")]),s._v(" zookeeper")]),s._v(" "),a("p",[a("strong",[s._v("概述")]),s._v(": 分布式协调服务, 提供的一些简单的操作(原语集), 但是通过组合这些操作可以实现复杂的功能")]),s._v(" "),a("p",[s._v("基于zk实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master 选举、分布式锁和分布式队列等功能。")]),s._v(" "),a("p",[a("strong",[s._v("相关CAP理论, 保证了CP")]),s._v(": 分区容错性和一致性")]),s._v(" "),a("p",[a("strong",[s._v("几个特点")]),s._v(" :")]),s._v(" "),a("ol",[a("li",[s._v("zk是主从的, 拥有leader和follower两种角色, 每个实例都是全量拷贝")]),s._v(" "),a("li",[s._v("leader负责写, follower负责读, 客户端可以访问所有follower, 只不过读请求会被路由到leader执行")]),s._v(" "),a("li",[s._v("既然是主从, 肯定会有主机的单点故障, 导致集群不可用; zk的单点故障快速恢复机制保证集群在200ms内重新选举恢复可用状态")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://zookeeper.apache.org/doc/current/images/zkservice.jpg",alt:"zookeeper服务"}})]),s._v(" "),a("h4",{attrs:{id:"zookeeper数据结构-数据模型-分层命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper数据结构-数据模型-分层命名空间"}},[s._v("#")]),s._v(" zookeeper数据结构/数据模型/分层命名空间")]),s._v(" "),a("ul",[a("li",[s._v("分成的命名空间: znodes")]),s._v(" "),a("li",[s._v("zookeeper 提供的名称空间非常类似于标准文件系统, key-value 的形式存储")]),s._v(" "),a("li",[s._v("key 是由斜线 / 分割的一系列路径元素")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2020/09/zknamespace.jpg",alt:"zookeeper结构"}})]),s._v(" "),a("h4",{attrs:{id:"保证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保证"}},[s._v("#")]),s._v(" 保证")]),s._v(" "),a("ul",[a("li",[s._v("顺序一致性 - 来自客户端的更新将按发送顺序应用(单机leader, Zxid实现)")]),s._v(" "),a("li",[s._v("原子性 - 更新要么成功要么失败")]),s._v(" "),a("li",[s._v("单一系统映像 - 无论连接到哪个服务器, 客户端都将看到相同的服务视图")]),s._v(" "),a("li",[s._v("可靠性 - 应用更新后, 它将从那时起一直存在, 直到客户端覆盖更新, 支持持久化")]),s._v(" "),a("li",[s._v("及时性 - 对follower可以使用sync从leader同步数据, 获得最新数据, 保证数据一致性")])]),s._v(" "),a("h4",{attrs:{id:"简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[s._v("#")]),s._v(" 简单使用")]),s._v(" "),a("ul",[a("li",[s._v("只有启动3台, 才能过半投票选举成功")]),s._v(" "),a("li",[s._v("启动时都需要从leader拉取快照")]),s._v(" "),a("li",[s._v("Zxid: zk事务id : 例如0x200000002 : 前面0x2是纪元, 后面是事务序列\n"),a("ul",[a("li",[s._v("cZxid: create创建事务id")]),s._v(" "),a("li",[s._v("mZxid: modify修改事务id")]),s._v(" "),a("li",[s._v("pZxid: 该节点及其子节点最新创建的事务id")]),s._v(" "),a("li",[s._v("事务id的消耗: session建立销毁, zk节点up都会占用Zxid")])])]),s._v(" "),a("li",[s._v("会话级别的临时节点, 并且可以共享视图, 可以应用实现同步功能/锁功能")]),s._v(" "),a("li",[s._v("sessionid以及视图: sessionid可以共享+漂移")]),s._v(" "),a("li",[s._v("sequential统一命名 create -s")]),s._v(" "),a("li",[s._v("通过以上概念可以组合实现锁, 队列事务锁, HA, leader选举")])]),s._v(" "),a("h4",{attrs:{id:"集群知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群知识"}},[s._v("#")]),s._v(" 集群知识")]),s._v(" "),a("ul",[a("li",[s._v("3个才能开启集群")]),s._v(" "),a("li",[s._v("2888: leader开启服务, 让follower来连接, 并接受follower的write事件")]),s._v(" "),a("li",[s._v("3888: follower开启服务, 其他所有节点都回连接上, 主要用于选主投票")])]),s._v(" "),a("h4",{attrs:{id:"observer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[s._v("#")]),s._v(" Observer")]),s._v(" "),a("p",[s._v("其实一共有三个角色: Observer: 没有选举权限, 只能查询")]),s._v(" "),a("p",[s._v("比如30台机器可以奇数如15台follower, 其他全是Observer")]),s._v(" "),a("h3",{attrs:{id:"zookeeper读-写流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper读-写流程"}},[s._v("#")]),s._v(" Zookeeper读/写流程")]),s._v(" "),a("h4",{attrs:{id:"读数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读数据"}},[s._v("#")]),s._v(" 读数据")]),s._v(" "),a("ol",[a("li",[s._v("zookeeper "),a("font",{attrs:{color:"00AAFF"}},[s._v("不保证读取的是最新数据")]),s._v(" , 无论读取follower还是leader, 都是直接返回结果")],1),s._v(" "),a("li",[s._v("如果要保证(follower)读取最新数据 , "),a("font",{attrs:{color:"00AAFF"}},[s._v("需要使用 sync 方法")]),s._v(" 向leader同步数据")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/315466-c247d02ba2569175.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/732/format/webp",alt:"read"}})]),s._v(" "),a("h4",{attrs:{id:"写数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写数据"}},[s._v("#")]),s._v(" 写数据")]),s._v(" "),a("p",[s._v("只要有 "),a("font",{attrs:{color:"00AAFF"}},[s._v("半数的节点同步成功 ")]),s._v(" , leader就可以回复(ack)客户端写成功 , 剩下的节点只需要慢慢完成数据同步即可")],1),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/315466-85211a5ccddad46b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/840/format/webp",alt:"写流程"}})]),s._v(" "),a("p",[s._v("当 "),a("font",{attrs:{color:"00AAFF"}},[s._v("follower收到写请求")]),s._v(" , follower将请求转发给leader , 完成后将回复ack给客户端")],1),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/315466-839d14e6761fc545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1006/format/webp",alt:"img"}})]),s._v(" "),a("h4",{attrs:{id:"服务器动态上下线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器动态上下线"}},[s._v("#")]),s._v(" 服务器动态上下线")]),s._v(" "),a("ol",[a("li",[s._v("服务节点都向zookeeper上 "),a("font",{attrs:{color:"00AAFF"}},[s._v("注册临时节点")]),s._v(" , 比如 "),a("code",[s._v("/servers/server-0000001")]),s._v(" , 顺便还能存点服务信息")],1),s._v(" "),a("li",[s._v("客户端就可以从zk上, 根据存在的节点获取服务列表, 同时还可以监听这些节点")]),s._v(" "),a("li",[s._v("服务节点上线/下线后, 临时节点被删除, 监听器会通知客户端, 客户端重新获取服务列表")])]),s._v(" "),a("h3",{attrs:{id:"做master选举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#做master选举"}},[s._v("#")]),s._v(" 做Master选举")]),s._v(" "),a("ol",[a("li",[s._v("服务器节点向zk上注册临时节点")]),s._v(" "),a("li",[s._v("这些节点尝试创建Master临时节点, 创建成功的作为Master, 其他为Slave")]),s._v(" "),a("li",[s._v("所有节点都监听Master临时节点的删除事件")]),s._v(" "),a("li",[s._v("Master宕机则开启新一轮选举")])]),s._v(" "),a("h3",{attrs:{id:"zookeeper分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper分布式锁"}},[s._v("#")]),s._v(" zookeeper分布式锁")]),s._v(" "),a("ol",[a("li",[s._v("加锁: 在指定目录下创建一个 "),a("font",{attrs:{color:"00AAFF"}},[s._v("临时顺序节点")]),s._v(", 多个取锁线程会逐渐创建一系列连续节点")],1),s._v(" "),a("li",[s._v("判断自己创建的节点序号是不是 "),a("font",{attrs:{color:"00AAFF"}},[s._v("当前最小")]),s._v(" , 如果是就获取到锁\n"),a("ul",[a("li",[s._v("在这个规则下, 临时节点会按照序号逐个获取到锁")])])],1),s._v(" "),a("li",[s._v("释放锁: 删除自己创建的节点")])]),s._v(" "),a("h3",{attrs:{id:"面试重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试重点"}},[s._v("#")]),s._v(" 面试重点")]),s._v(" "),a("h4",{attrs:{id:"选举机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选举机制"}},[s._v("#")]),s._v(" 选举机制")]),s._v(" "),a("ol",[a("li",[s._v("服务器id  myid  : 编号越大, 选举权重越大")]),s._v(" "),a("li",[s._v("事务id  zxid   : 编号越大, 数据越新")]),s._v(" "),a("li",[s._v("逻辑时钟  epoch-logicalclock : 同一轮投票值相同, 每一轮结束会递增")]),s._v(" "),a("li",[a("strong",[s._v("LOOKING")]),s._v(": 竞选状态")]),s._v(" "),a("li",[a("strong",[s._v("FOLLOWING")]),s._v(": 随从状态，同步 leader 状态，参与投票")]),s._v(" "),a("li",[a("strong",[s._v("OBSERVING")]),s._v(": 观察状态，同步 leader 状态，不参与投票")]),s._v(" "),a("li",[a("strong",[s._v("LEADING")]),s._v(": 领导者状态")])]),s._v(" "),a("p",[s._v("第一次, 服务器启动时选举流程")]),s._v(" "),a("ol",[a("li",[s._v("刚启动, follower节点进入looking状态")]),s._v(" "),a("li",[s._v("每个节点进行投票, 并把投票结果发送给集群中其他节点")]),s._v(" "),a("li",[s._v("收到投票结果的节点会进行比较\n"),a("ol",[a("li",[s._v("比较epoch")]),s._v(" "),a("li",[s._v("比较zxid")]),s._v(" "),a("li",[s._v("比较myid")]),s._v(" "),a("li",[s._v("刚启动时zxid和 epoch都一样,  所以 myid 大的胜出")])])]),s._v(" "),a("li",[s._v("统计投票信息 , 超过半数票的节点当选leader")]),s._v(" "),a("li",[s._v("leader变为LEADING状态, follower变为FOLLOWING状态")])]),s._v(" "),a("h4",{attrs:{id:"生产环境安装多少zk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产环境安装多少zk"}},[s._v("#")]),s._v(" 生产环境安装多少zk?")]),s._v(" "),a("ul",[a("li",[s._v("10台服务器 - 3台zk")]),s._v(" "),a("li",[s._v("20台服务器 - 5台zk")]),s._v(" "),a("li",[s._v("100台, 200台服务器 - 11台zk")])]),s._v(" "),a("h4",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("p",[s._v("ls, get, create, delete")])])}),[],!1,null,null,null);e.default=r.exports}}]);