(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{381:function(s,t,a){"use strict";a.r(t);var n=a(45),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"系统io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统io"}},[s._v("#")]),s._v(" 系统IO")]),s._v(" "),a("h2",{attrs:{id:"第一节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一节"}},[s._v("#")]),s._v(" 第一节")]),s._v(" "),a("h4",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),a("blockquote",[a("p",[s._v("VFS FD pagecache (面向linux的系统io)")]),s._v(" "),a("p",[s._v("从java展开讲的")]),s._v(" "),a("ol",[a("li",[s._v("文件系统的io")]),s._v(" "),a("li",[s._v("内存和io的关系")]),s._v(" "),a("li",[s._v("网络io")])])]),s._v(" "),a("h4",{attrs:{id:"宏观图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏观图"}},[s._v("#")]),s._v(" 宏观图")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("硬件 : 内存 CPU IO设备(硬盘, 网卡)")]),s._v(" "),a("li",[s._v("程序 : kernel [VFS] app...")])])]),s._v(" "),a("h4",{attrs:{id:"vfs-虚拟文件系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vfs-虚拟文件系统"}},[s._v("#")]),s._v(" VFS 虚拟文件系统")]),s._v(" "),a("blockquote",[a("p",[s._v("内存首先建立起VFS , 一棵目录树 , 树上的不同节点最终映射到不同的物理位置 , 每个不同的物理位置可以是具体的文件系统(fat32, ext3, ext4) , 或是网络上的节点, 或是虚拟的块设备")]),s._v(" "),a("p",[s._v("文件系统的抽象, 封装不同的文件系统实现, 保证上层应用的统一的调用")]),s._v(" "),a("p",[s._v("inode号 相当于每个文件的id(唯一id)")]),s._v(" "),a("p",[s._v("pagecache 页缓存 4k")]),s._v(" "),a("ol",[a("li",[s._v("如果两个程序先打开同一个文件, pagecache可以做到共享")]),s._v(" "),a("li",[s._v("dirty 如果程序读取后, 修改了某个数据, 对应的pagecache标记成dirty , 最终dirty会写入磁盘(写入的参数可以配置)\n"),a("ol",[a("li",[s._v("主动保存")]),s._v(" "),a("li",[s._v("被动保存, 让内核达到阈值后flush, 比如占用了百分之多少, 可能会发生数据丢失")])])])]),s._v(" "),a("p",[s._v("FD 文件描述符  seek")]),s._v(" "),a("ul",[a("li",[s._v("最终是交给app使用的, 拥有指针seek, 可以读取pagecache中的不同位置")])])]),s._v(" "),a("h4",{attrs:{id:"验证环节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证环节"}},[s._v("#")]),s._v(" 验证环节")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" / \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 虚拟文件系统")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看设备挂载的情况")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("umount")]),s._v(" /boot\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载boot分区, df中规则失去")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" /dev/sda1 /boot\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将boot分区重新挂载到 /boot 路径")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"df-查看设备挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#df-查看设备挂载"}},[s._v("#")]),s._v(" df 查看设备挂载")]),s._v(" "),a("blockquote",[a("p",[s._v("开机 - BIOS - 读取boot分区, 将kernel/内核读取到内存展开, 运行 - 挂载root/根分区, 同时把boot分区再次挂载到root/根分区下")])]),s._v(" "),a("h4",{attrs:{id:"文件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件类型"}},[s._v("#")]),s._v(" 文件类型")]),s._v(" "),a("blockquote",[a("p",[s._v("冯诺依曼 : 计算器 控制器 主存储器 输入输出设备")]),s._v(" "),a("p",[s._v("Linux抽象 : 一切皆文件 - 读写文件 - I/O")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首列代表文件类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - : 普通文件 可执行 图片 文本 ..\tREG")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# d : 目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# l : 链接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b : 块设备\t可以读取任意位置的, 不受约束, 比如: 硬盘")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c : 字符设备\t不能读取任意位置的, 编解码约束: 键盘, 网卡\tCHR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# s : socket")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# p : pipeline 管道")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [eventpoll] : 内核提供epoll的内存区域")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"linux-硬链接-软链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-硬链接-软链接"}},[s._v("#")]),s._v(" Linux 硬链接 软链接")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" /root/msb.txt /root/ooxx.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 硬链接, 两个链接指向同一个文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" msb.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看文件的元数据信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stat")]),s._v(" ooxx.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# msb和ooxx 的 Inode号是一样的 msb和ooxx指向了同一个物理位置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以查看一个物理位置被硬链接引用的数量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /root/xxoo.txt /root/msb.txt \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# msb.txt -> /root/msb.txt 软链接, 两个文件, 一个指向另一个 stat中两个文件的Inode是不一样的, 且硬链接数量也没有增加")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 无论哪种链接, 修改文件内容都会生效, 但是软链接目标对象如果被删除, 软链接会报错")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"块设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块设备"}},[s._v("#")]),s._v(" 块设备")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/zero\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mydisk.img "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝数据生成文件/块设备 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dd可以用于创建镜像, 磁盘对拷..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# inputfile /dev/null(黑洞) /dev/zero(无限的空, 但是不占用磁盘空间)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# outfile 输出到当前目录的mydisk.img文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# blocksize 块设备大小")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# count 有多少个块组成这个设备")]),s._v("\nlosetup /dev/loop0 mydisk.img\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 环回接口的挂载, 将mydisk.img挂到/dev/loop0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mke2fs")]),s._v(" /dev/loop0\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式化为e2(ext2)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -t ext2 /dev/loop0 /mnt/ooxx\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将/dev/loop0设备挂载到/mnt/ooxx目录下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("whereis")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" bin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /bin/bash bin\nldd "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分析程序的动态数据库(依赖)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模仿根目录结构")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /lib64/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("libtinfo.so.5,libdl.so.2,libc.so.6,ld-linux-x86-64.so.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" ./lib64\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用{}的批量拷贝")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chroot")]),s._v(" ./\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把根目录切换到当前目录并启动 /bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成了以该目录作为根目录的bash启动")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"文件描述符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件描述符"}},[s._v("#")]),s._v(" 文件描述符")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -op "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lsof可以显示进程打开了哪些文件, $$当前bash进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cwd\tcurrent work d 当前目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rtd \troot 根目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# txt\t文本域, 进程加载的app代码块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mem\t分配的内存空间, 依赖的挂载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件描述符\t任何程序都有012三个文件描述符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0u\t标准输入\tu是读写都可以\t")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1u\t标准输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2u\t报错输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("8")]),s._v("<")]),s._v(" ooxx.txt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /proc/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("/fd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 8r offset偏移")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v("<&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read会读取到换行符, offset偏移量会移动, offset只在各自的fd中维护")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h4",{attrs:{id:"socket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[s._v("#")]),s._v(" socket")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("8")]),s._v("<>")]),s._v(" /dev/tcp/www.baidu.com/80\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启输入输出的文件描述符8指向tcp连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IPv4 TCP node01:54723->104.193.88.123:http (ESTABLISHED)")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"pipeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[s._v("#")]),s._v(" pipeline")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"proc目录-重定向操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proc目录-重定向操作符"}},[s._v("#")]),s._v(" proc目录, 重定向操作符")]),s._v(" "),a("blockquote",[a("p",[s._v("映射内核的变量属性等..")]),s._v(" "),a("p",[s._v("其中的数字是进程id")]),s._v(" "),a("p",[s._v("重定向 "),a("code",[s._v("> <")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ./ "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" ~/ls.out\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls程序 ./参数 1标准输出 >将输出重定向")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有两个流\t默认是读取文件输出到标准输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v("<")]),s._v(" ooxx.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" cat.out\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将cat的标准输入重定向到ooxx.txt, 输出重定向到cat.out")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read默认读取键盘, 遇到回车符结束, 并将输入的字符输出到 变量a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("0")]),s._v("<")]),s._v(" cat.out\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入重定向到cat.out文件")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果想重定向到文件描述符, 需要在> < 号后面跟上 & 符号, 以免将后面的文件描述符识别成文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ./ /ooxx "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" ls.out\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这种写法2指向1文件描述符指向的地方(标准输出), 所以需要先让1指向, 才能改变2的指向")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ./ /ooxx "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" ls.out "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现将1指向文件, 再将报错输出2指向1的指向")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"管道-不知道管道-linux白学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道-不知道管道-linux白学"}},[s._v("#")]),s._v(" 管道 - 不知道管道, linux白学")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("|")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -8 test.txxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -1\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取出前8行, 通过管道取最后一行")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"父子进程-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子进程-变量"}},[s._v("#")]),s._v(" 父子进程, 变量")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pstree\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看进程树")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\neche "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$100")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 子进程取不到, 因为进程隔离")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" x\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 导出变量, 再开启子进程, 子进程可以取到这个变量, 这就是为什么 /etc/profile目录下都有export语句, 让所有子进程都能读到这个变量="环境变量"')]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"指令块-代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令块-代码块"}},[s._v("#")]),s._v(" 指令块/代码块")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {  } 之间的空格不能省略, 可以执行多条指令 , ()也可以是代码块, 但是是子进程调用, {}是本进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sdffsdf"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解释指令块的时候, 会给管道前后的指令开启子进程去处理, 再用管道将这两个子进程的数据进行传输, 所以这里a的赋值作用域是在子进程里的, 不会影响本进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看管道子进程失败 -- 因为 $$ 优先级高于管道")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASHPID")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以查看管道子进程的效果")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASHPID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASHPID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将两段代码块用管道连接, 查看管道产生的子进程, 查看对应进程下的文件描述符管道 pipe")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" PID\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xxx PID")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /proc/PID/fd\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -op PID\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"pagecache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pagecache"}},[s._v("#")]),s._v(" pagecache")]),s._v(" "),a("blockquote",[a("p",[s._v("kernel 的 折中方案")])]),s._v(" "),a("h4",{attrs:{id:"系统调用-system-call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统调用-system-call"}},[s._v("#")]),s._v(" 系统调用 system call")]),s._v(" "),a("blockquote",[a("p",[s._v("int 0x80 - 中断, cpu的指令, 一个值, - 去寄存器的中断向量表中查找 - 可以调用callback代码块")]),s._v(" "),a("p",[s._v("用于切换用户态和内核态")]),s._v(" "),a("ul",[a("li",[s._v("app请求内核 - 触发中断 - cpu调用 - app保护现场 - kernel查找内存")]),s._v(" "),a("li",[s._v("如果缺页 - 触发DMA - app挂起\n"),a("ul",[a("li",[s._v("dma完成 - 触发中断 - app运行")])])]),s._v(" "),a("li",[s._v("否则直接返回")])])]),s._v(" "),a("h4",{attrs:{id:"演示程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#演示程序"}},[s._v("#")]),s._v(" 演示程序")]),s._v(" "),a("blockquote",[a("p",[s._v("写数据的时候 突然关机")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysh 脚本\tjava")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf *out*\njavac xxx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strace")]),s._v(" -ff -i out java xxx "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"第二节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二节"}},[s._v("#")]),s._v(" 第二节")]),s._v(" "),a("p",[s._v("pagecache")]),s._v(" "),a("p",[s._v("kernel 深入理解linux内核 深入理解计算机系统")]),s._v(" "),a("blockquote",[a("p",[s._v("回顾: cpu mmu 的虚拟地址和物理地址的转换")]),s._v(" "),a("p",[s._v("缺页: 因为程序是按需分配内存, 当程序运行过程中需要更多的内存, 产生缺页异常, 需要cpu再分配内存")]),s._v(" "),a("p",[s._v("程序启动步骤: 读取程序文件 -- txt ,")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pcstat /bin/hash\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 程序消耗的页数, 缓存的页数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("C程序会在内存中开辟 txt , data , heap , stack")]),s._v(" "),a("p",[s._v("运行相同的程序, 共享使用pagecache, 可以只占用一份空间")]),s._v(" "),a("p",[s._v("类似的, 相同文件被不同进程读到内存中也是使用相同位置的pagecache")]),s._v(" "),a("p",[s._v("pagecache 内核维护的 中间层")])]),s._v(" "),a("h4",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[s._v("#")]),s._v(" 案例")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("sysctl -a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" dirty\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 系统控制项")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/sysctl.conf\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改位置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# config start")]),s._v("\nvm.dirty_background_ratio\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台的, 内存占用达到多少百分比才能触发写的过程")]),s._v("\nvm.dirty_ratio\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 前台的, 申请页达到总量百分比, 程序阻塞, 或触发LRU")]),s._v("\nvm.dirty_background_bytes\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 字节数")]),s._v("\nvm.dirty_bytes\nvm.dirty_writeback_centisecs\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多久时间会触发写")]),s._v("\nvm.dirty_expire_centisecs\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脏页的生存周期最多多久")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# config end")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跑mysh 脚本\tjava ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf *out*\njavac xxx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strace")]),s._v(" -ff -i out java xxx "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后")]),s._v("\npcstat out.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用pcstat查看文件的缓存页/内存页")]),s._v("\nll -h "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" pcstat out.txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内存够用的时候, 使用内存, 有多少用多少")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拔电源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为dirty配置阈值/时间配置过大, 导致数据丢失, 并没有写到磁盘")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用普通流 FileOutputStream 和 BufferedOutputStream 的区别")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 普通流系统调用更多, Buffer是等数据足够8kB的时候再进行一次系统调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等到写满内存阈值, 可以看到被缓存的数据比例明显减少")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在启动一次调用, 发现原来被缓存的比例越来越少, ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h4",{attrs:{id:"追踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#追踪"}},[s._v("#")]),s._v(" 追踪")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 普通 FileOutputStream")]),s._v("\nwrite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123..9"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次都进行系统调用 用户态-内核态切换 保护现场 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# BufferOutputStream")]),s._v("\nwrite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123..123..123.."')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8190")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 系统调用单位次数更少")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 相差的速度就是为什么要减少系统调用的原因")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"bytebuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bytebuffer"}},[s._v("#")]),s._v(" ByteBuffer")]),s._v(" "),a("blockquote",[a("p",[s._v("可以分配堆内堆外 (内外针对jvm而言, 但还是在java进程的堆中)")]),s._v(" "),a("p",[s._v("拥有 pos limit capacity")]),s._v(" "),a("p",[s._v("flip\t设置limit, pos归零")]),s._v(" "),a("p",[s._v("compact\t压缩/整理数据, pos移到空位第一格, limit移到最后")])]),s._v(" "),a("h4",{attrs:{id:"randomaccessfile-filechannel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#randomaccessfile-filechannel"}},[s._v("#")]),s._v(" RandomAccessFile , FileChannel")]),s._v(" "),a("blockquote",[a("p",[s._v("seek")]),s._v(" "),a("p",[s._v("getChannel 拿到 nio 的 FileChannel 文件通道 , 获得 MappedByteBuffer")]),s._v(" "),a("p",[s._v("只有文件的通道才有 map (系统的mmap) , 得到一个和文件映射的内核pagecache (可以直接操作)")]),s._v(" "),a("p",[s._v("原来必须要 write (系统调用/用户-内核态切换) , 现在直接操作pagecache (不需要系统调用, 但还是使用了pagecache, 有上述丢数据问题, java无法解决)")]),s._v(" "),a("ul",[a("li",[s._v("可以用一些jni扩展库(c实现), 使用linux的Direct IO, 直接IO是忽略pagecache的 ; 需要自己写代码解决一致性和dirty等问题(自己管理pagecache) ; 可以自定义自己的pagecache...")])])]),s._v(" "),a("h4",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),a("blockquote",[a("p",[s._v("对于文件:\ton heap < off heap < mapped")]),s._v(" "),a("p",[s._v("netty\t\t\ton heap off heap")]),s._v(" "),a("p",[s._v("kafka log\tmapped")])]),s._v(" "),a("h4",{attrs:{id:"总结pagecache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结pagecache"}},[s._v("#")]),s._v(" 总结pagecache")]),s._v(" "),a("blockquote",[a("p",[s._v("减少硬件IO, 优先使用内存提速, 却产生可靠性问题")])]),s._v(" "),a("h2",{attrs:{id:"第三节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三节"}},[s._v("#")]),s._v(" 第三节")]),s._v(" "),a("h4",{attrs:{id:"网络io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络io"}},[s._v("#")]),s._v(" 网络io")]),s._v(" "),a("h4",{attrs:{id:"tcp参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp参数"}},[s._v("#")]),s._v(" TCP参数")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("tcpdump -nn -i eth port "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9090")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监控, 抓取数据包")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("TCP 面向连接的可靠的传输协议 - 三次握手 - 双方在内核开辟资源 - 着两个资源代表了这个连接")]),s._v(" "),a("p",[s._v("socket 是一个四元组 CIP CPORT SIP SPORT - 内核级 , 数据包可以通过这个四元组识别唯一的连接, 只要保持四元祖的唯一性, 可以在同个端口开启多个连接")]),s._v(" "),a("p",[s._v("文件描述符是对socket的抽象, 应用是通过操作文件描述符进行通信")])]),s._v(" "),a("h4",{attrs:{id:"backlog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backlog"}},[s._v("#")]),s._v(" backlog")]),s._v(" "),a("blockquote",[a("p",[s._v("核心允许再开两个TCP连接, 之后的不回复确认包, 进入 SYN_RECV, 连接失败")])]),s._v(" "),a("h4",{attrs:{id:"窗口机制-缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口机制-缓冲区"}},[s._v("#")]),s._v(" 窗口机制 缓冲区")]),s._v(" "),a("blockquote",[a("p",[s._v("MTU : 网卡可以看到, 发送包的总大小")]),s._v(" "),a("p",[s._v("MSS : 包体 (内容) 大小")]),s._v(" "),a("p",[s._v('如果需要发送比较大量的数据 , 需要一次发送很多包, 但是每个包都要来回接受"我收到了"的通信, 会浪费较多时间, 所以实现了一个窗口机制, 可以连续发送一定数量的包, server按序处理')]),s._v(" "),a("p",[s._v("但是如果server端的缓存(窗口?)满了, 之后发送的包就会丢失")])]),s._v(" "),a("h4",{attrs:{id:"nodelay-是否delay-优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelay-是否delay-优化"}},[s._v("#")]),s._v(" nodelay 是否delay(优化)")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("开启, 直接发送, 多次发送")])]),s._v(" "),a("li",[a("p",[s._v("关闭, 等攒到一定数量的包再进行发送,")])])])]),s._v(" "),a("h4",{attrs:{id:"oob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oob"}},[s._v("#")]),s._v(" OOB")]),s._v(" "),a("blockquote",[a("p",[s._v("先发一个包.. 只有一个值...")])]),s._v(" "),a("h4",{attrs:{id:"keepalive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keepalive"}},[s._v("#")]),s._v(" keepalive")]),s._v(" "),a("blockquote",[a("p",[s._v("不同层级的keepalive, 确认资源/连接是否还存在, 心跳")])]),s._v(" "),a("h4",{attrs:{id:"网络io模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络io模型"}},[s._v("#")]),s._v(" 网络IO模型")]),s._v(" "),a("p",[s._v("同步 异步 阻塞 非阻塞")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strace")]),s._v(" -ff -o out cmd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"bio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bio"}},[s._v("#")]),s._v(" BIO")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建连接并返回文件描述符 并且监听这个socket (*:8090) Listen状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Linux: socket - setsockopt - bind - listen")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerSocket")]),s._v(" socket "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 系统调用 accept 调用文件描述符(socket)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 得到连接后, 通过连接的客户端生成新的 socket 四元组 以及 文件描述符 (node001:8090->node02:34178) Establish状态")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//clone 系统调用, 新建线程/子进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//跟踪 new 的线程 recv 等待接收信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//学习linux的 man bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"nio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nio"}},[s._v("#")]),s._v(" NIO")])])}),[],!1,null,null,null);t.default=e.exports}}]);