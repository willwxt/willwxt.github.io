(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{435:function(e,a,s){"use strict";s.r(a);var t=s(45),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"去官网下载安装包-redis彻底安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去官网下载安装包-redis彻底安装"}},[e._v("#")]),e._v(" 去官网下载安装包 redis彻底安装")]),e._v(" "),s("h1",{attrs:{id:"解压"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解压"}},[e._v("#")]),e._v(" 解压")]),e._v(" "),s("p",[e._v("tar -zxvf redis-6.0.6.tar.gz\ncd redis-6.0.6")]),e._v(" "),s("h1",{attrs:{id:"安装-gcc-编译器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-gcc-编译器"}},[e._v("#")]),e._v(" 安装 gcc 编译器")]),e._v(" "),s("p",[e._v("yum install -y gcc")]),e._v(" "),s("h1",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])]),e._v(" "),s("p",[e._v("sudo yum install centos-release-scl\nsudo yum install devtoolset-7-gcc*\nscl enable devtoolset-7 bash")]),e._v(" "),s("h1",{attrs:{id:"编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[e._v("#")]),e._v(" 编译")]),e._v(" "),s("p",[e._v("make")]),e._v(" "),s("h1",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),s("p",[e._v("make install")]),e._v(" "),s("p",[e._v("安装redis6.0流程\n马士兵版")]),e._v(" "),s("h1",{attrs:{id:"首先-下载安装包-使用wget-如果没有wget-yum-install-wget-安装一下-这里引申出如果没有外网怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首先-下载安装包-使用wget-如果没有wget-yum-install-wget-安装一下-这里引申出如果没有外网怎么办"}},[e._v("#")]),e._v(" 首先, 下载安装包, 使用wget, 如果没有wget, yum install wget 安装一下 (这里引申出如果没有外网怎么办?)")]),e._v(" "),s("p",[e._v("wget https://download.redis.io/releases/redis-5.0.10.tar.gz\nls -l #下载完毕用这个命令可以查看当前目录下的文件")]),e._v(" "),s("h1",{attrs:{id:"其次-解压-解压其实只需要-tar-xf-redis-5-0-10-tar-gz-就会将内容解压到当前路径下-也就是生成-redis-5-0-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其次-解压-解压其实只需要-tar-xf-redis-5-0-10-tar-gz-就会将内容解压到当前路径下-也就是生成-redis-5-0-10"}},[e._v("#")]),e._v(" 其次, 解压, 解压其实只需要 tar xf redis-5.0.10.tar.gz 就会将内容解压到当前路径下, 也就是生成 redis-5.0.10")]),e._v(" "),s("p",[e._v("tar xf redis-5.0.10.tar.gz\nls -l #看下是否解压出来")]),e._v(" "),s("h1",{attrs:{id:"进入-redis-5-0-10-通读readme-md"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入-redis-5-0-10-通读readme-md"}},[e._v("#")]),e._v(" 进入 redis-5.0.10, 通读README.md")]),e._v(" "),s("h1",{attrs:{id:"发现-使用make编译-使用make-install-prefix-路径-把执行脚本安装到目标路径-使用make-disclean清理安装失败的临时文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发现-使用make编译-使用make-install-prefix-路径-把执行脚本安装到目标路径-使用make-disclean清理安装失败的临时文件"}},[e._v("#")]),e._v(" 发现, 使用make编译, 使用make install PREFIX={路径}把执行脚本安装到目标路径, 使用make disclean清理安装失败的临时文件")]),e._v(" "),s("h1",{attrs:{id:"make是linux自带指令-自动解析当前路径下makefile文件-一些没有makefile的软件可能需要-configure-生成-如nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make是linux自带指令-自动解析当前路径下makefile文件-一些没有makefile的软件可能需要-configure-生成-如nginx"}},[e._v("#")]),e._v(" make是linux自带指令, 自动解析当前路径下Makefile文件 (一些没有Makefile的软件可能需要 ./configure 生成, 如Nginx)")]),e._v(" "),s("h1",{attrs:{id:"makefile中需要用到-cc-c编译器-所以linux下需要安装gcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#makefile中需要用到-cc-c编译器-所以linux下需要安装gcc"}},[e._v("#")]),e._v(" Makefile中需要用到 cc (c编译器), 所以linux下需要安装gcc")]),e._v(" "),s("p",[e._v("yum install gcc")]),e._v(" "),s("h1",{attrs:{id:"编译成功后-make-prefix-some-other-directory-install-将运行脚本复制到指定目录-不指定的话默认路径是-usr-local-bin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译成功后-make-prefix-some-other-directory-install-将运行脚本复制到指定目录-不指定的话默认路径是-usr-local-bin"}},[e._v("#")]),e._v(" 编译成功后, make PREFIX=/some/other/directory install 将运行脚本复制到指定目录! 不指定的话默认路径是/usr/local/bin")]),e._v(" "),s("p",[e._v("make install")]),e._v(" "),s("h1",{attrs:{id:"坑-准备使用安装redis-server的脚本-utils-install-server-sh-之前-事先配置环境变量-否则需要手输启动路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#坑-准备使用安装redis-server的脚本-utils-install-server-sh-之前-事先配置环境变量-否则需要手输启动路径"}},[e._v("#")]),e._v(" (坑) 准备使用安装redis server的脚本./utils/install_server.sh 之前, 事先配置环境变量, 否则需要手输启动路径")]),e._v(" "),s("h1",{attrs:{id:"如果你指定了安装目录-并且不在环境变量中-如果你没有指定安装目录-默认的安装路径-usr-local-bin是默认在环境变量中的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果你指定了安装目录-并且不在环境变量中-如果你没有指定安装目录-默认的安装路径-usr-local-bin是默认在环境变量中的"}},[e._v("#")]),e._v(" (如果你指定了安装目录, 并且不在环境变量中, 如果你没有指定安装目录, 默认的安装路径/usr/local/bin是默认在环境变量中的!)")]),e._v(" "),s("p",[e._v("./utils/install_server.sh")]),e._v(" "),s("h1",{attrs:{id:"接下来你需要交互式的选择一些配置选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接下来你需要交互式的选择一些配置选项"}},[e._v("#")]),e._v(" 接下来你需要交互式的选择一些配置选项...")]),e._v(" "),s("p",[e._v("Port           : 6379\nConfig file    : /etc/redis/6379.conf\nLog file       : /var/log/redis_6379.log\nData dir       : /var/lib/redis/6379\nExecutable     : /usr/local/bin/redis-server\nCli Executable : /usr/local/bin/redis-cli")]),e._v(" "),s("h1",{attrs:{id:"选择了端口-配置文件-日志-rdb-启动脚本路径-之后-执行了以下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择了端口-配置文件-日志-rdb-启动脚本路径-之后-执行了以下"}},[e._v("#")]),e._v(" 选择了端口, 配置文件, 日志, rdb, 启动脚本路径 之后, 执行了以下")]),e._v(" "),s("p",[e._v("Copied /tmp/6379.conf => /etc/init.d/redis_6379 # 在/etc/init.d下生成server脚本redis_6379\nSuccessfully added to chkconfig!        # 开机启动\nSuccessfully added to runlevels 345!    # 启动等级\nStarting Redis server...                # 开启了redis")]),e._v(" "),s("h1",{attrs:{id:"现在你可以通过-service-的各种命令启动-停止-查看-redis-6379-的状态了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现在你可以通过-service-的各种命令启动-停止-查看-redis-6379-的状态了"}},[e._v("#")]),e._v(" 现在你可以通过 service 的各种命令启动, 停止, 查看 redis_6379 的状态了!")]),e._v(" "),s("p",[e._v("service redis_6379 status # restart, start, stop ..")]),e._v(" "),s("h1",{attrs:{id:"看看他生成的配置文件吧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#看看他生成的配置文件吧"}},[e._v("#")]),e._v(" 看看他生成的配置文件吧")]),e._v(" "),s("p",[e._v("vi /etc/redis/6379.conf")]),e._v(" "),s("h1",{attrs:{id:"找到network下的-bind-127-0-0-1-将其注释-取消绑定以便外网访问-并将保护模式取消-protected-mode-yes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找到network下的-bind-127-0-0-1-将其注释-取消绑定以便外网访问-并将保护模式取消-protected-mode-yes"}},[e._v("#")]),e._v(" 找到NETWORK下的 bind 127.0.0.1 , 将其注释, 取消绑定以便外网访问, 并将保护模式取消 protected-mode yes")]),e._v(" "),s("h1",{attrs:{id:"general下的-daemonize-yes-已经置为保护进程-后台进程-启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general下的-daemonize-yes-已经置为保护进程-后台进程-启动"}},[e._v("#")]),e._v(" GENERAL下的 daemonize yes 已经置为保护进程(后台进程)启动")])])}),[],!1,null,null,null);a.default=r.exports}}]);